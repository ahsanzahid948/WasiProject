
@using System.Configuration;

@{string ImagePath = ConfigurationManager.AppSettings["ImageLocationURL"].ToString();}

<head>
    <title>Inventory</title>


</head>

@section styles {

    <link href="~/Content/assets/css/dropzone.css" rel="stylesheet" />
    <style>


        .dz-max-files-reached {
            border-color: red;
        }
    </style>
}


<div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
    <div class="d-flex">
        <div class="breadcrumb">
            <a href="dashboard.cshtml" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
            <span class="breadcrumb-item active">Inventory</span>
        </div>
        <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
    </div>
</div>
<div class="card">
    <div class="card-header header-elements-inline search-header">
        <h5 class="card-title">
            <i class=""></i>Inventory
        </h5>

    </div>



    <div class="card-body">
        <ul class="nav nav-tabs">
            <li class="nav-item"><a href="#Info" class="nav-link active show" data-toggle="tab">Info </a></li>
            <li class="nav-item dropdown">
                <a href="#" class="nav-link" data-toggle="dropdown">Optional Info <i class="fas fa-angle-down"></i></a>


                <div class="dropdown-menu">
                    <a class="dropdown-item nav-link" href="#Options" data-toggle="tab">Options</a>
                    <a class="dropdown-item" href="#AdditionalInfo" data-toggle="tab">Additional Info</a>

                </div>



            </li>
            @*<li class="nav-item"><a href="#PendingOrders" class="nav-link" data-toggle="tab">Pending Orders</a></li>*@
            <li class="nav-item"><a href="#Properties" class="nav-link" data-toggle="tab">Properties</a></li>
            <li class="nav-item"><a href="#Notes" class="nav-link" data-toggle="tab">Notes</a></li>
            <li class="nav-item"><a href="#Modifiers" class="nav-link" data-toggle="tab">Modifiers</a></li>

            <li class="nav-item"><a href="#PriceLevelsInfo" class="nav-link" data-toggle="tab">Price Level Info</a></li>
            <li class="nav-item"><a href="#OrderingInfo" class="nav-link" data-toggle="tab">Ordering Info</a></li>
            <li class="nav-item"><a href="#SpecialPricing" class="nav-link" data-toggle="tab">Special Pricing</a></li>
            @*<li class="nav-item"><a href="#MatriInfo" class="nav-link" data-toggle="tab">Matrix</a></li>*@
            <li class="nav-item"><a href="#SalesHistory " class="nav-link" data-toggle="tab">Sales History </a></li>
            <li class="nav-item"><a href="#Recipe" class="nav-link" data-toggle="tab">Recipe </a></li>
            <li class="nav-item"><a href="#Printers" class="nav-link" data-toggle="tab">Printers</a></li>
            <li class="nav-item"><a href="#Image" class="nav-link" data-toggle="tab">Image </a></li>



        </ul>
        <form id="InventoryForm">
            @Html.AntiForgeryToken()
            <div class="tab-content">

                <div class="tab-pane fade in active show" id="Info">




                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Department
                                    <span class="text-danger"> * </span>
                                </label>
                                <div class="col-md-8">
                                    <select class=" form-control" id="ddlDepartmentID" required>
                                        <option>Select Department</option>
                                        <option></option>


                                    </select>
                                    <input type="hidden" id="txtStoreID" value="0">
                                    <input type="hidden" id="txtItemType" value="0">
                                    <input type="hidden" id="txtRedirection" value="1">
                                </div>
                            </div>



                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Item Number
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtItemNo" name="txtItemNo" maxlength="20" class="form-control" required onkeyup="ClearMessage()" onchange="CheckAvailability();" />
                                    <span id="message"></span>
                                    <input type="hidden" id="IsValidID" value="true">
                                    <input type="hidden" id="txtEdit" value="0">
                                    <input type="hidden" id="txtRowID" value="">

                                </div>
                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Description
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="" id="txtDescription" name="txtDescription" maxlength="30" class="form-control" required />


                                </div>
                            </div>


                        </div>





                    </div>
                    <div class="row">


                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Avg Cost
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">
                                    <input type="text" id="txtAvgCost" value="0.00" name="txtAvgCost" maxlength="25" class="form-control" required />



                                </div>
                            </div>


                        </div>


                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Price You Charge
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="0.00" id="txtPriceYouCharge" name=" txtPriceYouCharge" maxlength="25" class="form-control" required onkeypress="return isNumberKey(event,this)" onchange="CalculatePriceWithTax()" />


                                </div>
                            </div>


                        </div>


                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Second Description

                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtSecondDescription" name=" txtSecondDescription" maxlength="30" class="form-control" />


                                </div>
                            </div>


                        </div>





                    </div>

                    <div class="row">





                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Number In Stock

                                </label>
                                <div class="col-md-8">
                                    <input type="text" value="0" id="txtNumberInStock" name=" txtNumberInStock" maxlength="25" class="form-control " required onkeypress="return isNumberKey(event,this)" />


                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Price With Tax

                                </label>
                                <div class="col-md-8">
                                    <input type="text" value="0.00" id="txtPriceWithTax" name="txtPriceWithTax" maxlength="25" class="form-control " required onkeypress="return isNumberKey(event,this)" disabled />


                                </div>
                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Bar Tax

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkBarTax" value="true" name="chkBarTax">
                                        <input type="hidden" value="false" name="chkBarTax" />
                                        <label class="custom-control-label" for="chkBarTax"></label>

                                    </div>
                                </div>

                            </div>


                        </div>

                    </div>
                    <div class="row">

                        <div class="col-md-2">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Tax 1

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkTax1" value="true" checked name="chkTax1">
                                        <input type="hidden" value="false" name="chkTax1" />
                                        <label class="custom-control-label" for="chkTax1"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-2">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Tax 2

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkTax2" value="true" name="chkTax2">
                                        <input type="hidden" value="false" name="chkTax2" />
                                        <label class="custom-control-label" for="chkTax2"></label>
                                    </div>

                                </div>

                            </div>


                        </div>

                        <div class="col-md-2">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Tax 3

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkTax3" value="true" name="chkTax3">
                                        <input type="hidden" value="false" name="chkTax3" />
                                        <label class="custom-control-label" for="chkTax3"></label>
                                    </div>

                                </div>

                            </div>


                        </div>





                        <div class="col-md-2">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Tax 4

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkTax4" value="true" name="chkTax4">
                                        <input type="hidden" value="false" name="chkTax4" />
                                        <label class="custom-control-label" for="chkTax4"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-2">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Tax 5

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkTax5" value="true" name="chkTax5">
                                        <input type="hidden" value="false" name="chkTax5" />
                                        <label class="custom-control-label" for="chkTax5"></label>
                                    </div>

                                </div>

                            </div>


                        </div>


                        <div class="col-md-2">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Tax 6

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkTax6" value="true" name="chkTax6">
                                        <input type="hidden" value="false" name="chkTax6" />
                                        <label class="custom-control-label" for="chkTax6"></label>
                                    </div>

                                </div>

                            </div>


                        </div>

                    </div>

                </div>

                <!-- Div Options Info Orders-->

                <div class="tab-pane fade in " id="Options">

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Bonus Points
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="number" value="0" id="txtBonusPoints" name=" RegistrationNumber" maxlength="10" class="form-control" required />


                                </div>
                            </div>
                        </div>



                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Bar Codes No
                                    <span class="text-danger"> * </span>
                                </label>
                                <div class="col-md-8">
                                    <input type="number" value="0" id="txtBarCodesNo" name=" RegistrationNumber" maxlength="10" class="form-control" required />



                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Commision
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">
                                    <select class=" form-control" id="ddlCommisionTypeID">

                                        <option value="0" selected>% of gross Profit</option>
                                        <option value="1">% of gross Sales</option>
                                        <option value="2">Amount</option>

                                    </select>
                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Commission Amount

                                </label>
                                <div class="col-md-8">
                                    <input type="text" value="" id="txtCommissionAmount" name="txtCommissionAmount" class="form-control" onkeypress="return isNumberKey(event,this)" />




                                </div>
                            </div>


                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Unit Type

                                </label>
                                <div class="col-md-8">
                                    <input type="text" value="" id="txtUnitType" name=" RegistrationNumber" maxlength="10" class="form-control" />




                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Unit Size

                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtUnitSize" name="txtUnitSize" class="form-control" onkeypress="return isNumberKey(event,this)" />


                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Location

                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtLocation" name=" RegistrationNumber" maxlength="20" class="form-control" />

                                </div>
                            </div>


                        </div>





                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Modifier Item

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkModifierItem" value="true" name="chkModifierItem">

                                        <label class="custom-control-label" for="chkModifierItem"></label>
                                    </div>

                                </div>

                            </div>


                        </div> <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Disable this Item

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkDisablethisItem" value="true" name="chkDisablethisItem">

                                        <label class="custom-control-label" for="chkDisablethisItem"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Food Stampable

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkFoodStampable" value="true" name="chkFoodStampable">

                                        <label class="custom-control-label" for="chkFoodStampables"></label>
                                    </div>

                                </div>

                            </div>


                        </div>


                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Exclude From Account Limit

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkExcludeFromAccountLimit" value="true" name="chkExcludeFromAccountLimit">

                                        <label class="custom-control-label" for="chkExcludeFromAccountLimit"></label>
                                    </div>

                                </div>

                            </div>


                        </div> <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Prompt Quantity

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPromptQuantity" value="true" name="chkPromptQuantity">

                                        <label class="custom-control-label" for="chkPromptQuantity"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Auto-Weigh

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkAutoWeigh" value="true" name="chkAutoWeigh">

                                        <label class="custom-control-label" for="chkAutoWeigh"></label>
                                    </div>

                                </div>

                            </div>


                        </div>


                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Check ID Before Selling

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkCheckIDBeforeSelling" value="true" name="chkCheckIDBeforeSelling">

                                        <label class="custom-control-label" for="chkCheckIDBeforeSelling"></label>
                                    </div>

                                </div>

                            </div>


                        </div> <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Prompt Price

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPromptPrice" value="true" name="chkPromptPrice">

                                        <label class="custom-control-label" for="chkPromptPrice"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Use Serial/Batch No

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkUseSerial" value="true" name="chkUseSerial">

                                        <label class="custom-control-label" for="chkUseSerial"></label>
                                    </div>

                                </div>

                            </div>


                        </div>


                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Check ID 2 Before Selling

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkCheckID2BeforeSelling" value="true" name="chkCheckID2BeforeSelling">

                                        <label class="custom-control-label" for="chkCheckID2BeforeSelling"></label>
                                    </div>

                                </div>

                            </div>


                        </div> <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Allow Buyback

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkAllowBuyback" value="true" name="chkAllowBuyback">

                                        <label class="custom-control-label" for="chkAllowBuyback"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Special Permission

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkSpecialPermission" value="true" name="chkSpecialPermission">

                                        <label class="custom-control-label" for="chkSpecialPermission"></label>
                                    </div>

                                </div>

                            </div>


                        </div>


                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Count This Item

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkCountThisItem" value="true" name="chkCountThisItem" checked>

                                        <label class="custom-control-label" for="chkCountThisItem"></label>
                                    </div>

                                </div>

                            </div>


                        </div> <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Print On Receipt

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPrintOnReceipt" value="true" name="chkPrintOnReceipt">

                                        <label class="custom-control-label" for="chkPrintOnReceipt"></label>
                                    </div>

                                </div>

                            </div>


                        </div>



                    </div>
                    <!-- ALternate SKU-->
                    <div class="card">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddAlternateSKUsDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' onclick="NewSKUID()" data-target='#AlternateSkusModal' style="background-color:white;">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Alternate SKUs</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblAlternateSkus">
                                <thead>
                                    <tr>
                                        <th hidden>ID</th>
                                        <th>Alternate SKUs</th>
                                        <th></th>

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <!-- Tag  Along Item-->
                    <div class="card">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddTagAlongItemsDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' data-target='#TagAlongItemsModal' style="background-color:white;" onclick="NewTagAlongItem()">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Tag Along Items</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblTagAlongItems">
                                <thead>
                                    <tr>

                                        <th>Tag Along Items</th>
                                        <th></th>

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- Div AdditionalInfo  Orders-->

                <div class="tab-pane fade in " id="AdditionalInfo">

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Discount Type

                                </label>

                                <div class="col-md-8">

                                    <select id="ddlDiscountTypeID" class="form-control" name="ddlDiscountTypeID">
                                        <option value="1" selected>Percent </option>
                                        <option value="2">Dollar Amount </option>
                                    </select>

                                </div>
                            </div>
                        </div>



                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    General ledger Number

                                </label>
                                <div class="col-md-8">
                                    <input type="text" value="" id="txtGeneralledgerNumber" name="txtGeneralledgerNumber" maxlength="20" class="form-control" />



                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Scale Item Type

                                </label>

                                <div class="col-md-8">

                                    <select id="ddlScaleItemTypeID" class="form-control" name="ddlScaleItemTypeID">
                                        <option value="0">Sold By Piece </option>
                                        <option value="1">Weighed on Scale</option>
                                        <option value="2">Weighed on Tare</option>
                                        <option value="3">Barcodade</option>
                                        <option value="4">Barcoded and Sold piece </option>

                                    </select>

                                </div>

                            </div>


                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Prompt For Discription

                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtPromptForDiscription" name="txtPromptForDiscription" class="form-control" onkeypress="return isNumberKey(event,this)" />
                                </div>
                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Limit Qty On Invoice
                                    <span class="text-danger">*</span>
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="0" id="txtLimitQtyOnInvoice" name="txtLimitQtyOnInvoice" class="form-control" required onkeypress="return isNumberKey(event,this)" />

                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Days Valid
                                    <span class="text-danger">*</span>
                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="0" id="txtDaysValid" name="txtDaysValid" class="form-control" required onkeypress="return isNumberKey(event,this)" />

                                </div>
                            </div>
                        </div>




                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Prompt Completion Date

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPromptCompletationDate" value="true" name="chkPromptCompletationDate">

                                        <label class="custom-control-label" for="chkPromptCompletationDate"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Exclude From Loyalty Plan

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkExcludeFromLoyaltyPlan" value="true" name="chkExcludeFromLoyaltyPlan">

                                        <label class="custom-control-label" for="chkExcludeFromLoyaltyPlan"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Print Ticket

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPrintTicket" value="true" name="chkPrintTicket">

                                        <label class="custom-control-label" for="chkPrintTicket"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Never Print In Kitchen

                                </label>

                                <div class="col-md-8">

                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkNeverPrintInKitchen" value="true" name="chkNeverPrintInKitchen">
                                        <input type="hidden" value="false" name="chkNeverPrintInKitchen" />
                                        <label class="custom-control-label" for="chkNeverPrintInKitchen"></label>
                                    </div>
                                </div>
                            </div>


                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Prompt Invoice Notes

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPromptInvoiceNotes" value="true" name="chkPromptInvoiceNotes">

                                        <label class="custom-control-label" for="chkPromptInvoiceNotes"></label>
                                    </div>

                                </div>

                            </div>


                        </div> <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Scale Single Deduct

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkScaleSihgleDeduct" value="true" name="chkScaleSihgleDeduct">

                                        <label class="custom-control-label" for="chkScaleSihgleDeduct"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Sell As IS

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkSellAsIS" value="true" name="chkSellAsIS">

                                        <label class="custom-control-label" for="chkSellAsIS"></label>
                                    </div>

                                </div>

                            </div>


                        </div>


                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Prompt Description

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPromptdescription" value="true" name="chkPromptdescription">

                                        <label class="custom-control-label" for="chkPromptdescription"></label>
                                    </div>

                                </div>

                            </div>


                        </div> <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Allow Returns

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkAllowReturns" value="true" name="chkAllowReturns">

                                        <label class="custom-control-label" for="chkAllowReturns"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Liability Item

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkLiabilityItem" value="true" name="chkLiabilityItem">
                                        <label class="custom-control-label" for="chkLiabilityItem"></label>
                                    </div>

                                </div>

                            </div>


                        </div>


                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Require Customer

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkRequireCustomer" value="true" name="chkRequireCustomer">
                                        <label class="custom-control-label" for="chkRequireCustomer"></label>
                                    </div>

                                </div>

                            </div>


                        </div> <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Allow On Deposit Invoices
                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkAllowOnDepositInvoices" value="true" name="chkAllowOnDepositInvoices">
                                        <label class="custom-control-label" for="chkAllowOnDepositInvoices"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Allow On Fleet Card

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkAllowOnFleetCard" value="true" name="chkAllowOnFleetCard">
                                        <label class="custom-control-label" for="chkAllowOnFleetCard"></label>
                                    </div>

                                </div>

                            </div>


                        </div>


                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Display Tax In Price

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkDisplayTaxInPrice" value="true" name="chkDisplayTaxInPrice">

                                        <label class="custom-control-label" for="chkDisplayTaxInPrice"></label>
                                    </div>

                                </div>

                            </div>


                        </div> <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Disable Inventory Upload

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkDisableInventoryUpload" value="true" name="chkDisableInventoryUpload">
                                        <label class="custom-control-label" for="chkDisableInventoryUpload"></label>
                                    </div>

                                </div>

                            </div>


                        </div>



                    </div>


                </div>

                <!-- Div Pending Orders-->

                <div class="tab-pane fade in " id="PendingOrders">


                    <!-- BEGIN EXAMPLE TABLE PORTLET-->

                    <div class="card">
                        <div class="card-header header-elements-inline bg-orange-800">
                            <h5 class="card-title"> <span class="font-weight-semibold">Search</span> </h5>
                            <div class="header-elements">
                                <div class="list-icons"> <a class="list-icons-item" data-action="collapse"></a> </div>
                            </div>
                        </div>
                        <div class="card-body" style="margin-top: 10px;">



                            <div class="form-check-inline">

                                <input type="radio" class="form-check-input" name="rdPendingOrdersSearch">Open

                            </div>
                            <div class="form-check-inline">

                                <input type="radio" class="form-check-input" name="rdPendingOrdersSearch">Complete

                            </div>
                            <div class="form-check-inline disabled">

                                <input type="radio" class="form-check-input" name="rdPendingOrdersSearch">Cancel

                            </div>


                        </div>
                    </div>
                    <div class="card">
                        <!-- BEGIN EXAMPLE TABLE PORTLET-->
                        @*// add patient*@
                        <div class="card-header header-elements-inline bg-orange-800">

                            <h5 class="card-title">

                                <span class="font-weight-semibold">Pending Orders</span>
                            </h5>
                            <div style="text-align:right; padding-left:90px;">



                            </div>

                        </div>


                        <div class="card-body">
                            <table class="table datatable-button-html5-columns dataTable no-footer" id="dtEmployeeList">
                                <thead>
                                    <tr>
                                        <th>Item</th>
                                        <th> Store</th>
                                        <th> Due Date </th>

                                        <th>PickUp Type </th>
                                        <th> Status </th>
                                        <th> Options </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td></td>
                                        <td> </td>
                                        <td>   </td>
                                        <td>  </td>
                                        <td>  </td>
                                        <td>
                                            <div class='list-icons'>
                                                <div class='dropdown hide'>
                                                    <a href='#' class='btn  bg-orange-400 btn-sm' data-toggle='dropdown' aria-expanded='true'>

                                                        <i class='icon-menu9'></i>
                                                    </a>
                                                    <div class='dropdown-menu dropdown-menu-right hide' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>
                                                        <span class='red-tooltip' data-toggle='tooltip' title='Complete This Order'><button type='button' class='btn bg-blue btn-sm authorizeOrNotUpdate' style='color:red'><b><i class='icon-bar'></i></b></button></span>
                                                        <span class='red-tooltip' data-toggle='tooltip' title='Cancel This Order'><button type='button' class='btn bg-danger btn-sm authorizeOrNotDelete' style='color:white'><b><i class='icon-bin'></i></b></button></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>



                                    </tr>



                                </tbody>

                            </table>
                        </div>
                    </div>






                </div>

                <!-- Div Properties -->
                <div class="tab-pane fade in " id="Properties">
                    <div class="card mt-4">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddInventoryPropertiesDetails" class='btn   btn-labeled btn-labeled-left btn-sm' onclick="NewInventoryProperties()" data-toggle='modal' data-target='#PropertiesModal' style="background-color:white;">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Properties</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="dtInventoryProperties">
                                <thead>
                                    <tr>
                                        <th hidden>ID</th>
                                        <th>Property</th>
                                        <th>Value</th>
                                        <th>Store with the Invoice when sold</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- Div Notes -->
                <div class="tab-pane fade in  show" id="Notes">




                    <div class="row">
                        <div class="col-md-2">



                        </div>
                        <div class="col-md-8">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Notes

                                </label>

                                <div class="col-md-10">
                                    <textarea class="form-control" rows="10" id="txtInventoryNotes"></textarea>

                                </div>
                            </div>


                        </div>


                    </div>






                </div>
                <!-- Div Modifiers-->

                <div class="tab-pane fade in  show" id="Modifiers">





                    <!-- BEGIN EXAMPLE TABLE PORTLET-->
                    <div>
                        <div class="card">
                            <div class="card-header header-elements-inline bg-orange-800">
                                <h5 class="card-title"> <span class="font-weight-semibold">Select Modifier</span> </h5>
                                <div class="header-elements">
                                    <div class="list-icons"> <a class="list-icons-item" data-action="collapse"></a> </div>
                                </div>
                            </div>
                            <div class="card-body" style="margin-top: 10px;">
                                <div class="form-check-inline">

                                    <input type="radio" id="rdGroupItemSearch" class="form-check-input" value="group" name="Item" checked>Group Item

                                </div>

                                <div class="form-check-inline">

                                    <input type="radio" id="rdIndividualItemSearch" class="form-check-input" value="=individual" name="Item">Individual Item

                                </div>




                            </div>
                        </div>
                    </div>

                    <!-- Div Add Individual Modifiers-->
                    <div id="Individualdivinfo">
                        <div class="card">
                            <div class="card-header header-elements-inline search-header">
                                <h5 class="card-title">

                                    <button type='button' id="btnAddIndividualModifierDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' data-target='#IndividualModal' onclick="NewIndividualModifier()" style="background-color:white;">
                                        <b><i class="icon-plus3"></i></b>
                                        Add
                                    </button>
                                    <span> Individual Modifier</span>

                                </h5>


                            </div>
                            <div class="card-body cardNoPaging">


                                <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblModifier">
                                    <thead>
                                        <tr>

                                            <th>Item No</th>
                                            <th>Description</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <!-- Div Add Group Modifiers-->
                    <div id="Groupdivinfo">
                        <div class="card">
                            <div class="card-header header-elements-inline search-header">
                                <h5 class="card-title">

                                    <button type='button' id="btnAddGroupModifierDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' data-target='#GroupModal' style="background-color:white;" onclick="NewGroupModifier();">
                                        <b><i class="icon-plus3"></i></b>
                                        Add
                                    </button>
                                    <span> Group Modifier</span>

                                </h5>


                            </div>
                            <div class="card-body cardNoPaging">


                                <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblGroupModifier">
                                    <thead>
                                        <tr>
                                            <th hidden>ID</th>
                                            <th hidden>Sr</th>
                                            <th hidden>GMID</th>
                                            <th>Description</th>
                                            <th>Prompt</th>
                                            <th>Charge</th>
                                            <th>No. To Select</th>
                                            <th>Forced</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>









                </div>

                <!-- Div PriceLevelsinfo -->
                <div class="tab-pane fade in  show" id="PriceLevelsInfo">





                    <div class="card mt-4">
                        <div class="card-header header-elements-inline search-header">

                            <h5 class="card-title">

                                <span class="font-weight-semibold">Price Levels <small>( Customer can automatically be charged one of 26 price levels. )</small></span>
                            </h5>


                        </div>


                        <div class="card-body cardNoPaging">

                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="dtPriceLevelsList">
                                <thead>
                                    <tr>
                                        <th hidden>Level</th>
                                        <th>Level</th>
                                        <th>Amount( $ )</th>
                                        <th>Percent ( % ) </th>
                                        <th>Enabled </th>
                                    </tr>
                                </thead>
                                <tbody>



                                    @*<tr>


                                    <td>A</td>
                                    <td><input type="text" class="form-control" value="0.00" onkeypress="return isNumberKey(event,this)" /> </td>
                                    <td><input type="text" class="form-control" value="0.00" onkeypress="return isNumberKey(event,this)" /></td>
                                    <td><div class="custom-control custom-checkbox"><input type="checkbox" class="custom-control-input form-control" id="LevelA" /><label class="custom-control-label" for="LevelA" style="margin-left:10px"></label></div> </td>

                                </tr>*@
                                </tbody>

                            </table>
                        </div>
                    </div>






                </div>

                <!-- Div Ordering info-->
                <div class="tab-pane fade in  show" id="OrderingInfo">



                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Reorder Quantity
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="number" value="0" id="txtReorderQuantity" name=" txtReorderQuantity" maxlength="10" class="form-control" required onkeypress="return isNumberKey(event,this)" />


                                </div>
                            </div>
                        </div>



                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Reorder Level
                                    <span class="text-danger"> * </span>
                                </label>
                                <div class="col-md-8">
                                    <input type="number" value="0" id="txtReorderLevel" name="txtReorderLevel" maxlength="10" class="form-control" required onkeypress="return isNumberKey(event,this)" />


                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Reorder Cost
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="0" id="txtReorderCost" name="txtReorderCost" maxlength="10" class="form-control" required onkeypress="return isNumberKey(event,this)" />




                                </div>
                            </div>


                        </div>
                    </div>





                    <!-- Tag  Along Item-->
                    <div class="card">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddTagAlongItemsDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' data-target='#OrderingInfoModal' style="background-color:white;" onclick="NewOrderingInfoItem()">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Pricing From Vendor</span>

                            </h5>


                        </div>
                        <div class="card-body">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblVendor">
                                <thead>
                                    <tr>
                                        <th hidden>ID</th>
                                        <th hidden>sr.</th>
                                        <th hidden>VendorNo</th>
                                        <th>Vendor</th>
                                        <th>Part No</th>
                                        <th>Cost Per</th>
                                        <th>Case Cost</th>
                                        <th>Per Case</th>
                                        <th>Preferred</th>
                                        <th></th>




                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>








                </div>

                <!-- Div Special  Pricing-->
                <div class="tab-pane fade in  show" id="SpecialPricing">





                    <!-- Sales Pricing-->
                    <div class="card">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddSalePricingDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' onclick="NewSalePrice()" data-target='#SalePricingModal' style="background-color:white;">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Sales Pricing</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblSalePricing">
                                <thead>
                                    <tr>
                                        <th hidden>SalePriceTypeID</th>
                                        <th hidden>Price</th>
                                        <th hidden>Percent</th>
                                        <th>Sale Pricing</th>
                                        <th>Price/Percent</th>
                                        <th>Sale Start</th>
                                        <th>Sale End</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Bulk Pricing-->
                    <div class="card">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddBulkPricingDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' onclick="NewBulkPrice()" data-target='#BulkPricingModal' style="background-color:white;">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Bulk Pricing</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblBulkPricing">
                                <thead>
                                    <tr>
                                        <th hidden>BulkPriceTypeID</th>
                                        <th hidden>Price</th>
                                        <th>Description</th>
                                        <th>Bulk Price Type</th>
                                        <th>Quantity</th>
                                        <th>Charges / Percentage off</th>

                                        <th></th>

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Time Based Pricing-->
                    <div class="card">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddTimeBasedPricingDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' onclick="NewTimeBasedPricing()" data-target='#TimeBasedPricingModal' style="background-color:white;">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Time Based Pricing</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblTimeBasedPricing">
                                <thead>
                                    <tr>
                                        <th hidden>DayID</th>
                                        <th hidden>PriceType</th>
                                        <th hidden>Price</th>
                                        <th hidden>STime</th>
                                        <th hidden>ETime</th>
                                        <th>Day</th>
                                        <th>Time</th>
                                        <th>Time Based Price</th>
                                        <th></th>

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>


                </div>

                <!-- Div Matric info-->
                <div class="tab-pane fade in  show" id="MatriInfo">

                    <div class="card">
                        <div class="card-header header-elements-inline bg-orange-800">
                            <h5 class="card-title"> <span class="font-weight-semibold">Matrix</span> </h5>
                            <div class="header-elements">
                                <div class="list-icons"> <a class="list-icons-item" data-action="collapse"></a> </div>
                            </div>
                        </div>
                        <div class="card-body" style="margin-top: 10px;">


                            <div class="form-group row">
                                <div class="col-md-6">


                                    <label class="col-md-5 control-label">Style</label>
                                    <div class="col-md-7">
                                        <input type="text" id="txtMatrixStyle" name="txtStyle" class="form-control">

                                    </div>

                                </div>
                                <div class="col-md-6">
                                    <label class="col-md-5 control-label ">Size</label>
                                    <div class="col-md-7">
                                        <input type="text" id="txtMatrixSize" name="txtSize" class="form-control">

                                    </div>

                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-6">
                                    <label class="col-md-5 control-label">Color</label>
                                    <div class="col-md-7">
                                        <input type="text" id="txtMatrixColor" name="txtColor" class="form-control">

                                    </div>
                                </div>
                            </div>




                        </div>
                    </div>



                    <div class="card">
                        <!-- BEGIN EXAMPLE TABLE PORTLET-->
                        @*// add patient*@
                        <div class="card-header header-elements-inline bg-orange-800">

                            <h5 class="card-title">

                                <span class="font-weight-semibold"> </span>
                            </h5>
                            <div style="text-align:right; padding-left:90px;">



                            </div>

                        </div>


                        <div class="card-body">
                            <table class="table datatable-button-html5-columns dataTable no-footer" id="dtMatrixList">
                                <thead>
                                    <tr>
                                        <th>Serial/Batch No</th>
                                        <th> Quantity</th>
                                        <th>PO NO </th>
                                        <th> </th>


                                    </tr>

                                </thead>
                                <tbody>
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>


                                        <td>
                                            <div class='list-icons'>
                                                <div class='dropdown hide'>
                                                    <a href='#' class='btn  bg-orange-400 btn-sm' data-toggle='dropdown' aria-expanded='true'>

                                                        <i class='icon-menu9'></i>
                                                    </a>
                                                    <div class='dropdown-menu dropdown-menu-right hide' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>
                                                        <span class='red-tooltip' data-toggle='tooltip' title='Add Pricing From Vendor'><button type='button' class='btn bg-blue btn-sm authorizeOrNotUpdate' style='color:red'><b><i class='icon-bar'></i></b></button></span>
                                                        <span class='red-tooltip' data-toggle='tooltip' title='Remove Pricing From Vendor'><button type='button' class='btn bg-danger btn-sm authorizeOrNotDelete' style='color:white'><b><i class='icon-bin'></i></b></button></span>
                                                        <span class='red-tooltip' data-toggle='tooltip' title='Set This Vendor As Preford'><button type='button' class='btn bg-blue btn-sm authorizeOrNotUpdate' style='color:brown'><b><i class='icon-bar'></i></b></button></span>
                                                    </div>

                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>

                            </table>
                        </div>
                    </div>






                </div>



                <!-- Div Sales History info-->
                <div class="tab-pane fade in  show" id="SalesHistory">





                    <div class="card">
                        <!-- BEGIN EXAMPLE TABLE PORTLET-->
                        @*// add patient*@
                        <div class="card-header header-elements-inline">

                            <h5 class="card-title">

                                <span class="font-weight-semibold">Sales  History</span>
                            </h5>
                            <div style="text-align:right; padding-left:90px;">



                            </div>

                        </div>


                        <div class="card-body">
                            <table class="table datatable-button-html5-columns dataTable no-footer" id="dtSalesHistoryList">
                                <thead>
                                    <tr>
                                        <th>Date Time</th>
                                        <th> Store ID </th>
                                        <th> Invoice # </th>
                                        <th> Quantity </th>
                                        <th>Price Per</th>
                                        <th> Cost Per  </th>
                                        <th> Cust # </th>
                                        <th> Serial # </th>




                                    </tr>
                                </thead>
                                <tbody></tbody>

                            </table>
                        </div>
                    </div>






                </div>
                <!-- Div Recipe info-->
                <div class="tab-pane fade in" id="Recipe">


                    <!-- Recipe-->
                    <div class="card  mt-4">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddRecipeDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' data-target='#RecipeModal' style="background-color:white;">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Recipe</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblRecipe">
                                <thead>
                                    <tr>
                                        <th>Item Number</th>
                                        <th> Description</th>
                                        <th>Quantity</th>
                                        <th>Yield</th>
                                        <th>Cost</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>












                </div>


                <div class="tab-pane fade in " id="Printers">
                    <div class="card">
                        <!-- BEGIN EXAMPLE TABLE PORTLET-->
                        @*// add patient*@
                        <div class="card-header header-elements-inline">

                            <h5 class="card-title">

                                <span class="font-weight-semibold">Printers</span>
                            </h5>
                            <div style="text-align:right; padding-left:90px;">



                            </div>

                        </div>


                        <div class="card-body">
                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblPrinterList">
                                <thead>
                                    <tr>


                                        <th>Printer Name </th>
                                        <th>Enabled</th>




                                    </tr>
                                </thead>
                                <tbody></tbody>

                            </table>
                        </div>
                    </div>
                    @*<div class="row">


            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-form-label ">
                        Printers

                    </label>

                    <div class="col-md-8">
                        <select id="ddlAlternateSKUs" class="form-control" multiple>
                            <option value="">Select Printer </option>
                            <option value="">Select Printer 2 </option>
                        </select>
                    </div>
                </div>


            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-form-label ">
                        Moniters

                    </label>

                    <div class="col-md-8">
                        <select id="ddlAlternateSKUs" class="form-control" multiple>
                            <option value="">Select Minter </option>
                            <option value="">Select Minter 2</option>

                        </select>
                    </div>
                </div>


            </div>
        </div>
        <div class="row">


            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-form-label ">
                        Bump Bar BackColor

                    </label>

                    <div class="col-md-8">
                        <input type="color" value="" id="txBumpBarBackColor" name="txBumpBarBackColor" class="form-control" />
                    </div>
                </div>


            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-form-label ">
                        Bump Bar ForeColor

                    </label>

                    <div class="col-md-8">
                        <input type="color" value="" id="txtBumpBarForeColor" name="txtBumpBarForeColor" class="form-control" />
                    </div>
                </div>


            </div>
        </div>
        <div class="card mt-4">
            <div class="card-header header-elements-inline search-header">
                <h5 class="card-title">

                    <button type='button' id="btnAddRouteDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' data-target='#RouteModal' style="background-color:white;">
                        <b><i class="icon-plus3"></i></b>
                        Add
                    </button>
                    <span> New Route</span>

                </h5>


            </div>
            <div class="card-body cardNoPaging">


                <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblRouteDetail">
                    <thead>
                        <tr>
                            <th hidden>ID</th>
                            <th>Route ID</th>
                            <th></th>

                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>*@




                </div>

                <div class="tab-pane fade in" id="Image">
                    <div class="card  mt-4">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">


                                <span> Inventory Images</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">
                            <table class="table  dataTable no-footer  clsdtNoPagingInfo" id="dtInventoryImages">
                                <thead>

                                    <tr>
                                        <th>Image</th>
                                        <th hidden>Position</th>
                                        <th></th>

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    @*<span style="color:cornflowerblue" class="Pics">
                    You can Upload upto <span style="color:cornflowerblue" class="Pics" id="ImageCount">@Model.AllowedPics</span> Pictures .
                </span>*@

                    <div class="row mb-3">
                        <div class="col-lg-12">
                            <div action="#" class="dropzone" id="my-awesome-dropzone">
                                @Html.AntiForgeryToken()
                                <div class="fallback">
                                    <input name="file" type="file" multiple id="InventoryImages" />
                                </div>
                            </div>


                        </div>
                        <br />

                    </div>
                </div>
            </div>
            <div class="modal-footer">


                <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-lg" style="color:white" onclick="RedirectPage();"><b><i class="icon-cross2"></i></b>Cancel</button>
                <button class="btn btn-primary btn-lg" type="submit" id="btnsave" onclick="SetRedirection(1);">Save</button>
                <button class="btn btn-primary btn-lg" type="submit" id="btnsaveandList" onclick="SetRedirection(2);">Save and Go to List</button>
            </div>
        </form>
        @*<div class="row mb-3">
                <div class="col-lg-12">
                    <form action="#" class="dropzone" id="my-awesome-dropzone">
                        @Html.AntiForgeryToken()
                        <div class="fallback">
                            <input name="file" type="file" multiple id="InventoryImages" />
                        </div>
                    </form>


                </div>
                <br />

            </div>*@
    </div>
</div>

<!-- Modals Area -->
<!-- Div Properties Modal -->

<div id="PropertiesModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">

            <form id="PropertiesDetailForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Properties</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">

                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Property
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">
                                <input type="text" id="txtIPDetailID" class="form-control" name="ID" style="display:none" />
                                <input type="text" id="txtIPSrID" class="form-control" value="-1" style="display:none" />

                                <select id="ddlPropertyID" class="form-control" required></select>


                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Value
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">


                                <select id="ddlValueID" class="form-control" required>

                                    <option value="">Select Value</option>
                                </select>


                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-6 control-label">Store with Invoce when sold</label>
                            <div class="custom-control custom-checkbox col-md-4" style="padding-top: calc(.4375rem + 1px);">
                                <input type="checkbox" class="custom-control-input form-control" id="chkstorewithInvoice" value="true" checked="checked" name="storewithInvoice" />
                                <label class="custom-control-label" for="chkstorewithInvoice" style="margin-left:10px"></label>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>


<!-- Div Ordering Info Modal -->

<div id="OrderingInfoModal" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <form id="OrderingInfoDetailForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Vendor</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">

                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Vendor
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">

                                <input type="text" id="txtOrderingInfoDetailID" class="form-control" name="ID" style="display:none" />
                                <input type="text" id="txtOrderingInfoDetailSrID" class="form-control" value="-1" style="display:none" />
                                <input type="text" id="txtVendorNumber" class="form-control" value="" style="display:none" />

                                <select id="ddlVendorOrderingInfoID" class="form-control" required>

                                    <option selected disabled> Select Vendor</option>



                                </select>


                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Vendor Part #
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">
                                <input type="text" id="txtVendorPartNumber" class="form-control" maxlength="20" required>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Cost Per

                            </label>
                            <div class="col-md-7">
                                <input type="text" id="txtCostPer" class="form-control" onkeypress="return isNumberKey(event,this)">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Case Cost

                            </label>
                            <div class="col-md-7">
                                <input type="text" id="txtCaseCost" class="form-control" onkeypress="return isNumberKey(event,this)">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Number In Case

                            </label>
                            <div class="col-md-7">
                                <input type="text" id="txtNumberPerVenCase" class="form-control" onkeypress="return isNumberKey(event,this)">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-6 control-label">Preffered Vendor</label>
                            <div class="custom-control custom-checkbox col-md-4" style="padding-top: calc(.4375rem + 1px);">
                                <input type="checkbox" class="custom-control-input form-control" id="chkIsPreffered" value="true" checked="checked" name="chkIsPreffered" />
                                <label class="custom-control-label" for="chkIsPreffered" style="margin-left:10px"></label>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnOIDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>




<!-- Div Group Modifier Modal -->
<div id="GroupModal" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <form id="GroupModifierForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase"> Modifier Group</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">

                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Modifier Group
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">
                                <select class="form-control" id="ddlModifierGroupID" required><option> Select Modifier Group</option></select>
                                <input type="text" id="txtModifierGroupDetailID" class="form-control" name="ID" style="display:none" value="0" />
                                <input type="text" id="txtGroupModifierDetailSrID" class="form-control" value="-1" style="display:none" />




                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Propmpt When Choosing Modifier
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">
                                <input class="form-control" id="txtPrompt" required />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Number to Select
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-3">
                                <select class="form-control" id="ddlNumberToSelectID">
                                    <option selected value="="> =</option>
                                    <option value="<="> <=</option>
                                </select>




                            </div>
                            <div class="col-md-3">

                                <input class="form-control" id="NumberToSelet" type="text" onkeypress="return isNumberKey(event,this)" required />




                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Charge For This Item

                            </label>

                            <div class="col-md-8">
                                <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                    <input type="checkbox" checked class="custom-control-input" id="chkChargeForThisItem" value="true" name="chkChargeForThisItem">

                                    <label class="custom-control-label" for="chkChargeForThisItem"></label>
                                </div>



                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Forced

                            </label>

                            <div class="col-md-8">
                                <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                    <input type="checkbox" checked class="custom-control-input" id="chkForced" value="true" name="chkForced">

                                    <label class="custom-control-label" for="chkForced"></label>
                                </div>



                            </div>
                        </div>


                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnGMDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>
<!-- Div Individual Modifier Modal -->

<div id="IndividualModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">

            <form id="IndividualModifierForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Individual Modifier</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">

                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Modifier
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7 ">
                                <select class="form-control" id="ddlItemModifierID" name="ddlItemModifierID" required><option>Select Modifier</option></select>



                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>
<!-- Div Alternate Sku Modal  -->
<!-- Div Form Foooter  -->


<div id="AlternateSkusModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">

            <form id="AlternateSKUDetailForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Alternate SKUs</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">

                        <div class="form-group row">
                            <label class="control-label col-md-4">
                                Alternate SKUs
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-6">
                                <input type="text" id="txtDetailID" class="form-control" name="ID" style="display:none" />
                                <input type="text" id="txtSKuIDDetailSrID" class="form-control" value="-1" style="display:none" />

                                <input id="txtSKUDescription" type="text" class="form-control" name="Description" maxlength="30" required />


                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>


<!-- Tag Along Items Modal  -->

<div id="TagAlongItemsModal" class="modal  fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Search Inventory</span></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="card">

                <div class="card-body" style="margin-top: 10px;">

                    <form id="ItemSearchForm">
                        <div class="form-group row">
                            <div class="col-md-4">


                                <label class="col-md-12 control-label">Catagory</label>
                                <div class="col-md-12">
                                    <select class=" form-control" id="ddlItemCategoryID" name="ddlItemCategoryID">
                                        <option disabled selected>Select Catagory</option>



                                    </select>
                                </div>

                            </div>
                            <div class="col-md-4">
                                <label class="col-md-12 control-label ">Department</label>
                                <div class="col-md-12">
                                    <select class=" form-control" id="ddlItemDepartmentID" name="ddlItemDepartmentID">
                                        <option disabled selected>Select Department</option>



                                    </select>
                                </div>

                            </div>
                            <div class="col-md-4">
                                <label class="col-md-12 control-label">Vendor</label>
                                <div class="col-md-12">
                                    <select class=" form-control" id="ddlVendorID" name="ddlVendorID">
                                        <option disabled selected>Select Vendor</option>



                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12" style="float:right">
                            <button type="submit" class="btn  btn-primary btn-sm mt-1" style="float:right;"><b>Search<i class="icon-search4 ml-2"></i></b></button>
                        </div>



                    </form>
                </div>
            </div>



            <div class="card">
                <!-- BEGIN EXAMPLE TABLE PORTLET-->
                @*// add patient*@
                <div class="card-header header-elements-inline">

                    <h5 class="card-title">

                        <span class="font-weight-semibold">Items Info</span>
                    </h5>

                </div>


                <div class="card-body">
                    <table class="table datatable-button-html5-columns dataTable no-footer" id="dtItemList">
                        <thead>
                            <tr>
                                <th>Item #</th>
                                <th> Description</th>
                                <th> Price </th>
                                <th> Stock </th>
                                <th>Vendor Part # </th>
                                <th></th>



                            </tr>

                        </thead>
                        <tbody>
                        </tbody>

                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>


            </div>
        </div>

    </div>

</div>


<!-- Div Sale Pricing Modal  -->

<div id="SalePricingModal" class="modal fade">
    <div class="modal-dialog  modal-lg">
        <div class="modal-content">

            <form id="SalePricingForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Sale Pricing</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">

                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Sale Pricing Type
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">
                                <select class=" form-control" id="ddlSalePricingTypeID" name="ddlSalePricingType" required>
                                    <option disabled selected value="">Select Type of Sale Pricing</option>
                                    <option value="1"> Percent Off</option>
                                    <option value="2"> Sale Price</option>

                                </select>

                            </div>


                        </div>
                        <div class="form-group row" id="PercentOff" style="display:none">
                            <label class="control-label col-md-3">
                                Percent Off
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">


                                <input id="txtPercentoff" type="text" class="form-control" name="txtPersentoff" maxlength="50" onkeypress="return isNumberKey(event,this)" />


                            </div>


                        </div>
                        <div class="form-group row" id="SalePrice" style="display:none">
                            <label class="control-label col-md-3">
                                Sale Price
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">

                                <input id="txtSalePrice" type="text" class="form-control" name="txtSalePrice" maxlength="50" onkeypress="return isNumberKey(event,this)" />


                            </div>


                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Sale Start Date
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">

                                <input type="text" id="txtSaleStartDate" class="form-control pickadate-accessibility" placeholder="Select Start Date" required>


                            </div>


                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Sale Ending Date
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">

                                <input type="text" id="txtSaleEndingDate" class="form-control pickadate-accessibility" placeholder="Select Ending  Date" required>


                            </div>


                        </div>



                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>

<!-- Div Bulk Pricing Modal  -->

<div id="BulkPricingModal" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <form id="BulkPricingForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Bulk Pricing</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Description

                            </label>
                            <div class="col-md-7">


                                <input id="txtBulkDescription" type="text" class="form-control" name="txtBulkDescription" maxlength="30" />


                            </div>


                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Bulk Pricing Type
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">
                                <select class=" form-control" id="ddlBulkPricingTypeID" name="ddlBulkPricingTypeID" required>
                                    <option disabled selected value="">Select Type of Bulk Pricing</option>
                                    <option value="1"> Percent Off</option>
                                    <option value="0"> Price</option>

                                </select>

                            </div>


                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Quantity
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">


                                <input id="txtQuantity" type="text" class="form-control" name="txtQuantity" maxlength="50" required onkeypress="return isNumberKey(event,this)" />


                            </div>


                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                <span id="BulkChargeLabel"> Charges </span>
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">

                                <input id="txtCharges" type="text" class="form-control" name="txtCharges" maxlength="50" required onkeypress="return isNumberKey(event,this)" />


                            </div>


                        </div>




                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>

<!-- Div Bulk Pricing Modal  -->

<div id="TimeBasedPricingModal" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <form id="TimeBasedPricingForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Time Based Pricing</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">

                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Day
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">
                                <select class=" form-control" id="ddlDayID" name="ddlDayID" required>
                                    <option value="" disabled selected>Select Day</option>
                                    <option value="1"> Sunday </option>
                                    <option value="2"> Monday </option>
                                    <option value="3"> Tuesday </option>
                                    <option value="4"> Wednesday </option>
                                    <option value="5"> Thursday </option>
                                    <option value="6"> Friday </option>
                                    <option value="7"> Saturday </option>

                                </select>

                            </div>


                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Start Time
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">


                                <input id="txtStartTime" type="time" class="form-control" name="txtStartTime" maxlength="50" required />


                            </div>


                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                End Time
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">

                                <input id="txtEndTime" type="time" class="form-control" name="txtEndTime" maxlength="50" required />


                            </div>


                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Time Based Price
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">

                                <input id="txtTimeBasedPrice" type="text" class="form-control " name="txtTimeBasedPrice" required onkeypress="return isNumberKey(event,this)" />
                                <input id="txtPriceType" type="hidden" class="form-control " name="txtPriceType" value="3" />

                            </div>


                        </div>


                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>
<!--  Recipe Modal  -->

<div id="RecipeModal" class="modal  fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Recipe Item</span></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>

            <div class="card">

                <div class="card-body" style="margin-top: 10px;">

                    <h3 class="MyCustomHeader mb-4"><i class="icon-coins"></i> Search Inventory</h3>
                    <form id="RecipeItemSearchForm">
                        <div class="form-group row">
                            <div class="col-md-4">


                                <label class="col-md-12 control-label">Catagory</label>
                                <div class="col-md-12">
                                    <select class=" form-control" id="ddlRecipeItemCategoryID" name="ddlItemCategoryID">
                                        <option disabled selected>Select Catagory</option>



                                    </select>
                                </div>

                            </div>
                            <div class="col-md-4">
                                <label class="col-md-12 control-label ">Department</label>
                                <div class="col-md-12">
                                    <select class=" form-control" id="ddlRecipeItemDepartmentID" name="ddlItemDepartmentID">
                                        <option disabled selected>Select Department</option>



                                    </select>
                                </div>

                            </div>
                            <div class="col-md-4">
                                <label class="col-md-12 control-label">Vendor</label>
                                <div class="col-md-12">
                                    <select class=" form-control" id="ddlRecipeVendorID" name="ddlVendorID">
                                        <option disabled selected>Select Vendor</option>



                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12" style="float:right">
                            <button type="submit" class="btn  btn-primary btn-sm mt-1" style="float:right;"><b>Search<i class="icon-search4 ml-2"></i></b></button>
                        </div>



                    </form>
                </div>
            </div>



            <div class="card">
                <!-- BEGIN EXAMPLE TABLE PORTLET-->
                @*// add patient*@
                <div class="card-header header-elements-inline">

                    <h5 class="card-title">

                        <span class="font-weight-semibold">Select Item </span>
                    </h5>

                </div>


                <div class="card-body">
                    <table class="table datatable-button-html5-columns dataTable no-footer" id="dtRecipeItemList">
                        <thead>
                            <tr>
                                <th>Item #</th>
                                <th> Description</th>
                                <th> Price </th>
                                <th> Stock </th>
                                <th>Vendor Part # </th>
                                <th></th>



                            </tr>

                        </thead>
                        <tbody>
                        </tbody>

                    </table>


                    <h3 class="MyCustomHeader mb-4 mt-2"><i class="icon-coins"></i> Recipe Details</h3>
                    <form id="RecipeForm">
                        <div class="form-group row">
                            <div class="col-md-4">


                                <label class="col-md-9 control-label">Selected Item</label>
                                <div class="col-md-10">

                                    <input class="form-control" type="text" id="txtRecipeItemNum" disabled required />

                                </div>

                            </div>
                            <div class="col-md-4">


                                <label class="col-md-9 control-label">Quantity</label>
                                <div class="col-md-10">
                                    <input class="form-control" type="text" id="txtRecipeQuantity" onkeypress="return isNumberKey(event,this)" />

                                    <input class="form-control" type="hidden" id="txtRecipeItemPrice" />
                                    <input class="form-control" type="hidden" id="txtRecipeItemDesc" />
                                </div>

                            </div>
                            <div class="col-md-4">
                                <label class="col-md-9 control-label ">Yield Percentage</label>
                                <div class="col-md-10">
                                    <input class="form-control" type="text" id="txtRecipeYieldPercentage" onkeypress="return isNumberKey(event,this)" />




                                </div>

                            </div>

                        </div>




                    </form>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                <button class="btn btn-primary  btn-labeled btn-labeled-left btn-sm" type="button" onclick="AddRecipeDetailRecord();"><b><i class="icon-paperplane ml-2"></i></b>ADD</button>


            </div>
        </div>

    </div>

</div>
<!--  Route Modal  -->

<div id="RouteModal" class="modal  fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">




            <div class="modal-footer">
                <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                <button class="btn btn-primary  btn-labeled btn-labeled-left btn-sm" type="submit"><b><i class="icon-paperplane ml-2"></i></b>ADD</button>


            </div>
        </div>

    </div>

</div>
@section scripts
{

    <script src="~/Content/assets/js/dropzone.js"></script>

    @Scripts.Render("~/bundles/DataTableScripts")

    @Scripts.Render("~/bundles/DateScripts")
<script>
        $(document).ready(function () {
            SBInventory();
            try {
                $('.clsdtNoPagingInfo').DataTable({
                    "paging": false, searching: false, ordering: false, info: false, buttons: { dom: { button: { className: 'btn btn-light' } }, buttons: [] }
                });
            } catch (e) { }
            $('#ddlCommisionTypeID,#ddlScaleItemTypeID,#ddlAlternateSKUs,#ddlTagAlongItems,#ddlItemDepartmentID,#ddlDepartmentID,#ddlVendorID,#ddlItemCategoryID,#ddlPropertyID,#ddlValueID,#ddlSalePricingTypeID,#ddlBulkPricingTypeID,#ddlVendorOrderingInfoID').select2();
            $('#ddlRecipeItemDepartmentID,#ddlRecipeItemCategoryID,#ddlRecipeVendorID,#ddlModifierGroupID,#ddlItemModifierID,#ddlNumberToSelectID').select2();
            $('#Individualdivinfo').hide();
            $('#rdGroupItemSearch').click(function () {
                $('#Individualdivinfo').hide();
                $('#Groupdivinfo').show();


            });

            $('#rdIndividualItemSearch').click(function () {

                $('#Groupdivinfo').hide();
                $('#Individualdivinfo').show();


            });

            GetAllProperties();
            GetAllDepartment();
            GetAllCategories();
            GetAllVendor();
            GetPriceLevels();
            GetAllModifier();
            GetAllModifierGroup();
            GetFriendlyPrinters();
            var ROwID = CreateGuid();//Added by Naqash
            $('#txtRowID').val(ROwID);//Added by Naqash
            debugger;
            var EncryptedID = fnCheckIDForEditOnLoad();
            if (EncryptedID != null && EncryptedID != undefined & EncryptedID != "") {
                var ID = fnDecryptID(EncryptedID);
                if (ID != null && ID != undefined && ID != "0") {
                    debugger;

                    LoadInventoryDetailsAll(ID);
                }


            }
        });

        function fnCheckIDForEditOnLoad() {
            try {
                var EncryptedID = "";
                var wlss = window.location.search.substring(1);
                if (wlss != null && wlss != undefined & wlss != "") {
                    if (wlss.indexOf('&') != -1) {
                        var wlsssplitam = wlss.split('&');
                        if (wlsssplitam.length > 0) {
                            $(wlsssplitam).each(function () {
                                var KeyValue = this;
                                if (KeyValue.indexOf('=') != -1) {
                                    var ObjKeyValue = KeyValue.split(/=(.+)/);
                                    if (ObjKeyValue[0] != null && ObjKeyValue[0] != undefined && ObjKeyValue[0] == 'ID') {
                                        EncryptedID = ObjKeyValue[1] != null && ObjKeyValue[1] != undefined ? ObjKeyValue[1] : '';
                                        return EncryptedID;
                                    }
                                }
                            });
                        }
                    }
                    else {
                        if (wlss.indexOf('=') != -1) {
                            var ObjKeyValue = wlss.split(/=(.+)/);
                            if (ObjKeyValue[0] != null && ObjKeyValue[0] != undefined && ObjKeyValue[0] == 'ID') {
                                EncryptedID = ObjKeyValue[1];
                            }
                        }
                    }
                }
                return EncryptedID;
            } catch (e) {
                return "";
            }
        }
        function fnDecryptID(id) {
            try {
                var decryptedID = '0';
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    type: "POST",
                    headers: headers,
                    contentType: "application/json; charset=utf-8",
                    url: '/Common/Decrypt/',
                    data: JSON.stringify({ ID: id }),
                    dataType: "json",
                    async: false,
                    success: function (result) {
                        if (result != null && result != undefined && result != "" && result != "Error") {
                            if (result != "") {
                                decryptedID = result;
                            }
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");

                        }
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");
                    }

                });
                return decryptedID;
            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
            return '0';
        }
        function fnEncryptID(id) {
            try {
                var EncryptedID = '';
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    type: "POST",
                    headers: headers,
                    contentType: "application/json; charset=utf-8",
                    url: '/Common/Encrypt/',
                    data: JSON.stringify({ ID: id }),
                    dataType: "json",
                    async: false,
                    success: function (result) {
                        if (result != null && result != undefined && result != "" && result != "Error") {
                            EncryptedID = result;
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");
                    }

                });
                return EncryptedID;
            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
            return '';
        }
        function LoadInventoryDetailsAll(ItemNo) {
            $("body").tooltip({ selector: '[data-toggle=tooltip]' });
            $('[data-toggle="tooltip"]').tooltip({ html: true });
            LoadInventoryData(ItemNo);
            LoadInventoryPropertiesData(ItemNo);
            LoadInventorySalePricingData(ItemNo);
            LoadInventoryBulkPricingData(ItemNo);
            LoadInventoryPricingData(ItemNo);
            LoadInventoryVendorPricingData(ItemNo);
            LoadInventorySKUSData(ItemNo);
            LoadInventoryDicLevelData(ItemNo);
            LoadInventoryTagAlongData(ItemNo);
            LoadInventoryIngredientData(ItemNo);
            LoadInventoryIndividualModifiersData(ItemNo);
            LoadInventoryGroupModifiersData(ItemNo);
            LoadInventoryImagesData(ItemNo);
            LoadInventorySalesHistoryData(ItemNo);
            LoadInventoryPrintersData(ItemNo);
        }
        function LoadInventoryData(ItemNo) {
            debugger;
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Inventory/LoadInventoryData',
                    type: 'POST',
                    data: JSON.stringify({ ItemNo: ItemNo }),
                    headers: headers,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {
                        debugger;
                        if (result != null && result != "Error") {
                            $.each(result, function (i, Data) {

                                debugger;
                                $('#btnsave').text('Update');
                                $('#btnsaveandList').text('Update and Go to List');
                                $('#txtItemNo').prop("disabled", true);
                                $('#txtEdit').val(1);

                                $('#txtItemType').val(Data.ItemType);
                                $('#txtVendorNumber').val(Data.Vendor_Number);
                                //egory = 0;
                                $('#txtItemNo').val(Data.ItemNum);
                                $('#txtDescription').val(Data.ItemName);
                                $('#txtStoreID').val(Data.Store_ID);
                                $('#txtAvgCost').val(Data.Cost);
                                $('#txtPriceYouCharge').val(Data.Price);
                                $('#txtPriceWithTax').val(Data.Retail_Price);
                                $('#txtNumberInStock').val(Data.In_Stock);
                                $('#txtReorderLevel').val(Data.Reorder_Level);
                                $('#txtReorderQuantity').val(Data.Reorder_Quantity);
                                if (Data.Comm_Type > 0) {
                                    $('#ddlCommisionTypeID').val(Data.Comm_Type).change();

                                    $('#txtCommissionAmount').val(Data.Comm_Amt);
                                }

                                if (Data.BarTaxInclusive == true) {
                                    $("#chkBarTax").prop("checked", true)
                                }
                                else {
                                    $("#chkBarTax").prop("checked", false)
                                }
                                if (Data.Tax_1 == true) {
                                    $("#chkTax1").prop("checked", true)
                                }
                                else {
                                    $("#chkTax1").prop("checked", false)
                                }
                                if (Data.Tax_2 == true) {
                                    $("#chkTax2").prop("checked", true)
                                }
                                else {
                                    $("#chkTax2").prop("checked", false)
                                }
                                if (Data.Tax_3 == true) {
                                    $("#chkTax3").prop("checked", true)
                                }
                                else {
                                    $("#chkTax3").prop("checked", false)
                                }
                                if (Data.Tax_4 == true) {
                                    $("#chkTax4").prop("checked", true)
                                }
                                else {
                                    $("#chkTax4").prop("checked", false)
                                }
                                if (Data.Tax_5 == true) {
                                    $("#chkTax5").prop("checked", true)
                                }
                                else {
                                    $("#chkTax5").prop("checked", false)
                                }
                                if (Data.Tax_6 == true) {
                                    $("#chkTax6").prop("checked", true)
                                }
                                else {
                                    $("#chkTax6").prop("checked", false)
                                }
                                /*if ($("#chkTax1").is(":checked")) {
                                    AjaxObj.Tax_1 = true;
                                }
                                else {
                                    AjaxObj.Tax_1 = false;
                                }*/



                                $('#ddlDepartmentID').val(Data.Dept_ID).change();
                                Data.IsKit = false;
                                if (Data.IsModifier == true) {
                                    $("#chkModifierItem").prop("checked", true)
                                }
                                else {
                                    $("#chkModifierItem").prop("checked", false)
                                }
                                //if ($("#chkModifierItem").is(":checked")) {
                                //    AjaxObj.IsModifier = true;
                                //}
                                //else {
                                //    AjaxObj.IsModifier = false;
                                //}


                                //   AjaxObj.Kit_Override = $('#txtFirstName').val();
                                $('#txtBarCodesNo').val(Data.Inv_Num_Barcode_Labels);
                                if (Data.Use_Serial_Numbers == true) {
                                    $("#chkUseSerial").prop("checked", true)
                                }
                                else {
                                    $("#chkUseSerial").prop("checked", false)
                                }

                                $('#txtBonusPoints').val(Data.Num_Bonus_Points);
                                if (Data.Print_Ticket == true) {
                                    $("#chkPrintTicket").prop("checked", true)
                                }
                                else {
                                    $("#chkPrintTicket").prop("checked", false)
                                }

                                $('#txtDaysValid').val(Data.Num_Days_Valid);
                                $('#txtLocation').val(Data.Location);
                                if (Data.AutoWeigh == true) {
                                    $("#chkAutoWeigh").prop("checked", true)
                                }
                                else {
                                    $("#chkAutoWeigh").prop("checked", false)
                                }
                                if (Data.FoodStampable == true) {
                                    $("#chkFoodStampable").prop("checked", true)
                                }
                                else {
                                    $("#chkFoodStampable").prop("checked", false)
                                }


                                $('#txtReorderCost').val(Data.ReOrder_Cost);
                                if (Data.Exclude_Acct_Limit == true) {
                                    $("#chkExcludeFromAccountLimit").prop("checked", true)
                                }
                                else {
                                    $("#chkExcludeFromAccountLimit").prop("checked", false)
                                }
                                if (Data.Check_ID == true) {
                                    $("#chkCheckIDBeforeSelling").prop("checked", true)
                                }
                                else {
                                    $("#chkCheckIDBeforeSelling").prop("checked", false)
                                }
                                if (Data.Prompt_Price == true) {
                                    $("#chkPromptPrice").prop("checked", true)
                                }
                                else {
                                    $("#chkPromptPrice").prop("checked", false)
                                }
                                if (Data.Prompt_Quantity == true) {
                                    $("#chkPromptQuantity").prop("checked", true)
                                }
                                else {
                                    $("#chkPromptQuantity").prop("checked", false)
                                }


                                $('#txtFirstName').val(Data.Inactive);
                                if (Data.Allow_BuyBack == true) {
                                    $("#chkAllowBuyback").prop("checked", true)
                                }
                                else {
                                    $("#chkAllowBuyback").prop("checked", false)
                                }

                                $('#txtUnitType').val(Data.Unit_Type);
                                $('#txtUnitSize').val(Data.Unit_Size);
                                if (Data.Special_Permission == true) {
                                    $("#chkSpecialPermission").prop("checked", true)
                                }
                                else {
                                    $("#chkSpecialPermission").prop("checked", false)
                                }
                                if (Data.Prompt_Description == true) {
                                    $("#chkPromptdescription").prop("checked", true)
                                }
                                else {
                                    $("#chkPromptdescription").prop("checked", false)
                                }
                                if (Data.Check_ID2 == true) {
                                    $("#chkCheckID2BeforeSelling").prop("checked", true)
                                }
                                else {
                                    $("#chkCheckID2BeforeSelling").prop("checked", false)
                                }
                                if (Data.Count_This_Item == true) {
                                    $("#chkCountThisItem").prop("checked", true)
                                }
                                else {
                                    $("#chkCountThisItem").prop("checked", false)
                                }
                                if (Data.Print_On_Receipt == true) {
                                    $("#chkPrintOnReceipt").prop("checked", true)
                                }
                                else {
                                    $("#chkPrintOnReceipt").prop("checked", false)
                                }
                                if (Data.RequireCustomer == true) {
                                    $("#chkRequireCustomer").prop("checked", true)
                                }
                                else {
                                    $("#chkRequireCustomer").prop("checked", false)
                                }
                                if (Data.PromptCompletionDate == true) {
                                    $("#chkPromptCompletationDate").prop("checked", true)
                                }
                                else {
                                    $("#chkPromptCompletationDate").prop("checked", false)
                                }
                                if (Data.PromptInvoiceNotes == true) {
                                    $("#chkPromptInvoiceNotes").prop("checked", true)
                                }
                                else {
                                    $("#chkPromptInvoiceNotes").prop("checked", false)
                                }
                                $('#txtPromptForDiscription').val(Data.Prompt_DescriptionOverDollarAmt);
                                if (Data.NeverPrintInKitchen == true) {
                                    $("#chkNeverPrintInKitchen").prop("checked", true)
                                }
                                else {
                                    $("#chkNeverPrintInKitchen").prop("checked", false)
                                }
                                if (Data.Exclude_From_Loyalty == true) {
                                    $("#chkExcludeFromLoyaltyPlan").prop("checked", true)
                                }
                                else {
                                    $("#chkExcludeFromLoyaltyPlan").prop("checked", false)
                                }
                                if (Data.ScaleSingleDeduct == true) {
                                    $("#chkScaleSihgleDeduct").prop("checked", true)
                                }
                                else {
                                    $("#chkScaleSihgleDeduct").prop("checked", false)
                                }
                                $('#ddlScaleItemTypeID').val(Data.ScaleItemType);
                                $('#ddlDiscountTypeID').val(Data.DiscountType);
                                if (Data.AllowReturns == true) {
                                    $("#chkAllowReturns").prop("checked", true)
                                }
                                else {
                                    $("#chkAllowReturns").prop("checked", false)
                                }
                                if (Data.Liability == true) {
                                    $("#chkLiabilityItem").prop("checked", true)
                                }
                                else {
                                    $("#chkLiabilityItem").prop("checked", false)
                                }
                                if (Data.AllowOnDepositInvoices == true) {
                                    $("#chkAllowOnDepositInvoices").prop("checked", true)
                                }
                                else {
                                    $("#chkAllowOnDepositInvoices").prop("checked", false)
                                }
                                if (Data.AllowOnFleetCard == true) {
                                    $("#chkAllowOnFleetCard").prop("checked", true)
                                }
                                else {
                                    $("#chkAllowOnFleetCard").prop("checked", false)
                                }
                                if (Data.DisplayTaxInPrice == true) {
                                    $("#chkDisplayTaxInPrice").prop("checked", true)
                                }
                                else {
                                    $("#chkDisplayTaxInPrice").prop("checked", false)
                                }
                                if (Data.NeverPrintInKitchen == true) {
                                    $("#chkNeverPrintInKitchen").prop("checked", true)
                                }
                                else {
                                    $("#chkNeverPrintInKitchen").prop("checked", false)
                                }
                                if (Data.DisableInventoryUpload == true) {
                                    $("#chkDisableInventoryUpload").prop("checked", true)
                                }
                                else {
                                    $("#chkDisableInventoryUpload").prop("checked", false)
                                }
                                $('#txtSecondDescription').val(Data.ItemName_Extra);
                                if (Data.As_Is == true) {
                                    $("#chkSellAsIS").prop("checked", true)
                                }
                                else {
                                    $("#chkSellAsIS").prop("checked", false)
                                }

                                $('#txtLimitQtyOnInvoice').val(Data.InvoiceLimitQty);
                                $('#txtGeneralledgerNumber').val(Data.GLNumber);
                                $('#txtRowID').val(Data.RowID);//RowID
                                EntryDate = Data.Date_Created//Need to check
                                //Data.Date_Created=EntryDate
                                $('#txtFirstName').val(Data.IsRental);
                                $('#txtFirstName').val(Data.Use_Bulk_Pricing);

                                $('#txtFirstName').val(Data.Use_Bulk_Pricing);
                                Data.IsMatrixItem = false;
                                $('#txtFirstName').val(Data.numBoxes);
                                $('#txtFirstName').val(Data.Dirty);
                                $('#txtFirstName').val(Data.Tear);
                                $('#txtFirstName').val(Data.NumPerCase);
                                $('#txtFirstName').val(Data.Fixed_Tax);
                                $('#txtFirstName').val(Data.DOB);
                                $('#txtFirstName').val(Data.Transfer_Cost_Markup);
                                $('#txtFirstName').val(Data.Transfer_Markup_Enabled);

                                $('#txtFirstName').val(Data.InStock_Committed);

                                $('#txtFirstName').val(Data.ModifierType);
                                $('#txtFirstName').val(Data.Position);
                                $('#txtFirstName').val(Data.numberOfFreeToppings);
                                $('#txtFirstName').val(Data.SuggestedDeposit);
                                $('#txtFirstName').val(Data.IsDeleted);
                                $('#txtFirstName').val(Data.ItemLocale);
                                $('#txtFirstName').val(Data.QuantityRequired);
                                $('#txtFirstName').val(Data.Helper_ItemNum);
                                $('#txtFirstName').val(Data.Old_InStock);
                                $('#txtFirstName').val(Data.Last_Sold);
                                $('#txtFirstName').val(Data.IsRestrictedPerInvoice);
                                $('#txtFirstName').val(Data.DoughnutTax);
                                $('#txtFirstName').val(Data.Import_Markup);
                                $('#txtFirstName').val(Data.PricePerMeasure);
                                $('#txtFirstName').val(Data.UnitMeasure);
                                $('#txtFirstName').val(Data.ShipCompliantProductType);
                                $('#txtFirstName').val(Data.AlcoholContent);
                                $('#txtFirstName').val(Data.AvailableOnline);

                                //InventoryNotes

                                $('#txtInventoryNotes').val(Data.Notes);
                                $('#txtItemNo').val(Data.ItemNum);
                                $('#txtStoreID').val(Data.Store_ID);
                                $('#txtStoreID').val(Data.Store_ID);
                                //ReorderQuantity

                                $('#txtItemNo').val(Data.ItemNum);
                                $('#txtDescription').val(Data.ItemName);
                                $('#txtStoreID').val(Data.Store_ID);
                                $('#txtReorderQuantity').val(Data.Reorder_Quantity);
                                $('#txtReorderLevel').val(Data.Reorder_Level);
                                $('#txtReorderCost').val(Data.Cost);
                                $('#ddlDepartmentID').val(Data.Dept_ID).change();
                                $('#txtNumberInStock').val(Data.In_Stock);

                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function LoadInventoryPropertiesData(ItemNum) {
            var table = $("#dtInventoryProperties").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryInventoryProperties",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {
                    debugger;
                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {
                            debugger;
                            if (Data.StoreWithInvoice) {
                                var dtstorewithInvoiceExists = 0;
                                var dtIP = $('#dtInventoryProperties').DataTable();
                                var dtIPRows = dtIP.rows().data();
                                var dtPropertyDetailCount = dtIPRows.rows().data().length;
                                dtPropertyDetailCount++;
                                if (dtIPRows.length > 0) {
                                    $.each(dtIPRows, function (index, value) {

                                        var chkstorewithInvoice = $(value[3]).find('input');
                                        dtstorewithInvoiceExists += $(chkstorewithInvoice) != null && $(chkstorewithInvoice) != undefined && $(chkstorewithInvoice).is(':checked') ? 1 : 0;

                                    });
                                }
                                if (dtstorewithInvoiceExists > 0) {

                                    var columnNumber = 0; //first column
                                    //$.each(tblIPDetail.find("tr"), function () {
                                    //    debugger;
                                    //    var tdOfCurrentColumn = $(this).children().eq(columnNumber);
                                    //})


                                    var tblIPDetail = $('#dtInventoryProperties').DataTable(), tblRows = tblIPDetail.rows().data();
                                    if (tblRows.length > 0) {

                                        $.each(tblRows, function (index, value) {
                                            let SrNo = Number(index) + 1;
                                            value[3] = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="chkstorewithInvoiceDetail_' + SrNo + '"  disabled /><label class="custom-control-label" for="chkstorewithInvoiceDetail_' + SrNo + '" style="margin-left:10px"></label></div>';
                                            tblIPDetail.row(index).data(value);
                                        });

                                    }
                                }



                            }

                            var storewithInvoice = Data.StoreWithInvoice ? 'checked' : '';
                            var chkIsPrimaryID = 'chkstorewithInvoiceDetail_' + dtPropertyDetailCount;
                            var storewithInvoiceData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + storewithInvoice + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';



                            var newRow = "<tr><td hidden>" + Data.ItemNum + "</td>" +
                                "<td>" + Data.Description + "</td>" +
                                "<td>" + Data.Value_ID + "</td>" +
                                "<td>" + storewithInvoiceData + "</td>" +
                                "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delIPRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventorySalePricingData(ItemNum) {
            var table = $("#tblSalePricing").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryInventorySalePricing",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {

                            let PricePercent = "";
                            let price = "";
                            let percent = "";
                            if (Data.SalePriceType == 1) {
                                PricePercent = Data.Percent + " %";
                                price = "";
                                percent = Data.Percent;
                            }
                            else if (Data.SalePriceType == 2) {
                                PricePercent = "$ " + Data.Price;
                                percent = "";
                                price = Data.Price;
                            }
                            var newRow = "<tr><td hidden>" + Data.ItemNum + "</td>" +
                                "<td hidden>" + price + "</td>" +
                                "<td hidden>" + percent + "</td>" +
                                "<td>" + Data.PriceType + "</td>" +
                                "<td>" + PricePercent + "</td>" +
                                "<td>" + Data.Sale_Start + "</td>" +
                                "<td>" + Data.Sale_End + "</td>" +
                                "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delSaleRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventoryBulkPricingData(ItemNum) {
            var table = $("#tblBulkPricing").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryInventoryBulkPricing",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {
                            let PricePercent = "";
                            if (Data.Price_Type == 1) {
                                PricePercent = Data.Bulk_Price + " % off";

                            }
                            else if (Data.Price_Type == 2) {
                                PricePercent = "$ " + Data.Bulk_Price;

                            }
                            var newRow = "<tr><td hidden>" + Data.Price_Type + "</td>" +
                                "<td hidden>" + Data.Bulk_Price + "</td>" +
                                "<td>" + Data.Description + "</td>" +
                                "<td>" + Data.pricetext + "</td>" +
                                "<td>" + Data.Bulk_Quan + "</td>" +
                                "<td>" + PricePercent + "</td>" +
                                "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delBulkRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventoryPricingData(ItemNum) {
            debugger;
            var table = $("#tblTimeBasedPricing").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryInventoryPricing",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {
                    debugger;
                    if (result != null && result != "Error") {
                        table.clear();
                        debugger;

                        $.each(result, function (i, Data) {
                            debugger;
                            var DayDesc = "";
                            if (Data.Criteria3 == "1") {
                                DayDesc = "Sunday";
                            } else if (Data.Criteria3 == "2") {
                                DayDesc = "Monday";
                            }
                            else if (Data.Criteria3 == "3") {
                                DayDesc = "Tuesday";
                            }
                            else if (Data.Criteria3 == "4") {
                                DayDesc = "Wednesday";
                            }
                            else if (Data.Criteria3 == "5") {
                                DayDesc = "Thursday";
                            }
                            else if (Data.Criteria3 == "6") {
                                DayDesc = "Friday";
                            }
                            else if (Data.Criteria3 == "7") {
                                DayDesc = "Saturday";
                            }

                            let Time = Data.StartTime + " - " + Data.EndTime;
                            var newRow = "<tr><td hidden>" + Data.Criteria3 + "</td>" +
                                "<td hidden>" + Data.PriceType + "</td>" +
                                "<td hidden>" + Data.Price + "</td>" +
                                "<td hidden>" + Data.StartTime + "</td>" +
                                "<td hidden>" + Data.EndTime + "</td>" +
                                "<td>" + DayDesc + "</td>" +
                                "<td>" + Time + "</td>" +
                                "<td> $ " + Data.Price + "</td>" +
                                "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delTimeRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventoryVendorPricingData(ItemNum) {
            var table = $("#tblVendor").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryInventoryVendor",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {
                            debugger;
                            if ($('#txtVendorNumber').val() == Data.Vendor_Number) {
                                var dtIsPrefferedExists = 0;
                                var dtIP = $('#tblVendor').DataTable();
                                var dtIPRows = dtIP.rows().data();
                                var dtVendorDetailCount = dtIPRows.rows().data().length;
                                dtVendorDetailCount++;
                                if (dtIPRows.length > 0) {
                                    $.each(dtIPRows, function (index, value) {

                                        var chkIsPreffered = $(value[8]).find('input');
                                        dtIsPrefferedExists += $(chkIsPreffered) != null && $(chkIsPreffered) != undefined && $(chkIsPreffered).is(':checked') ? 1 : 0;

                                    });
                                }
                                if (dtIsPrefferedExists > 0) {




                                    var tblIPDetail = $('#tblVendor').DataTable(), tblRows = tblIPDetail.rows().data();
                                    if (tblRows.length > 0) {

                                        $.each(tblRows, function (index, value) {
                                            let SrNo = Number(index) + 1;
                                            value[8] = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="chkIsPrefferedDetail_' + SrNo + '"  disabled /><label class="custom-control-label" for="chkIsPrefferedDetail_' + SrNo + '" style="margin-left:10px"></label></div>';
                                            tblIPDetail.row(index).data(value);
                                        });

                                    }
                                }



                            }

                            var IsPreffered = $('#txtVendorNumber').val() == Data.Vendor_Number ? 'checked' : '';
                            var chkIsPrimaryID = 'chkIsPrefferedDetail_' + dtVendorDetailCount;
                            var IsPrefferedData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + IsPreffered + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';




                            var newRow = "<tr><td hidden>" + 0 + "</td>" +
                                "<td hidden>" + count + "</td>" +
                                "<td hidden>" + Data.Vendor_Number + "</td>" +
                                "<td>" + Data.Company + "</td>" +
                                "<td>" + Data.Vendor_Part_Num + "</td>" +
                                "<td>" + Data.CostPer + "</td>" +
                                "<td>" + Data.Case_Cost + "</td>" +
                                "<td>" + Data.NumPerVenCase + "</td>" +
                                "<td>" + IsPrefferedData + "</td>" +
                                "<td style='text-align:Right'>" +
                                " <div class='list-icons'><div class='dropdown hide'><a href='#' class='btn  bg-orange btn-sm' data-toggle='dropdown' aria-expanded='true'>" +
                                "<i class='icon-menu9'></i></a>" +
                                "<div class='dropdown-menu dropdown-menu-right hide' x-placement='top-end' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Edit'><button onclick='ModifyOrderingInfoDetailRecord(" + 0 + ",this);'type='button' class='btn bg-primary  btn-sm'  style='color:white'><b><i class='icon-pencil'></i></b></button></span>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delOIRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</div ></div ></div></td></tr>";

                            table.row.add($(newRow));
                            count++;
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventorySKUSData(ItemNum) {
            var table = $("#tblAlternateSkus").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummarySKUS",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {


                            var newRow = "<tr><td hidden>" + Data.ItemNum + "</td>" +
                                "<td>" + Data.AltSKU + "</td>" +
                                "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delSKURow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventoryDicLevelData(ItemNum) {

            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryDiscLevel",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {



                        $.each(result, function (i, Data) {
                            var DicIDAmt = '#Amt-' + Data.Level;
                            var DicIDPerc = '#Perc-' + Data.Level;
                            var DIsChk = '#' + Data.Level;
                            var Amount = Data.Perc * $("#txtPriceYouCharge").val();
                            Amount = ($("#txtPriceYouCharge").val() - Amount).toFixed(2);
                            $(DicIDAmt).val(Amount);
                            $(DicIDPerc).val(Data.Perc * 100);
                            $(DIsChk).prop('checked', true);

                        });

                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventoryTagAlongData(ItemNum) {
            var table = $("#tblTagAlongItems").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryTagAlongs",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {


                            var newRow = "<tr><td>" + Data.TagAlong_ItemNum + "</td>" +
                                "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delTARow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventoryIngredientData(ItemNum) {
            var table = $("#tblRecipe").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryIngredients",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {

                            var Cost = Data.Quantity * Data.Yield;
                            var newRow = "<tr><td>" + Data.Ingredient + "</td>" +
                                "<td>" + Data.IngredientName + "</td>" +
                                "<td>" + Data.Quantity + "</td>" +
                                "<td>" + Data.Yield + "</td>" +
                                "<td>" + Cost + "</td>" +
                                //"<td>" + Data.NumPerVenCase + "</td>" +
                                "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delRecipeRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventoryIndividualModifiersData(ItemNum) {
            var table = $("#tblModifier").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryIndividualModifiers",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {
                    debugger;
                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {
                            debugger;
                            var newRow = "<tr><td>" + Data.ModNum + "</td>" +
                                "<td>" + Data.ModName + "</td>" +
                                "<td>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delModifierRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventoryGroupModifiersData(ItemNum) {
            var table = $("#tblGroupModifier").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryGroupModifiers",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {
                    debugger;
                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {
                            debugger;
                            if ($('#chkChargeForThisItem').is(":checked")) {

                                var dtIP = $('#tblGroupModifier').DataTable();
                                var dtIPRows = dtIP.rows().data();
                                var dtVendorDetailCount = dtIPRows.rows().data().length;
                                dtVendorDetailCount++;



                            }

                            var ChargeForThisItem = Data.ChargePrice ? 'checked' : '';
                            var chkIsPrimaryID = 'chkChargeForThisItem_' + dtVendorDetailCount;
                            var IsChargeForThisItemData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + ChargeForThisItem + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';

                            var chkForced = Data.Forced ? 'checked' : '';
                            var chkIsPrimaryID = 'chkForced_' + dtVendorDetailCount;
                            var chkForcedData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + chkForced + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';



                            var newRow = "<tr><td hidden>" + 0 + "</td>" +
                                "<td  style='text-align:left' hidden>" + count++ + "</td>" +
                                "<td hidden>" + Data.ModNum + "</td>" +
                                "<td>" + Data.ModName + "</td>" +
                                "<td>" + Data.Prompt + "</td>" +
                                "<td>" + IsChargeForThisItemData + "</td>" +
                                "<td>" + Data.NumToSelect + "</td>" +
                                "<td>" + chkForcedData + "</td>" +
                                "<td style='text-align:Right'>" +
                                " <div class='list-icons'><div class='dropdown hide'><a href='#' class='btn  bg-orange btn-sm' data-toggle='dropdown' aria-expanded='true'>" +
                                "<i class='icon-menu9'></i></a>" +
                                "<div class='dropdown-menu dropdown-menu-right hide' x-placement='top-end' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Edit'><button onclick='ModifyGroupModifierDetailRecord(" + 0 + ",this);'type='button' class='btn bg-primary  btn-sm'  style='color:white'><b><i class='icon-pencil'></i></b></button></span>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delGMRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</div ></div ></div></td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventoryImagesData (ItemNum) {
            var table = $("#dtInventoryImages").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryInventoryImages",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {
                    debugger;
                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {
                            debugger;



                             var newRow = "<tr><td><input type='hidden' value='" + Data.ImageLocation + "'><div class='item'><img src='@ImagePath" + Data.ImageLocation + "?" + (new Date()).getTime()+"' class='img-responsive pic-bordered' alt=''  style='width:80px;height:px;'></div></td>" +
                                 "<td hidden>"+Data.Position+"</td>"+
                                 "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delIIRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
    }

    function LoadInventorySalesHistoryData(ItemNum) {

        var table = $("#dtSalesHistoryList").DataTable();
        var count = 1;
        var headers = {};
        var token = $('input[name="__RequestVerificationToken"]').val();
        headers['__RequestVerificationToken'] = token;
        $.ajax({
            type: "POST",
            headers: headers,
            contentType: "application/json; charset=utf-8",
            url: "/Inventory/GetTableSummarySalesHistory",
            data: JSON.stringify({ ItemNum: ItemNum }),
            dataType: "json",
            success: function (result) {

                if (result != null && result != "Error") {
                    table.clear();


                    $.each(result, function (i, Data) {





                        var newRow = "<tr><td>" + Data.SaleDate + "</td>" +
                            "<td>" + Data.Store_ID + "</td>" +
                            "<td>" + Data.Invoice_Number + "</td>" +
                            "<td>" + Data.Quantity + "</td>" +
                            "<td>" + Data.PricePer.toFixed(2) + "</td>" +
                            "<td>" + Data.CostPer.toFixed(2) + "</td>" +
                            "<td>" + Data.CustNum + "</td>" +
                            "<td>" + Data.Serial_Num + "</td>" +
                            "</tr>";

                        table.row.add($(newRow));
                    });
                    table.draw();
                }
           else {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                    swal("", errorMessage, "error");
                }

            },
            error: function (xhr, status, error) {
                var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                swal("", errorMessage, "error");

            }


        });
    }
    function LoadInventoryPrintersData(ItemNum) {

       
       
        var headers = {};
        var token = $('input[name="__RequestVerificationToken"]').val();
        headers['__RequestVerificationToken'] = token;
        $.ajax({
            type: "POST",
            headers: headers,
            contentType: "application/json; charset=utf-8",
            url: "/Inventory/GetTableSummaryPrinters",
            data: JSON.stringify({ ItemNum: ItemNum }),
            dataType: "json",
            success: function (result) {

                if (result != null && result != "Error") {
                  


                    $.each(result, function (i, Data) {

                        var PName = (Data.PrinterName).replace(/\s/g, '');
                        var Printer = '#' + PName;
                        $(Printer).prop('checked', true);



                    });

                }
                else {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                    swal("", errorMessage, "error");
                }

            },
            error: function (xhr, status, error) {
                var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                swal("", errorMessage, "error");

            }


        });
    }
        $("#ddlSalePricingTypeID").change(function () {
            var SalePricingTypeID = $(this).val();
            if (SalePricingTypeID == 1) {
                $("#SalePrice").hide();
                $('#txtSalePrice').removeAttr('required');
                $('#txtPercentoff').attr('required', true);
                $("#PercentOff").show();
            }
            else if (SalePricingTypeID == 2) {
                $("#SalePrice").show();
                $('#txtSalePrice').attr('required', true);
                $('#txtPercentoff').removeAttr('required');
                $("#PercentOff").hide();
            }
        });
        $("#ddlBulkPricingTypeID").change(function () {
            var BulkPricingTypeID = $(this).val();
            if (BulkPricingTypeID == 1) {
                $("#BulkChargeLabel").html('Percentage off ( % )');

            }
            else if (BulkPricingTypeID == 2) {
                $("#BulkChargeLabel").text('Charges ( $ )');
            }
        });
        $("#AlternateSKUDetailForm").submit(function (event) {
            debugger;
            event.preventDefault();
            AddSKUDetailRecord();
        });
        $("#BulkPricingForm").submit(function (event) {
            debugger;
            event.preventDefault();
            AddBulkPricingDetailRecord();
        });
        $("#SalePricingForm").submit(function (event) {
            debugger;
            event.preventDefault();
            AddSalePricingDetailRecord();
        });
        $("#TimeBasedPricingForm").submit(function (event) {
            debugger;
            event.preventDefault();
            AddTimeBasedPricingDetailRecord();
        });
        $("#PropertiesDetailForm").submit(function (event) {
            debugger;
            event.preventDefault();
            AddPropertiesDetailRecord();
        });

        $("#InventoryForm").submit(function (event) {
            event.preventDefault();
           
            SaveRecord();


        });
        $("#ItemSearchForm").submit(function (event) {
            event.preventDefault();
            GetItem();
        });
        $("#RecipeItemSearchForm").submit(function (event) {
            event.preventDefault();
            GetRecipeItem();
        });
        $("#OrderingInfoDetailForm").submit(function (event) {
            debugger;
            event.preventDefault();
            $('#OrderingInfoModal').modal('hide');
            if ($('#btnOIDetailsave').text() == 'Update') {
                var SrID = $('#txtOrderingInfoDetailSrID').val();
                let ID = $("#txtOrderingInfoDetailID").val();
                let VendorID = $("#ddlVendorOrderingInfoID").val();
                let VendorDescription = $("#ddlVendorOrderingInfoID option:selected").text();
                let VendorPNo = $("#txtVendorPartNumber").val();
                let CostPer = $("#txtCostPer").val();
                let CaseCost = $("#txtCaseCost").val();
                let NoPerCase = $("#txtNumberPerVenCase").val();
                let IsPreffered = $('#chkIsPreffered').is(":checked");
                fnUpdateOrderingInfoDetilRecord(SrID, ID, VendorID, VendorDescription, VendorPNo, CostPer, CaseCost, NoPerCase, IsPreffered);
            }
            else {
                AddOrderingInfoDetilRecord();
            }


        });
        $("#GroupModifierForm").submit(function (event) {
            debugger;
            event.preventDefault();
            $('#GroupModal').modal('hide');
            if ($('#btnGMDetailsave').text() == 'Update') {
                var SrID = $('#txtGroupModifierDetailSrID').val();
                let ID = $("#txtModifierGroupDetailID").val();
                let GroupModifierID = $("#ddlModifierGroupID").val();
                let GroupModifierDescription = $("#ddlModifierGroupID option:selected").text();
                let Prompt = $("#txtPrompt").val();

                let NoToSelect = $("#ddlNumberToSelectID").val() + " " + $("#NumberToSelet").val();


                let Charge = $('#chkChargeForThisItem').is(":checked");
                let chkForced = $('#chkForced').is(":checked");
                fnUpdateGroupModifierDetilRecord(SrID, ID, GroupModifierID, GroupModifierDescription, Prompt, Charge, NoToSelect, chkForced);
            }
            else {
                AddGroupModifierDetilRecord();
            }


        });
        $("#IndividualModifierForm").submit(function (event) {
            debugger;
            event.preventDefault();
            AddIndividualModifierRecord();
        });
        function AddIndividualModifierRecord() {
            debugger;
            try {
                let ID = $("#ddlItemModifierID").val();
                var IsAlreadyExists = fnCheckModifierItemAlreadyExist(ID)

                if (!IsAlreadyExists) {
                    $('#IndividualModal').modal('hide');

                    let Desc = $("#ddlItemModifierID option:selected").text();



                    var table = $('#tblModifier').DataTable();

                    var count = 1;
                    count += table.rows().count();


                    var newRow = "<tr><td>" + ID + "</td>" +
                        "<td>" + Desc + "</td>" +
                        "<td>" +
                        "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delModifierRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                        "</td></tr>";

                    table.row.add($(newRow));
                    table.draw();
                }
                else {
                    swal("", "Selected Modifier already assigned to this inventory item.", "error");
                }
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }
        function AddOrderingInfoDetilRecord() {
            try {

                let ID = $("#txtOrderingInfoDetailID").val();
                let VendorID = $("#ddlVendorOrderingInfoID").val();
                let VendorDescription = $("#ddlVendorOrderingInfoID option:selected").text();
                let VendorPNo = $("#txtVendorPartNumber").val();
                let CostPer = $("#txtCostPer").val();
                let CaseCost = $("#txtCaseCost").val();
                let NoPerCase = $("#txtNumberPerVenCase").val();

                if ($('#chkIsPreffered').is(":checked")) {
                    var dtIsPrefferedExists = 0;

                    $('#txtVendorNumber').val(VendorID);
                    var dtIP = $('#tblVendor').DataTable();
                    var dtIPRows = dtIP.rows().data();
                    var dtVendorDetailCount = dtIPRows.rows().data().length;
                    dtVendorDetailCount++;
                    if (dtIPRows.length > 0) {
                        $.each(dtIPRows, function (index, value) {

                            var chkIsPreffered = $(value[8]).find('input');
                            dtIsPrefferedExists += $(chkIsPreffered) != null && $(chkIsPreffered) != undefined && $(chkIsPreffered).is(':checked') ? 1 : 0;

                        });
                    }
                    if (dtIsPrefferedExists > 0) {




                        var tblIPDetail = $('#tblVendor').DataTable(), tblRows = tblIPDetail.rows().data();
                        if (tblRows.length > 0) {

                            $.each(tblRows, function (index, value) {
                                let SrNo = Number(index) + 1;
                                value[8] = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="chkIsPrefferedDetail_' + SrNo + '"  disabled /><label class="custom-control-label" for="chkIsPrefferedDetail_' + SrNo + '" style="margin-left:10px"></label></div>';
                                tblIPDetail.row(index).data(value);
                            });

                        }
                    }



                }

                var IsPreffered = $('#chkIsPreffered').is(":checked") ? 'checked' : '';
                var chkIsPrimaryID = 'chkIsPrefferedDetail_' + dtVendorDetailCount;
                var IsPrefferedData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + IsPreffered + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';




                var table = $('#tblVendor').DataTable();

                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td hidden>" + ID + "</td>" +
                    "<td  style='text-align:left' hidden>" + count++ + "</td>" +
                    "<td hidden>" + VendorID + "</td>" +
                    "<td>" + VendorDescription + "</td>" +
                    "<td>" + VendorPNo + "</td>" +
                    "<td>" + CostPer + "</td>" +
                    "<td>" + CaseCost + "</td>" +
                    "<td>" + NoPerCase + "</td>" +
                    "<td>" + IsPrefferedData + "</td>" +
                    "<td style='text-align:Right'>" +
                    " <div class='list-icons'><div class='dropdown hide'><a href='#' class='btn  bg-orange btn-sm' data-toggle='dropdown' aria-expanded='true'>" +
                    "<i class='icon-menu9'></i></a>" +
                    "<div class='dropdown-menu dropdown-menu-right hide' x-placement='top-end' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Edit'><button onclick='ModifyOrderingInfoDetailRecord(" + ID + ",this);'type='button' class='btn bg-primary  btn-sm'  style='color:white'><b><i class='icon-pencil'></i></b></button></span>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delOIRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</div ></div ></div></td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }
        function AddSKUDetailRecord() {
            try {
                $('#AlternateSkusModal').modal('hide');
                let ID = $("#txtDetailID").val();
                let Description = $("#txtSKUDescription").val();



                var table = $('#tblAlternateSkus').DataTable();

                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td hidden>" + ID + "</td>" +
                    "<td>" + Description + "</td>" +
                    "<td>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delSKURow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }
        function AddSalePricingDetailRecord() {
            try {
                $('#SalePricingModal').modal('hide');

                let SalePriceID = $("#ddlSalePricingTypeID").val();
                let SalePriceDesc = $("#ddlSalePricingTypeID option:selected").text();
                let Price = $("#txtSalePrice").val();
                let Percent = $("#txtPercentoff").val();
                let SD = $("#txtSaleStartDate").val();
                let ED = $("#txtSaleEndingDate").val();
                let PricePercent = "";
                var table = $('#tblSalePricing').DataTable();
                if (SalePriceID == 1) {
                    PricePercent = Percent + " %";

                }
                else if (SalePriceID == 2) {
                    PricePercent = "$ " + Price;
                    Percent = 0;
                }
                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td hidden>" + SalePriceID + "</td>" +
                    "<td hidden>" + Price + "</td>" +
                    "<td hidden>" + Percent + "</td>" +
                    "<td>" + SalePriceDesc + "</td>" +
                    "<td>" + PricePercent + "</td>" +
                    "<td>" + SD + "</td>" +
                    "<td>" + ED + "</td>" +
                    "<td>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delSaleRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }
        function AddBulkPricingDetailRecord() {
            try {
                let Quantity = $("#txtQuantity").val();
                var IsAlreadyExists = fnCheckQuantityAlreadyExist(Quantity)

                if (!IsAlreadyExists) {
                    $('#BulkPricingModal').modal('hide');

                    let BulkPriceID = $("#ddlBulkPricingTypeID").val();
                    let BulkPriceDesc = $("#ddlBulkPricingTypeID option:selected").text();

                    let Charges = $("#txtCharges").val();
                    let Description = $("#txtBulkDescription").val();
                    let PricePercent = "";
                    var table = $('#tblBulkPricing').DataTable();
                    if (BulkPriceID == 1) {
                        PricePercent = Charges + " % off";

                    }
                    else if (BulkPriceID == 2) {
                        PricePercent = "$ " + Charges;

                    }
                    var count = 1;
                    count += table.rows().count();


                    var newRow = "<tr><td hidden>" + BulkPriceID + "</td>" +

                        "<td hidden>" + Charges + "</td>" +
                        "<td>" + Description + "</td>" +
                        "<td>" + BulkPriceDesc + "</td>" +
                        "<td>" + Quantity + "</td>" +
                        "<td>" + PricePercent + "</td>" +

                        "<td>" +
                        "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delBulkRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                        "</td></tr>";

                    table.row.add($(newRow));
                    table.draw();
                }
                else {
                    swal("", "This item already has a bulk price at this quantity level.Please delete the old one if you would like to add this one. ", "error");
                }
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }
        function AddTimeBasedPricingDetailRecord() {
            try {
                $('#TimeBasedPricingModal').modal('hide');

                let DayID = $("#ddlDayID").val();
                let DayIDDesc = $("#ddlDayID option:selected").text();
                let Price = $("#txtTimeBasedPrice").val();
                let PriceType = $("#txtPriceType").val();


                var d = new Date();
                var month = d.getMonth() + 1;
                var day = d.getDate();
                var EntryDate = (('' + day).length < 2 ? '0' : '') + day + '-' + (('' + month).length < 2 ? '0' : '') + month + '-' + d.getFullYear();

                let ST = EntryDate + " " + $("#txtStartTime").val();
                let ET = EntryDate + " " + $("#txtEndTime").val();
                let Time = $("#txtStartTime").val() + " - " + $("#txtEndTime").val();
                var table = $('#tblTimeBasedPricing').DataTable();

                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td hidden>" + DayID + "</td>" +
                    "<td hidden>" + PriceType + "</td>" +
                    "<td hidden>" + Price + "</td>" +
                    "<td hidden>" + ST + "</td>" +
                    "<td hidden>" + ET + "</td>" +
                    "<td>" + DayIDDesc + "</td>" +
                    "<td>" + Time + "</td>" +
                    "<td> $ " + Price + "</td>" +
                    "<td>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delTimeRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }

        function AddPropertiesDetailRecord() {
            try {
                $('#PropertiesModal').modal('hide');
                let ID = $("#txtIPDetailID").val();
                let Property = $("#ddlPropertyID option:selected").text();
                let Value = $("#ddlValueID").val();
                debugger;
                if ($('#chkstorewithInvoice').is(":checked")) {
                    var dtstorewithInvoiceExists = 0;
                    var dtIP = $('#dtInventoryProperties').DataTable();
                    var dtIPRows = dtIP.rows().data();
                    var dtPropertyDetailCount = dtIPRows.rows().data().length;
                    dtPropertyDetailCount++;
                    if (dtIPRows.length > 0) {
                        $.each(dtIPRows, function (index, value) {

                            var chkstorewithInvoice = $(value[3]).find('input');
                            dtstorewithInvoiceExists += $(chkstorewithInvoice) != null && $(chkstorewithInvoice) != undefined && $(chkstorewithInvoice).is(':checked') ? 1 : 0;

                        });
                    }
                    if (dtstorewithInvoiceExists > 0) {

                        var columnNumber = 0; //first column
                        //$.each(tblIPDetail.find("tr"), function () {
                        //    debugger;
                        //    var tdOfCurrentColumn = $(this).children().eq(columnNumber);
                        //})


                        var tblIPDetail = $('#dtInventoryProperties').DataTable(), tblRows = tblIPDetail.rows().data();
                        if (tblRows.length > 0) {

                            $.each(tblRows, function (index, value) {
                                let SrNo = Number(index) + 1;
                                value[3] = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="chkstorewithInvoiceDetail_' + SrNo + '"  disabled /><label class="custom-control-label" for="chkstorewithInvoiceDetail_' + SrNo + '" style="margin-left:10px"></label></div>';
                                tblIPDetail.row(index).data(value);
                            });

                        }
                    }



                }

                var storewithInvoice = $('#chkstorewithInvoice').is(":checked") ? 'checked' : '';
                var chkIsPrimaryID = 'chkstorewithInvoiceDetail_' + dtPropertyDetailCount;
                var storewithInvoiceData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + storewithInvoice + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';


                var table = $('#dtInventoryProperties').DataTable();

                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td hidden>" + ID + "</td>" +
                    "<td>" + Property + "</td>" +
                    "<td>" + Value + "</td>" +
                    "<td>" + storewithInvoiceData + "</td>" +
                    "<td>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delIPRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }

        function AddTagAlongDetailRecord(ItemNum) {
            try {
                var IsAlreadyExists = fnCheckTagAlongItemAlreadyExist(ItemNum)

                if (!IsAlreadyExists) {
                    $('#TagAlongItemsModal').modal('hide');




                    var table = $('#tblTagAlongItems').DataTable();

                    var count = 1;
                    count += table.rows().count();


                    var newRow = "<tr><td>" + ItemNum + "</td>" +
                        "<td>" +
                        "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delTARow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                        "</td></tr>";

                    table.row.add($(newRow));
                    table.draw();
                }
                else {
                    swal("", "Item Already Selected", "error");
                }
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }

        function AddRecipeDetailRecord() {
            debugger;
            try {
                $('#RecipeModal').modal('hide');
                let IngredientNo = $("#txtRecipeItemNum").val();
                let Ingredient = $("#txtRecipeItemDesc").val();
                let Quantity = $("#txtRecipeQuantity").val();
                let Cost = $("#txtRecipeItemPrice").val();
                let YP = $("#txtRecipeYieldPercentage").val();


                var table = $('#tblRecipe').DataTable();

                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td>" + IngredientNo + "</td>" +
                    "<td>" + Ingredient + "</td>" +
                    "<td>" + Quantity + "</td>" +
                    "<td>" + YP + "</td>" +
                    "<td>" + Cost + "</td>" +
                    "<td>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delRecipeRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }
        function AddGroupModifierDetilRecord() {
            try {

                let ID = $("#txtModifierGroupDetailID").val();
                let ModifierGroupID = $("#ddlModifierGroupID").val();
                let ModifierGroupDescription = $("#ddlModifierGroupID option:selected").text();
                let Prompt = $("#txtPrompt").val();
                let NoToSelect = $("#ddlNumberToSelectID").val() + " " + $("#NumberToSelet").val();


                if ($('#chkChargeForThisItem').is(":checked")) {

                    var dtIP = $('#tblGroupModifier').DataTable();
                    var dtIPRows = dtIP.rows().data();
                    var dtVendorDetailCount = dtIPRows.rows().data().length;
                    dtVendorDetailCount++;



                }

                var ChargeForThisItem = $('#chkChargeForThisItem').is(":checked") ? 'checked' : '';
                var chkIsPrimaryID = 'chkChargeForThisItem_' + dtVendorDetailCount;
                var IsChargeForThisItemData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + ChargeForThisItem + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';

                var chkForced = $('#chkForced').is(":checked") ? 'checked' : '';
                var chkIsPrimaryID = 'chkForced_' + dtVendorDetailCount;
                var chkForcedData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + chkForced + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';



                var table = $('#tblGroupModifier').DataTable();

                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td hidden>" + ID + "</td>" +
                    "<td  style='text-align:left' hidden>" + count++ + "</td>" +
                    "<td hidden>" + ModifierGroupID + "</td>" +
                    "<td>" + ModifierGroupDescription + "</td>" +
                    "<td>" + Prompt + "</td>" +
                    "<td>" + IsChargeForThisItemData + "</td>" +
                    "<td>" + NoToSelect + "</td>" +
                    "<td>" + chkForcedData + "</td>" +
                    "<td style='text-align:Right'>" +
                    " <div class='list-icons'><div class='dropdown hide'><a href='#' class='btn  bg-orange btn-sm' data-toggle='dropdown' aria-expanded='true'>" +
                    "<i class='icon-menu9'></i></a>" +
                    "<div class='dropdown-menu dropdown-menu-right hide' x-placement='top-end' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Edit'><button onclick='ModifyGroupModifierDetailRecord(" + ID + ",this);'type='button' class='btn bg-primary  btn-sm'  style='color:white'><b><i class='icon-pencil'></i></b></button></span>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delGMRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</div ></div ></div></td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }

        function ModifyGroupModifierDetailRecord(ID, btn) {

            debugger;


            $('#txtModifierGroupDetailID').val(ID);

            $('#GroupModal').modal('show');
            $('#btnGMDetailsave').show();
            $('#btnGMDetailsave').text('Update');
            var btnrow = $(btn).closest("tr");
            var dtGroupModifierDetail = $("#tblGroupModifier").DataTable();
            var dtGroupModifierDetailRow = dtGroupModifierDetail.row(btnrow).data();
            var DetailSrID = dtGroupModifierDetailRow[1];
            $("#ddlModifierGroupID").val(dtGroupModifierDetailRow[2]).change();

            $("#txtPrompt").val(dtGroupModifierDetailRow[4]);

            var NumToSelect = dtGroupModifierDetailRow[6].split(" ");
            $("#ddlNumberToSelectID").val(NumToSelect[0]).change();
            $("#NumberToSelet").val(NumToSelect[1]);

            var chkChargeForThisItem = $(dtGroupModifierDetailRow[5]).find("input[type='checkbox']")[0];
            if ($(chkChargeForThisItem).is(':checked')) {
                $('#chkChargeForThisItem').prop("checked", true);
            } else {
                $('#chkChargeForThisItem').prop("checked", false);
            }
            var chkForced = $(dtGroupModifierDetailRow[7]).find("input[type='checkbox']")[0];
            if ($(chkForced).is(':checked')) {
                $('#chkForced').prop("checked", true);
            } else {
                $('#chkForced').prop("checked", false);
            }


            DetailSrID = $.isNumeric(DetailSrID) ? Number(DetailSrID) - 1 : -1;
            if (DetailSrID > -1) {


                $('#txtGroupModifierDetailSrID').val(DetailSrID);
            }
        }
        function fnUpdateGroupModifierDetilRecord(SRID, ID, GroupModifierID, GroupModifierDescription, Prompt, Charge, NumToSelect, Forced) {
            debugger;
            let dtGroupModifierDetail = $('#tblGroupModifier').DataTable();
            var dtGroupModifierDetailRowvalue = dtGroupModifierDetail.row(SRID).data();
            dtGroupModifierDetailRowvalue[0] = ID;
            dtGroupModifierDetailRowvalue[2] = GroupModifierID;
            dtGroupModifierDetailRowvalue[3] = GroupModifierDescription
            dtGroupModifierDetailRowvalue[4] = Prompt
            //var ToSelect = NumToSelect.Split(" ");

            dtGroupModifierDetailRowvalue[6] = NumToSelect

            if (Charge) {

                var dtIP = $('#tblGroupModifier').DataTable();
                var dtIPRows = dtIP.rows().data();
                var dtGMCount = dtIPRows.rows().data().length;
                dtGMCount++;




            }

            var Charge = $('#chkChargeForThisItem').is(":checked") ? 'checked' : '';
            var chkIsPrimaryID = 'chkChargeForThisItem_' + dtGMCount;
            var ChargeData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + Charge + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';

            dtGroupModifierDetailRowvalue[5] = ChargeData;
            var Forced = $('#chkForced').is(":checked") ? 'checked' : '';
            var chkIsPrimaryID = 'chkForced' + dtGMCount;
            var ForcedData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + Forced + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';

            dtGroupModifierDetailRowvalue[7] = ForcedData
            dtGroupModifierDetail.row(SRID).data(dtGroupModifierDetailRowvalue);
            dtGroupModifierDetail.draw();
        }


        function ModifyOrderingInfoDetailRecord(ID, btn) {

            debugger;


            $('#txtOrderingInfoDetailID').val(ID);

            $('#OrderingInfoModal').modal('show');
            $('#btnOIDetailsave').show();
            $('#btnOIDetailsave').text('Update');
            var btnrow = $(btn).closest("tr");
            var dtOrderingInfoDetail = $("#tblVendor").DataTable();
            var dtOrderingInfoDetailRow = dtOrderingInfoDetail.row(btnrow).data();
            var DetailSrID = dtOrderingInfoDetailRow[1];
            $("#ddlVendorOrderingInfoID").val(dtOrderingInfoDetailRow[2]).change();

            $("#txtVendorPartNumber").val(dtOrderingInfoDetailRow[4]);
            $("#txtCostPer").val(dtOrderingInfoDetailRow[5]);
            $("#txtCaseCost").val(dtOrderingInfoDetailRow[6]);
            $("#txtNumberPerVenCase").val(dtOrderingInfoDetailRow[7]);
            var chkIDIsPreffered = $(dtOrderingInfoDetailRow[8]).find("input[type='checkbox']")[0];
            if ($(chkIDIsPreffered).is(':checked')) {
                $('#chkIsPreffered').prop("checked", true);
            } else {
                $('#chkIsPreffered').prop("checked", false);
            }

            $('#chkIsPreffered').is(":checked");
            DetailSrID = $.isNumeric(DetailSrID) ? Number(DetailSrID) - 1 : -1;
            if (DetailSrID > -1) {


                $('#txtOrderingInfoDetailSrID').val(DetailSrID);
            }
        }
        function fnUpdateOrderingInfoDetilRecord(SRID, ID, VendorID, VendorDescription, VendorPNo, CostPer, CaseCost, NoPerCase, IsPreffered) {
            let dtOrderingInfoDetail = $('#tblVendor').DataTable();
            var dtOrderingInfoDetailRowvalue = dtOrderingInfoDetail.row(SRID).data();
            dtOrderingInfoDetailRowvalue[0] = ID;
            dtOrderingInfoDetailRowvalue[2] = VendorID;
            dtOrderingInfoDetailRowvalue[3] = VendorDescription
            dtOrderingInfoDetailRowvalue[4] = VendorPNo
            dtOrderingInfoDetailRowvalue[5] = CostPer
            dtOrderingInfoDetailRowvalue[6] = CaseCost
            dtOrderingInfoDetailRowvalue[7] = NoPerCase
            if (IsPreffered) {
                var dtIsPrefferedExists = 0;
                var dtIP = $('#tblVendor').DataTable();
                var dtIPRows = dtIP.rows().data();
                var dtVendorDetailCount = dtIPRows.rows().data().length;
                dtVendorDetailCount++;
                if (dtIPRows.length > 0) {
                    $.each(dtIPRows, function (index, value) {

                        var chkIsPreffered = $(value[8]).find('input');
                        dtIsPrefferedExists += $(chkIsPreffered) != null && $(chkIsPreffered) != undefined && $(chkIsPreffered).is(':checked') ? 1 : 0;

                    });
                }
                if (dtIsPrefferedExists > 0) {




                    var tblIPDetail = $('#tblVendor').DataTable(), tblRows = tblIPDetail.rows().data();
                    if (tblRows.length > 0) {

                        $.each(tblRows, function (index, value) {
                            let SrNo = Number(index) + 1;
                            value[8] = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="chkIsPrefferedDetail_' + SrNo + '"  disabled /><label class="custom-control-label" for="chkIsPrefferedDetail_' + SrNo + '" style="margin-left:10px"></label></div>';
                            tblIPDetail.row(index).data(value);
                        });

                    }
                }



            }

            var IsPreffered = $('#chkIsPreffered').is(":checked") ? 'checked' : '';
            var chkIsPrimaryID = 'chkIsPrefferedDetail_' + dtVendorDetailCount;
            var IsPrefferedData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + IsPreffered + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';

            dtOrderingInfoDetailRowvalue[8] = IsPrefferedData
            dtOrderingInfoDetail.row(SRID).data(dtOrderingInfoDetailRowvalue);
            dtOrderingInfoDetail.draw();
        }
        function fnCheckTagAlongItemAlreadyExist(ItemNUm) {

            var dtIsExists = 0;
            if (ItemNUm != null) {
                var dtTAitem = $('#tblTagAlongItems').DataTable();
                var dtTARows = dtTAitem.rows().data();
                if (dtTARows.length > 0) {
                    $.each(dtTARows, function (index, value) {
                        dtIsExists += value[0] != null && value[0] == ItemNUm ? 1 : 0;

                    });
                }
            }
            if (dtIsExists > 0) {

                return true;
            }
            else {
                return false;
            }
        }
        function fnCheckQuantityAlreadyExist(Quantity) {

            var dtIsExists = 0;
            if (Quantity != null) {
                var dtTAitem = $('#tblBulkPricing').DataTable();
                var dtTARows = dtTAitem.rows().data();
                if (dtTARows.length > 0) {
                    $.each(dtTARows, function (index, value) {
                        dtIsExists += value[4] != null && value[4] == Quantity ? 1 : 0;

                    });
                }
            }
            if (dtIsExists > 0) {

                return true;
            }
            else {
                return false;
            }
        }
        function fnCheckModifierItemAlreadyExist(ItemNUm) {

            var dtIsExists = 0;
            if (ItemNUm != null) {
                var dtTAitem = $('#tblModifier').DataTable();
                var dtTARows = dtTAitem.rows().data();
                if (dtTARows.length > 0) {
                    $.each(dtTARows, function (index, value) {
                        dtIsExists += value[0] != null && value[0] == ItemNUm ? 1 : 0;

                    });
                }
            }
            if (dtIsExists > 0) {

                return true;
            }
            else {
                return false;
            }
        }
        function delTimeRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblTimeBasedPricing').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delOIRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblVendor').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delSKURow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblAlternateSkus').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delIPRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#dtInventoryProperties').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delIIRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#dtInventoryImages').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delRecipeRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblRecipe').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delTARow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblTagAlongItems').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delModifierRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblModifier').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delSaleRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblSalePricing').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delBulkRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblBulkPricing').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delGMRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblGroupModifier').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }

        function NewSKUID() {
            $('#modalHeading').text(" New Record");

            $('#AlternateSkusModal').modal('show');
            $('#txtSKUDescription').val('');
            $('#txtDetailID').val(0);
            $('#btnDetailsave').show();
            $('#btnDetailsave').text('Add');
            $('#txtSKUDetailSrID').val('-1');
        }
        function NewSalePrice() {
            $('#modalHeading').text(" New Record");

            $('#SalePricingModal').modal('show');
            $('#ddlSalePricingTypeID').val('').change();
            $('#txtPercentoff').val("");
            $('#txtSalePrice').val("");
            var d = new Date();
            var month = d.getMonth() + 1;
            var day = d.getDate();
            var EntryDate = (('' + day).length < 2 ? '0' : '') + day + '-' + (('' + month).length < 2 ? '0' : '') + month + '-' + d.getFullYear();

            $('#txtSaleStartDate').val(EntryDate);
            $('#txtSaleEndingDate').val(EntryDate);
            $('#btnDetailsave').show();
            $('#btnDetailsave').text('Add');

        }
        function NewBulkPrice() {
            $('#modalHeading').text(" New Record");

            $('#BulkPricingModal').modal('show');
            $('#ddlBulkPricingTypeID').val('').change();
            $('#txtCharges').val("");
            $('#txtQuantity').val("");
            $('#txtBulkDescription').val("");
            $("#BulkChargeLabel").html('Charges');
            $('#btnDetailsave').show();
            $('#btnDetailsave').text('Add');

        }
        function NewTimeBasedPricing() {
            // $('#modalHeading').text(" New Record");

            $('#TimeBasedPricingModal').modal('show');
            $('#ddlDayID').val('').change();
            $('#txtStartTime').val("");
            $('#txtEndTime').val("");

            $('#txtTimeBasedPrice').val("");

            $('#btnDetailsave').show();
            $('#btnDetailsave').text('Add');

        }
        function NewTagAlongItem() {


            $('#TagAlongItemsModal').modal('show');
            $('#ddlItemDepartmentID').val('').change();
            $('#ddlItemCategoryID').val('0').change();
            $('#ddlVendorID').val('').change();
            $("#dtItemList").DataTable().clear().draw();
        }
        function NewInventoryProperties() {
            $('#modalHeading').text(" New Record");

            $('#PropertiesModal').modal('show');
            $('#ddlPropertyID').val('0').change();
            $('#ddlValueID').val('0').change();
            $('#txtIPDetailID').val(0);
            $('#btnDetailsave').show();
            $('#btnDetailsave').text('Add');
            $('#txtCPSrID').val('-1');
        }
        function NewOrderingInfoItem() {


            ////$('#modalHeading').text(" New Record");

            $('#OrderingInfoModal').modal('show');
            $('#ddlVendorOrderingInfoID').val('').change();
            $('#txtVendorPartNumber').val('');
            $('#txtCostPer').val('');
            $('#txtCaseCost').val('');
            $('#txtNumberPerVenCase').val('');
            $('#chkIsPreffered').prop("checked", true);
            $('#txtOrderingInfoDetailID').val(0);
            $('#btnOIDetailsave').show();
            $('#btnOIDetailsave').text('Add');
            $('#txtOrderingInfoDetailSrID').val('-1');
        }
        function NewIndividualModifier() {


            ////$('#modalHeading').text(" New Record");

            $('#IndividualModal').modal('show');
            $('#ddlIndividualModifier').val('').change();

        }
        function NewGroupModifier() {


            ////$('#modalHeading').text(" New Record");

            $('#GroupModal').modal('show');
            $('#ddlModifierGroupID').val('').change();
            $('#txtPrompt').val('');
            $('#NumberToSelet').val('');
            $('#ddlNumberToSelectID').val('=').change();
            $('#chkChargeForThisItem').prop("checked", true);
            $('#chkForced').prop("checked", true);
            $('#txtModifierGroupDetailID').val(0);
            $('#btnGMDetailsave').show();
            $('#btnGMDetailsave').text('Add');
            $('#txGroupModifierDetailSrID').val('-1');
        }

        function SaveRecord() {
            try {


                if ($('#IsValidID').val() != "true" && $('#IsValidID').val() != true) {

                    swal("Warning", "Item Number already exists!", "error");
                }
                else {


                    if ($('#btnsave').text() == 'Save') {
                        var Title = "";
                        var Text = "Are you sure you want to Save this record ?";
                        var ConfirmButtonText = "Confirm Save";
                        var CancelButtonText = "Cancel";
                    }
                    if ($('#btnsave').text() == 'Update') {
                        var Title = "";
                        var Text = "Are you sure you want to Update this record ?";
                        var ConfirmButtonText = "Confirm Update";
                        var CancelButtonText = "Cancel";
                    }
                    swal(
                        {
                            title: Title,
                            text: Text,
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonText: ConfirmButtonText,
                            cancelButtonText: CancelButtonText,
                            closeOnConfirm: false,
                            closeOnCancel: true
                        },
                        function (isConfirm) {

                            if (isConfirm) {
                                
                                var AjaxObj = InventoryObjCall();

                                var headers = {};
                                var token = $('input[name="__RequestVerificationToken"]').val();
                                headers['__RequestVerificationToken'] = token;
                                var Url = "";
                                if ($('#btnsave').text() == 'Save') {
                                    Url = "/Inventory/Create";
                                }
                                else {
                                    Url = "/Inventory/Update";
                                }

                                $.ajax({
                                    type: "POST",
                                    headers: headers,
                                    contentType: "application/json; charset=utf-8",
                                    url: Url,
                                    data: JSON.stringify({ "Obj": AjaxObj }),
                                    dataType: "json",
                                    async: false,
                                    success: function (result) {
                                        debugger;
                                        if (result.Code == 200) {
                                            debugger;

                                                SaveInventoryImages($("#txtItemNo").val());



                                        }
                                        else {
                                            swal("", result.Message, result.Type);

                                        }

                                    },
                                    error: function (xhr, status, error) {
                                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                                        swal("", errorMessage, "error");
                                    }

                                });


                            }
                            else {

                                swal("Cancelled", "Your operation Canceled :)", "error");
                            }

                        }
                    );
                }
            }
            catch (err) {
                swal("Cancelled", err.ToString(), "error");
            }
        }


        $('#ddlDepartmentID').change(function () {

            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                url: '/Common/GetStoreID',
                headers: headers,
                data: JSON.stringify({ DepartmentID: $('#ddlDepartmentID').val() }),
                async: false,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {

                    if (result != null) {

                        $('#txtStoreID').val(result);
                    }

                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");

                    }

                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");
                }




            });
        });
        $('#chkTax1').change(function () {

            CalculatePriceWithTax();
        });
        $('#chkTax2').change(function () {

            CalculatePriceWithTax();
        });
        $('#chkTax3').change(function () {

            CalculatePriceWithTax();
        });
        $('#chkTax4').change(function () {

            CalculatePriceWithTax();
        });
        $('#chkTax5').change(function () {

            CalculatePriceWithTax();
        });
        $('#chkTax6').change(function () {

            CalculatePriceWithTax();
        });
        function CalculatePriceWithTax() {
            debugger;
            var PWT = $('#txtPriceYouCharge').val();
            var PUC = $('#txtPriceYouCharge').val();
            if ($("#chkTax1").is(":checked")) {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    type: "POST",
                    url: '/Common/GetTaxRate',
                    headers: headers,
                    data: JSON.stringify({ TaxNo: "1" }),
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {

                        if (result != null) {

                            debugger
                            PWT = parseFloat(PWT) + parseFloat(result) * PUC;
                        }

                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");

                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");
                    }




                });
            }
            if ($("#chkTax2").is(":checked")) {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    type: "POST",
                    url: '/Common/GetTaxRate',
                    headers: headers,
                    data: JSON.stringify({ TaxNo: "2" }),
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {

                        if (result != null) {


                            PWT = parseFloat(PWT) + parseFloat(result) * PUC;
                        }

                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");

                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");
                    }




                });
            }
            if ($("#chkTax3").is(":checked")) {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    type: "POST",
                    url: '/Common/GetTaxRate',
                    headers: headers,
                    data: JSON.stringify({ TaxNo: "3" }),
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {

                        if (result != null) {


                            PWT = parseFloat(PWT) + parseFloat(result) * PUC;
                        }

                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");

                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");
                    }




                });
            }
            if ($("#chkTax4").is(":checked")) {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    type: "POST",
                    url: '/Common/GetTaxRate',
                    headers: headers,
                    data: JSON.stringify({ TaxNo: "4" }),
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {

                        if (result != null) {


                            PWT = parseFloat(PWT) + parseFloat(result) * PUC;
                        }

                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");

                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");
                    }




                });
            }
            if ($("#chkTax5").is(":checked")) {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    type: "POST",
                    url: '/Common/GetTaxRate',
                    headers: headers,
                    data: JSON.stringify({ TaxNo: "5" }),
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {

                        if (result != null) {


                            PWT = parseFloat(PWT) + parseFloat(result) * PUC;
                        }

                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");

                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");
                    }




                });
            }
            if ($("#chkTax6").is(":checked")) {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    type: "POST",
                    url: '/Common/GetTaxRate',
                    headers: headers,
                    data: JSON.stringify({ TaxNo: "6" }),
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {

                        if (result != null) {


                            PWT = parseFloat(PWT) + parseFloat(result) * PUC;
                        }

                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");

                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");
                    }




                });
            }
            $('#txtPriceWithTax').val(PWT);
        }
        function InventoryObjCall() {
            debugger;
            var AjaxObj = {
                "ItemNum": "",
                "ItemName": "",
                "Store_ID": "",
                "Cost": "",
                "Price": "",
                "Retail_Price": "",
                "In_Stock": "",
                "Reorder_Level": "",
                "Reorder_Quantity": "",
                "Tax_1": "",
                "Tax_2": "",
                "Tax_3": "",
                "Vendor_Number": "",
                "Dept_ID": "",
                "IsKit": "",
                "IsModifier": "",
                "Kit_Override": "",
                "Inv_Num_Barcode_Labels": "",
                "Use_Serial_Numbers": "",
                "Num_Bonus_Points": "",
                "IsRental": "",
                "Use_Bulk_Pricing": "",
                "Print_Ticket": "",
                "Print_Voucher": "",
                "Num_Days_Valid": "",
                "IsMatrixItem": "",
                "Vendor_Part_Num": "",
                "Location": "",
                "AutoWeigh": "",
                "numBoxes": "",
                "Dirty": "",
                "Tear": "",
                "NumPerCase": "",
                "FoodStampable": "",
                "ReOrder_Cost": "",
                "Helper_ItemNum": "",
                "ItemName_Extra": "",
                "Exclude_Acct_Limit": "",
                "Check_ID": "",
                "Old_InStock": "",
                "Date_Created": "",
                "ItemType": "",
                "Prompt_Price": "",
                "Prompt_Quantity": "",
                "Inactive": "",
                "Allow_BuyBack": "",
                "Last_Sold": "",
                "Unit_Type": "",
                "Unit_Size": "",
                "Fixed_Tax": "",
                "DOB": "",
                "Special_Permission": "",
                "Prompt_Description": "",
                "Check_ID2": "",
                "Count_This_Item": "",
                "Transfer_Cost_Markup": "",
                "Print_On_Receipt": "",
                "Transfer_Markup_Enabled": "",
                "As_Is": "",
                "InStock_Committed": "",
                "RequireCustomer": "",
                "PromptCompletionDate": "",
                "PromptInvoiceNotes": "",
                "Prompt_DescriptionOverDollarAmt": "",
                "Exclude_From_Loyalty": "",
                "BarTaxInclusive": "",
                "ScaleSingleDeduct": "",
                "GLNumber": "",
                "ModifierType": "",
                "Position": "",
                "numberOfFreeToppings": "",
                "ScaleItemType": "",
                "DiscountType": "",
                "AllowReturns": "",
                "SuggestedDeposit": "",
                "Liability": "",
                "IsDeleted": "",
                "ItemLocale": "",
                "QuantityRequired": "",
                "AllowOnDepositInvoices": "",
                "Import_Markup": "",
                "PricePerMeasure": "",
                "UnitMeasure": "",
                "ShipCompliantProductType": "",
                "AlcoholContent": "",
                "AvailableOnline": "",
                "AllowOnFleetCard": "",
                "DoughnutTax": "",
                "DisplayTaxInPrice": "",
                "NeverPrintInKitchen": "",
                "RowID": "",
                "Tax_4": "",
                "Tax_5": "",
                "Tax_6": "",
                "DisableInventoryUpload": "",
                "InvoiceLimitQty": "",
                "ItemCategory": "",
                "IsRestrictedPerInvoice": "",

                "Inventory_BumpBarSettings": "",
                "Inventory_Notes": "",
                "Inventory_Reorder": "",
                "Inventory_Commissions":"",
                "Inventory_PendingOrders": [],
                "Inventory_Bulk_Info": [],
                "Inventory_Prices": [],
                "Inventory_DiscLevels": [],
                "Inventory_OnSale_Info": [],
                "Inventory_Properties": [],
                "Inventory_SKUS": [],
                "Inventory_TagAlongs": [],
                "Inventory_Vendors": [],
                "Inventory_Ingredients": [],
                "Modifiers": [],
                "Printers": []
            };
            var Printers = {
                "ItemNum": "",
                "Store_ID": "","Port":"","PrinterName":""}
            var Modifiers =
            {
                "ItemNum": "",
                "Store_ID": "",
                "ModNum": "",
                "ModName": "",
                "Dirty": "",
                "Group_Or_Individual": "",
                "ChargePrice": "",
                "NumToSelect": "",
                "Prompt": "",
                "Index": "",
                "Forced": "",
                "RowID": ""
            };
            var Inventory_Reorder = {
                "ItemNum": "", "ItemName": "", "Store_ID": "", "Cost": "", "In_Stock": "", "Reorder_Level": "",
                "Reorder_Quantity": "", "Vendor_Number": "", "Dept_ID": ""
            };
            var Inventory_Commissions = { "ItemNum": "", "Comm_Type": "", "Comm_Amt": "", "Store_ID": "" };
            var Inventory_Notes = { "ItemNum": "", "Notes": "", "Store_ID": "" };
            var Inventory_Ingredients = { "ItemNum": "", "Store_ID": "", "Ingredient": "", "Quantity": "", "Measurement": "", "Yield": "" };
            var Inventory_SKUS = { "ItemNum": "", "AltSKU": "", "Store_ID": "" };
            var Inventory_Properties = { "ItemNum": "", "Value_ID": "", "Store_ID": "", "StoreWithInvoice": "" };
            var Inventory_OnSale_Info = {
                "ItemNum": "", "Store_ID": "", "Sale_Start": "", "Sale_End": "", "Percent": "", "Price": ""
                , "SalePriceType": ""
            };
            var Inventory_Bulk_Info = {
                "ItemNum": "", "Store_ID": "", "Bulk_Price": "", "Bulk_Quan": "", "Description": "", "Price_Type": ""

            };
            var Inventory_Prices = {
                "ItemNum": "", "Store_ID": "", "Criteria1": "", "Criteria2": "", "Criteria3": "", "Price": ""
                , "PriceType": "", "Enabled": ""
            };
            var Inventory_DiscLevels = {
                "ItemNum": "", "Store_ID": "", "Level": "", "Perc": ""
            };
            var Inventory_TagAlongs = { "ItemNum": "", "TagAlong_ItemNum": "", "Store_ID": "", "Quantity": "" };
            var Inventory_Vendors = {
                "ItemNum": "", "Vendor_Number": "", "Store_ID": "", "CostPer": "", "Case_Cost": "", "NumPerVenCase": "",
                "Vendor_Part_Num": "", "CubeCost": "", "WeightCost": "", "OverrideCommission": "", "LandedCost": ""
            };
            //var Inventory_BumpBarSettings = { "ItemNum": "", "Backcolor": "", "Store_ID": "", "Forecolor": "" };
            //var Inventory_PendingOrders = { "ItemNum": "", "DueDate": "", "Store_ID": "", "PickupType": "", "Status": "", "Invoice_Number": "", "LineNum": "" };


            debugger;
            var tblPRLDetail = $("#tblPrinterList").DataTable();
            var tblPRows = tblPRLDetail.rows().data();

            if (tblPRows.length > 0) {
                $.each(tblPRows, function (index, value) {
                    debugger;

                    var chkIDEnabled = "#" + value[0].replace(/\s/g, '');
                    if ($(chkIDEnabled).is(':checked')) {
                        Printers.ItemNum = $('#txtItemNo').val();
                        Printers.PrinterName = value[0];
                        Printers.Port = 'None';
                        Printers.Store_ID = $('#txtStoreID').val();


                        AjaxObj.Printers.push(Printers);
                        console.log(Printers);
                        Printers = {
                            "ItemNum": "",
                            "Store_ID": "", "Port": "", "PrinterName": ""
                        };
                    }
                });
            }

            if ($('#txtInventoryNotes').val() != "") {
                Inventory_Notes.Notes = $('#txtInventoryNotes').val();
                Inventory_Notes.ItemNum = $('#txtItemNo').val();
                Inventory_Notes.Store_ID = $('#txtStoreID').val();
                AjaxObj.Inventory_Notes = Inventory_Notes;

            }
            if ($('#txtCommissionAmount').val() != "") {
                Inventory_Commissions.Comm_Type = $('#ddlCommisionTypeID').val();
                if ($('#ddlCommisionTypeID').val() == 2) {
                    Inventory_Commissions.Comm_Amt = $('#txtCommissionAmount').val();

                }
                else {
                    Inventory_Commissions.Comm_Amt = $('#txtCommissionAmount').val()/100;
                }

                Inventory_Commissions.ItemNum = $('#txtItemNo').val();
                Inventory_Commissions.Store_ID = $('#txtStoreID').val();
                AjaxObj.Inventory_Commissions = Inventory_Commissions;

            }



            if ($('#txtReorderQuantity').val() != "" && $('#txtReorderQuantity').val() != "") {
              
                Inventory_Reorder.ItemNum = $('#txtItemNo').val();
                Inventory_Reorder.ItemName = $('#txtDescription').val();
                Inventory_Reorder.Store_ID = $('#txtStoreID').val();
                Inventory_Reorder.Reorder_Quantity = $('#txtReorderQuantity').val();
                Inventory_Reorder.Reorder_Level = $('#txtReorderLevel').val();
                Inventory_Reorder.Cost = $('#txtReorderCost').val();
                Inventory_Reorder.Dept_ID = $('#ddlDepartmentID').val();
                Inventory_Reorder.In_Stock = $('#txtNumberInStock').val();

                AjaxObj.Inventory_Reorder = Inventory_Reorder;

            }

            var tblSaleDetail = $('#tblSalePricing').DataTable(), tblRows = tblSaleDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                   
                    Inventory_OnSale_Info.ItemNum = $('#txtItemNo').val();
                    Inventory_OnSale_Info.SalePriceType = value[0];
                    Inventory_OnSale_Info.Store_ID = $('#txtStoreID').val();
                    Inventory_OnSale_Info.Percent = value[2];
                    Inventory_OnSale_Info.Price = value[1];
                    Inventory_OnSale_Info.Sale_Start = value[5];
                    Inventory_OnSale_Info.Sale_End = value[6];

                    AjaxObj.Inventory_OnSale_Info.push(Inventory_OnSale_Info);
                    Inventory_OnSale_Info = {
                        "ItemNum": "", "Store_ID": "", "Sale_Start": "", "Sale_End": "", "Percent": "", "Price": ""
                        , "SalePriceType": ""
                    };
                });
            }
            var tblBulkDetail = $('#tblBulkPricing').DataTable(), tblRows = tblBulkDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                    
                    Inventory_Bulk_Info.ItemNum = $('#txtItemNo').val();
                    Inventory_Bulk_Info.Price_Type = value[0];
                    Inventory_Bulk_Info.Store_ID = $('#txtStoreID').val();
                    Inventory_Bulk_Info.Bulk_Price = value[1];
                    Inventory_Bulk_Info.Bulk_Quan = value[4];
                    Inventory_Bulk_Info.Description = value[2];


                    AjaxObj.Inventory_Bulk_Info.push(Inventory_Bulk_Info);
                    Inventory_Bulk_Info = {
                        "ItemNum": "", "Store_ID": "", "Bulk_Price": "", "Bulk_Quan": "", "Description": "", "Price_Type": ""

                    };
                });
            }
            var tblTimeBasedDetail = $('#tblTimeBasedPricing').DataTable(), tblRows = tblTimeBasedDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                  
                    Inventory_Prices.ItemNum = $('#txtItemNo').val();
                    Inventory_Prices.PriceType = value[1];
                    Inventory_Prices.Store_ID = $('#txtStoreID').val();
                    Inventory_Prices.Price = value[2];
                    Inventory_Prices.Criteria1 = value[3];//Start Time
                    Inventory_Prices.Criteria2 = value[4];//En d time
                    Inventory_Prices.Criteria3 = value[0]; //Day
                    Inventory_Prices.Enabled = true;

                    AjaxObj.Inventory_Prices.push(Inventory_Prices);
                    Inventory_Prices = {
                        "ItemNum": "", "Store_ID": "", "Criteria1": "", "Criteria2": "", "Criteria3": "", "Price": ""
                        , "PriceType": "", "Enabled": ""
                    };
                });
            }


            var tblSKUIDDetail = $('#tblRecipe').DataTable(), tblRows = tblSKUIDDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                  
                    Inventory_Ingredients.ItemNum = $('#txtItemNo').val();
                    Inventory_Ingredients.Store_ID = $('#txtStoreID').val();
                    Inventory_Ingredients.Ingredient = value[0];
                    Inventory_Ingredients.Quantity = value[2];
                    //Inventory_Ingredients.Measurement = value[1];
                    Inventory_Ingredients.Yield = value[3];
                    AjaxObj.Inventory_Ingredients.push(Inventory_Ingredients);
                    Inventory_Ingredients = { "ItemNum": "", "Store_ID": "", "Ingredient": "", "Quantity": "", "Measurement": "", "Yield": "" };
                });
            }
            var tblSKUIDDetail = $('#tblAlternateSkus').DataTable(), tblRows = tblSKUIDDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                   
                    Inventory_SKUS.ItemNum = $('#txtItemNo').val();
                    Inventory_SKUS.AltSKU = value[1];
                    Inventory_SKUS.Store_ID = $('#txtStoreID').val();
                    AjaxObj.Inventory_SKUS.push(Inventory_SKUS);
                    Inventory_SKUS = { "ItemNum": "", "AltSKU": "", "Store_ID": "" };
                });
            }
            var tblAMDetail = $('#tblTagAlongItems').DataTable(), tblARows = tblAMDetail.rows().data();
            if (tblARows.length > 0) {
                $.each(tblARows, function (index, value) {
                  
                    Inventory_TagAlongs.ItemNum = $('#txtItemNo').val();
                    Inventory_TagAlongs.TagAlong_ItemNum = value[0];
                    Inventory_TagAlongs.Store_ID = $('#txtStoreID').val();
                    AjaxObj.Inventory_TagAlongs.push(Inventory_TagAlongs);
                    Inventory_TagAlongs = { "ItemNum": "", "TagAlong_ItemNum": "", "Store_ID": "", "Quantity": "" };
                });
            }
            var tblCPDetail = $('#dtInventoryProperties').DataTable(), tblRows = tblCPDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                    
                    Inventory_Properties.ItemNum = $('#txtItemNo').val();
                    Inventory_Properties.Value_ID = value[2];
                    Inventory_Properties.Store_ID = $('#txtStoreID').val();
                    var chkIDStoreWithInvoice = $(value[3]).find("input[type='checkbox']")[0];
                    Inventory_Properties.StoreWithInvoice = $(chkIDStoreWithInvoice).is(':checked') ? 1 : 0;//check box is check then

                    AjaxObj.Inventory_Properties.push(Inventory_Properties);
                    Inventory_Properties = { "ItemNum": "", "Value_ID": "", "Store_ID": "", "StoreWithInvoice": "" }
                });
            }
            var tblPLDetail = $('#dtPriceLevelsList').DataTable(), tblRows = tblPLDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                    

                    var chkIDEnabled = "#" + value[0];
                    if ($(chkIDEnabled).is(':checked')) {
                        Inventory_DiscLevels.ItemNum = $('#txtItemNo').val();
                        Inventory_DiscLevels.Level = value[0];
                        Inventory_DiscLevels.Store_ID = $('#txtStoreID').val();
                        var PID = "#Perc-" + value[0];
                        Inventory_DiscLevels.Perc = $(PID).val() / 100;//Percentage

                        AjaxObj.Inventory_DiscLevels.push(Inventory_DiscLevels);

                        Inventory_DiscLevels = {
                            "ItemNum": "", "Store_ID": "", "Level": "", "Perc": ""
                        };
                    }
                });
            }
            

            var tblCPDetail = $('#tblVendor').DataTable(), tblRows = tblCPDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                    debugger;
                    Inventory_Vendors.ItemNum = $('#txtItemNo').val();
                    Inventory_Vendors.Store_ID = $('#txtStoreID').val();
                    Inventory_Vendors.Vendor_Number = value[2];
                    Inventory_Vendors.Vendor_Part_Num = value[4];
                    Inventory_Vendors.CostPer = value[5];
                    Inventory_Vendors.Case_Cost = value[6];
                    Inventory_Vendors.NumPerVenCase = value[7];
                    Inventory_Vendors.LandedCost = 0;
                    var chkIDIsPreffered = $(value[8]).find("input[type='checkbox']")[0];
                    var IsPreffered = $(chkIDIsPreffered).is(':checked') ? true : false;//check box is check then
                    if (IsPreffered) {
                        AjaxObj.Vendor_Number = Inventory_Vendors.Vendor_Number;
                        AjaxObj.Vendor_Part_Num = Inventory_Vendors.Vendor_Part_Num;
                        Inventory_Reorder.Vendor_Number = Inventory_Vendors.Vendor_Number;
                    }

                    AjaxObj.Inventory_Vendors.push(Inventory_Vendors);
                    Inventory_Vendors = {
                        "ItemNum": "", "Vendor_Number": "", "Store_ID": "", "CostPer": "", "Case_Cost": "", "NumPerVenCase": "",
                        "Vendor_Part_Num": "", "CubeCost": "", "WeightCost": "", "OverrideCommission": "", "LandedCost": "", "LandedCost": ""
                    };
                });
            }

            var tblGMDetail = $('#tblModifier').DataTable(), tblRows = tblGMDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                    debugger;
                    Modifiers.ItemNum = $('#txtItemNo').val();
                    Modifiers.Store_ID = $('#txtStoreID').val();
                    Modifiers.ModNum = value[0];
                    Modifiers.ModName = value[1];
                    Modifiers.Group_Or_Individual = 0;
                    Modifiers.Dirty = false;
                    Modifiers.Index = index;
                    Modifiers.RowID = CreateGuid();
                    Modifiers.Forced = 0;
                    Modifiers.ChargePrice = false;//check box is check then

                    AjaxObj.Modifiers.push(Modifiers);
                    Modifiers =
                    {
                        "ItemNum": "",
                        "Store_ID": "",
                        "ModNum": "",
                        "ModName": "",
                        "Dirty": "",
                        "Group_Or_Individual": "",
                        "ChargePrice": "",
                        "NumToSelect": "",
                        "Prompt": "",
                        "Index": "",
                        "Forced": "",
                        "RowID": ""
                    };
                });
            }
            var tblGMDetail = $('#tblGroupModifier').DataTable(), tblRows = tblGMDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                    debugger;
                    Modifiers.ItemNum = $('#txtItemNo').val();
                    Modifiers.Store_ID = $('#txtStoreID').val();
                    Modifiers.ModNum = value[2];
                    Modifiers.ModName = value[3];
                    Modifiers.Group_Or_Individual = 1;
                    Modifiers.NumToSelect = value[6];
                    Modifiers.Prompt = value[4];
                    Modifiers.Dirty = false;
                    Modifiers.Index = index;
                    Modifiers.RowID = CreateGuid();
                    var chkIDCharge = $(value[5]).find("input[type='checkbox']")[0];
                    Modifiers.ChargePrice = $(chkIDCharge).is(':checked') ? true : false;//check box is check then
                    var chkIDForced = $(value[7]).find("input[type='checkbox']")[0];
                    Modifiers.Forced = $(chkIDForced).is(':checked') ? true : false;//check box is check then

                    AjaxObj.Modifiers.push(Modifiers);

                    Modifiers =
                    {
                        "ItemNum": "",
                        "Store_ID": "",
                        "ModNum": "",
                        "ModName": "",
                        "Dirty": "",
                        "Group_Or_Individual": "",
                        "ChargePrice": "",
                        "NumToSelect": "",
                        "Prompt": "",
                        "Index": "",
                        "Forced": "",
                        "RowID": ""
                    };
                });
            }


            var d = new Date();
            var month = d.getMonth() + 1;
            var day = d.getDate();
            var EntryDate = (('' + day).length < 2 ? '0' : '') + day + '/' + (('' + month).length < 2 ? '0' : '') + month + '/' + d.getFullYear();


            AjaxObj.RowID = CreateGuid();
            AjaxObj.ItemType = $('#txtItemType').val();
            AjaxObj.ItemCategory = 0;
            AjaxObj.ItemNum = $('#txtItemNo').val();
            AjaxObj.ItemName = $('#txtDescription').val();
            AjaxObj.Store_ID = $('#txtStoreID').val();
            AjaxObj.Cost = $('#txtAvgCost').val();
            AjaxObj.Price = $('#txtPriceYouCharge').val();
            AjaxObj.Retail_Price = $('#txtPriceWithTax').val();
            AjaxObj.In_Stock = $('#txtNumberInStock').val();
            AjaxObj.Reorder_Level = $('#txtReorderLevel').val();
            AjaxObj.Reorder_Quantity = $('#txtReorderQuantity').val();
            if ($("#chkBarTax").is(":checked")) {
                AjaxObj.BarTaxInclusive = true;
            }
            else {
                AjaxObj.BarTaxInclusive = false;
            }
            if ($("#chkTax1").is(":checked")) {
                AjaxObj.Tax_1 = true;
            }
            else {
                AjaxObj.Tax_1 = false;
            }
            if ($("#chkTax2").is(":checked")) {
                AjaxObj.Tax_2 = true;
            }
            else {
                AjaxObj.Tax_2 = false;
            }
            if ($("#chkTax3").is(":checked")) {
                AjaxObj.Tax_3 = true;
            }
            else {
                AjaxObj.Tax_3 = false;
            }
            if ($("#chkTax4").is(":checked")) {
                AjaxObj.Tax_4 = true;
            }
            else {
                AjaxObj.Tax_4 = false;
            }
            if ($("#chkTax5").is(":checked")) {
                AjaxObj.Tax_5 = true;
            }
            else {
                AjaxObj.Tax_5 = false;
            }
            if ($("#chkTax6").is(":checked")) {
                AjaxObj.Tax_6 = true;
            }
            else {
                AjaxObj.Tax_6 = false;
            }


            AjaxObj.Dept_ID = $('#ddlDepartmentID').val();
            AjaxObj.IsKit = false;
            if ($("#chkModifierItem").is(":checked")) {
                AjaxObj.IsModifier = true;
            }
            else {
                AjaxObj.IsModifier = false;
            }


            //   AjaxObj.Kit_Override = $('#txtFirstName').val();
            AjaxObj.Inv_Num_Barcode_Labels = $('#txtBarCodesNo').val();
            if ($("#chkUseSerial").is(":checked")) {
                AjaxObj.Use_Serial_Numbers = true;
            }
            else {
                AjaxObj.Use_Serial_Numbers = false;
            }
            AjaxObj.Num_Bonus_Points = $('#txtBonusPoints').val();

            if ($("#chkPrintTicket").is(":checked")) {
                AjaxObj.Print_Ticket = true;
            }
            else {
                AjaxObj.Print_Ticket = false;
            }
            AjaxObj.Num_Days_Valid = $('#txtDaysValid').val();



            AjaxObj.Location = $('#txtLocation').val();
            if ($("#chkAutoWeigh").is(":checked")) {
                AjaxObj.AutoWeigh = true;
            }
            else {
                AjaxObj.AutoWeigh = false;
            }

            if ($("#chkFoodStampable").is(":checked")) {
                AjaxObj.FoodStampable = true;
            }
            else {
                AjaxObj.FoodStampable = false;
            }
            AjaxObj.ReOrder_Cost = $('#txtReorderCost').val();

            if ($("#chkExcludeFromAccountLimit").is(":checked")) {
                AjaxObj.Exclude_Acct_Limit = true;
            }
            else {
                AjaxObj.Exclude_Acct_Limit = false;
            }
            if ($("#chkCheckIDBeforeSelling").is(":checked")) {
                AjaxObj.Check_ID = true;
            }
            else {
                AjaxObj.Check_ID = false;
            }


            if ($("#chkPromptPrice").is(":checked")) {
                AjaxObj.Prompt_Price = true;
            }
            else {
                AjaxObj.Prompt_Price = false;
            }
            if ($("#chkPromptQuantity").is(":checked")) {
                AjaxObj.Prompt_Quantity = true;
            }
            else {
                AjaxObj.Prompt_Quantity = false;
            }
            AjaxObj.Inactive = $('#txtFirstName').val();
            if ($("#chkAllowBuyback").is(":checked")) {
                AjaxObj.Allow_BuyBack = true;
            }
            else {
                AjaxObj.Allow_BuyBack = false;
            }

            AjaxObj.Unit_Type = $('#txtUnitType').val();
            AjaxObj.Unit_Size = $('#txtUnitSize').val();

            if ($("#chkSpecialPermission").is(":checked")) {
                AjaxObj.Special_Permission = true;
            }
            else {
                AjaxObj.Special_Permission = false;
            }
            if ($("#chkPromptdescription").is(":checked")) {
                AjaxObj.Prompt_Description = true;
            }
            else {
                AjaxObj.Prompt_Description = false;
            }

            if ($("#chkCheckID2BeforeSelling").is(":checked")) {
                AjaxObj.Check_ID2 = true;
            }
            else {
                AjaxObj.Check_ID2 = false;
            }

            if ($("#chkCountThisItem").is(":checked")) {
                AjaxObj.Count_This_Item = true;
            }
            else {
                AjaxObj.Count_This_Item = false;
            }

            if ($("#chkPrintOnReceipt").is(":checked")) {
                AjaxObj.Print_On_Receipt = true;
            }
            else {
                AjaxObj.Print_On_Receipt = false;
            }

            if ($("#chkRequireCustomer").is(":checked")) {
                AjaxObj.RequireCustomer = true;
            }
            else {
                AjaxObj.RequireCustomer = false;
            }
            if ($("#chkPromptCompletationDate").is(":checked")) {
                AjaxObj.PromptCompletionDate = true;
            }
            else {
                AjaxObj.PromptCompletionDate = false;
            }
            if ($("#chkPromptInvoiceNotes").is(":checked")) {
                AjaxObj.PromptInvoiceNotes = true;
            }
            else {
                AjaxObj.PromptInvoiceNotes = false;
            }
            AjaxObj.Prompt_DescriptionOverDollarAmt = $('#txtPromptForDiscription').val();


            if ($("#chkNeverPrintInKitchen").is(":checked")) {
                AjaxObj.NeverPrintInKitchen = true;
            }
            else {
                AjaxObj.NeverPrintInKitchen = false;
            }
            if ($("#chkExcludeFromLoyaltyPlan").is(":checked")) {
                AjaxObj.Exclude_From_Loyalty = true;
            }
            else {
                AjaxObj.Exclude_From_Loyalty = false;
            }
            if ($("#chkScaleSihgleDeduct").is(":checked")) {
                AjaxObj.ScaleSingleDeduct = true;
            }
            else {
                AjaxObj.ScaleSingleDeduct = false;
            }

            AjaxObj.ScaleItemType = $('#ddlScaleItemTypeID').val();
            AjaxObj.DiscountType = $('#ddlDiscountTypeID').val();
            if ($("#chkAllowReturns").is(":checked")) {
                AjaxObj.AllowReturns = true;
            }
            else {
                AjaxObj.AllowReturns = false;
            }
            if ($("#chkLiabilityItem").is(":checked")) {
                AjaxObj.Liability = true;
            }
            else {
                AjaxObj.Liability = false;
            }
            if ($("#chkAllowOnDepositInvoices").is(":checked")) {
                AjaxObj.AllowOnDepositInvoices = true;
            }
            else {
                AjaxObj.AllowOnDepositInvoices = false;
            }

            if ($("#chkAllowOnFleetCard").is(":checked")) {
                AjaxObj.AllowOnFleetCard = true;
            }
            else {
                AjaxObj.AllowOnFleetCard = false;
            }
            if ($("#chkDisplayTaxInPrice").is(":checked")) {
                AjaxObj.DisplayTaxInPrice = true;
            }
            else {
                AjaxObj.DisplayTaxInPrice = false;
            }
            if ($("#chkNeverPrintInKitchen").is(":checked")) {
                AjaxObj.NeverPrintInKitchen = true;
            }
            else {
                AjaxObj.NeverPrintInKitchen = false;
            }


            if ($("#chkDisableInventoryUpload").is(":checked")) {
                AjaxObj.DisableInventoryUpload = true;
            }
            else {
                AjaxObj.DisableInventoryUpload = false;
            }

            AjaxObj.ItemName_Extra = $('#txtSecondDescription').val();


            if ($("#chkSellAsIS").is(":checked")) {
                AjaxObj.As_Is = true;
            }
            else {
                AjaxObj.As_Is = false;
            }

            AjaxObj.InvoiceLimitQty = $('#txtLimitQtyOnInvoice').val();
            AjaxObj.GLNumber = $('#txtGeneralledgerNumber').val();
            AjaxObj.Date_Created = EntryDate;



            AjaxObj.IsRental = $('#txtFirstName').val();
            AjaxObj.Use_Bulk_Pricing = $('#txtFirstName').val();

            AjaxObj.Print_Voucher = $('#txtFirstName').val();
            AjaxObj.IsMatrixItem = false;
            AjaxObj.numBoxes = $('#txtFirstName').val();
            AjaxObj.Dirty = $('#txtFirstName').val();
            AjaxObj.Tear = $('#txtFirstName').val();
            AjaxObj.NumPerCase = $('#txtFirstName').val();
            AjaxObj.Fixed_Tax = $('#txtFirstName').val();
            AjaxObj.DOB = $('#txtFirstName').val();
            AjaxObj.Transfer_Cost_Markup = $('#txtFirstName').val();
            AjaxObj.Transfer_Markup_Enabled = $('#txtFirstName').val();

            AjaxObj.InStock_Committed = $('#txtFirstName').val();

            AjaxObj.ModifierType = $('#txtFirstName').val();
            AjaxObj.Position = $('#txtFirstName').val();
            AjaxObj.numberOfFreeToppings = $('#txtFirstName').val();
            AjaxObj.SuggestedDeposit = $('#txtFirstName').val();
            AjaxObj.IsDeleted = 0;
            AjaxObj.ItemLocale = $('#txtFirstName').val();
            AjaxObj.QuantityRequired = $('#txtFirstName').val();

            AjaxObj.Helper_ItemNum = $('#txtFirstName').val();

            AjaxObj.Old_InStock = $('#txtFirstName').val();

            AjaxObj.Last_Sold = $('#txtFirstName').val();


            AjaxObj.IsRestrictedPerInvoice = $('#txtFirstName').val();
            AjaxObj.DoughnutTax = $('#txtFirstName').val();
            AjaxObj.Import_Markup = $('#txtFirstName').val();
            AjaxObj.PricePerMeasure = $('#txtFirstName').val();
            AjaxObj.UnitMeasure = $('#txtFirstName').val();
            AjaxObj.ShipCompliantProductType = $('#txtFirstName').val();
            AjaxObj.AlcoholContent = $('#txtFirstName').val();
            AjaxObj.AvailableOnline = $('#txtFirstName').val();



            return AjaxObj;
        }
        function isNumberKey(evt, obj) {

            var charCode = (evt.which) ? evt.which : event.keyCode
            var value = obj.value;
            var dotcontains = value.indexOf(".") != -1;
            if (dotcontains)
                if (charCode == 46) return false;
            if (charCode == 46) return true;
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }
        $('#ddlPropertyID').change(function () {
            var PropertyID = $(this).val();
            if (Number(PropertyID) > 0) {
                GetValueByProperty();
            }

        });
        function GetAllProperties() {
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Customer/GetPropertiesAll',
                    type: 'POST',
                    headers: headers,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {

                        if (result != null && result != "" && result != "Error") {
                            $("#ddlPropertyID").html("");
                            $("#ddlPropertyID").append
                                ($('<option  selected value="0"></option>').val('0').html("Select Property"));
                            $.each($.parseJSON(result), function (i, Data) {
                                $("#ddlPropertyID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))

                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function GetValueByProperty() {

            var PropertyID = $("#ddlPropertyID").val();
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Customer/GetValueByProperty',
                    type: 'POST',
                    async: false,
                    data: JSON.stringify({ PropertyID: PropertyID }),
                    headers: headers,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {

                        if (result != null && result != "" && result != "Error") {
                            $("#ddlValueID").html("");
                            $("#ddlValueID").append
                                ($('<option  selected value=""></option>').val('').html("Select Value"));
                            $.each($.parseJSON(result), function (i, ECategory) {
                                $("#ddlValueID").append
                                    ($('<option></option>').val(ECategory.ID).html(ECategory.Description))

                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function GetAllDepartment() {
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Common/GetDepartmentAll',
                    type: 'POST',
                    headers: headers,
                    async:false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {

                        if (result != null && result != "" && result != "Error") {
                            $("#ddlDepartmentID,#ddlRecipeItemDepartmentID").html("");
                            $("#ddlDepartmentID,#ddlRecipeItemDepartmentID").append
                                ($('<option  selected value=""></option>').val('').html("Select Department"));
                            $("#ddlItemDepartmentID").html("");
                            $("#ddlItemDepartmentID").append
                                ($('<option  selected value=""></option>').val('').html("Select Department"));
                            $.each($.parseJSON(result), function (i, Data) {
                                $("#ddlItemDepartmentID,#ddlRecipeItemDepartmentID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))
                                $("#ddlDepartmentID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))
                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function GetAllModifier() {
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Common/GetModifierAll',
                    type: 'POST',
                    headers: headers,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {

                        if (result != null && result != "" && result != "Error") {
                            $("#ddlItemModifierID").html("");
                            $("#ddlItemModifierID").append
                                ($('<option  selected value=""></option>').val('').html("Select Modifier"));

                            $.each($.parseJSON(result), function (i, Data) {
                                $("#ddlItemModifierID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))

                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function GetAllModifierGroup() {
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Common/GetModifierGroupAll',
                    type: 'POST',
                    headers: headers,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {

                        if (result != null && result != "" && result != "Error") {
                            $("#ddlModifierGroupID").html("");
                            $("#ddlModifierGroupID").append
                                ($('<option  selected value=""></option>').val('').html("Select Modifier Group"));

                            $.each($.parseJSON(result), function (i, Data) {
                                $("#ddlModifierGroupID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))

                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function GetAllCategories() {
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Common/GetCategoriesAll',
                    type: 'POST',
                    headers: headers,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {

                        if (result != null && result != "" && result != "Error") {
                            $("#ddlItemCategoryID,#ddlRecipeItemCategoryID").html("");
                            $("#ddlItemCategoryID,#ddlRecipeItemCategoryID").append
                                ($('<option  selected value="0"></option>').val('0').html("Select Category"));
                            $.each($.parseJSON(result), function (i, Data) {
                                $("#ddlItemCategoryID,#ddlRecipeItemCategoryID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))

                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function GetAllVendor() {
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Common/GetVendorAll',
                    type: 'POST',
                    headers: headers,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {

                        if (result != null && result != "" && result != "Error") {
                            $("#ddlVendorID,#ddlVendorOrderingInfoID,#ddlRecipeVendorID").html("");
                            $("#ddlVendorID,#ddlVendorOrderingInfoID,#ddlRecipeVendorID").append
                                ($('<option  selected value="0"></option>').val('').html("Select Vendor"));
                            $.each($.parseJSON(result), function (i, Data) {
                                $("#ddlVendorID,#ddlVendorOrderingInfoID,#ddlRecipeVendorID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))

                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function GetItem() {

            $("body").tooltip({ selector: '[data-toggle=tooltip]' });
            $('[data-toggle="tooltip"]').tooltip({ html: true });

            let VendorNo = $('#ddlVendorID').val();
            let DepartmentID = $('#ddlItemDepartmentID').val();
            let ItemCategory = $('#ddlItemCategoryID').val();
            var table = $("#dtItemList").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;

            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Common/GetItemAll",
                data: JSON.stringify({ "ItemCategory": ItemCategory, "DepartmentID": DepartmentID, "VendorNumber": VendorNo }),
                dataType: "json",
                success: function (result) {
                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {

                            debugger;
                            var newRow = "<tr><td>" + Data.ItemNum + "</td>" +
                                "<td>" + Data.ItemName + "</td>" +
                                "<td>" + Data.Price + "</td>" +
                                "<td>" + Data.In_Stock + "</td>" +
                                "<td>" + Data.Vendor_Part_Num + "</td>" +
                                "<td style='text-align:Right'>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Select Item'><button onclick='AddTagAlongDetailRecord(" + Data.ItemNum + ");'type='button' class='btn bg-primary  btn-sm authorizeOrNotUpdate'  style='color:white'>Select</button></span>" +
                                "</td>" +
                                "</tr>";


                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
    }
    function GetFriendlyPrinters() {

        $("body").tooltip({ selector: '[data-toggle=tooltip]' });
        $('[data-toggle="tooltip"]').tooltip({ html: true });


        var table = $("#tblPrinterList").DataTable();
        var count = 1;
        var headers = {};
        var token = $('input[name="__RequestVerificationToken"]').val();
        headers['__RequestVerificationToken'] = token;

        $.ajax({
            type: "POST",
            headers: headers,
            contentType: "application/json; charset=utf-8",
            url: "/Inventory/GetFriendlyPrinters",
            dataType: "json",
            success: function (result) {
                if (result != null && result != "Error") {
                    table.clear();


                    $.each(result, function (i, Data) {
                        var PName = (Data.PrinterName).replace(/\s/g, '');
                        debugger;
                        var newRow = "<tr><td>" + Data.PrinterName + "</td>" +
                            "<td><div class='custom-control custom-checkbox'><input type='checkbox' class='custom-control-input' id='" + PName + "' /><label class='custom-control-label' for='" + PName + "' style='margin-left:10px'></label></div> </td>" +
                              "</tr>";


                        table.row.add($(newRow));
                    });
                    table.draw();
                    debugger;
                    var tblPRLDetail = $("#tblPrinterList").DataTable();
                    var tblPRows = table.rows().data();
                }
                else {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                    swal("", errorMessage, "error");
                }
            },
            error: function (xhr, status, error) {
                var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                swal("", errorMessage, "error");

            }


        });
    }
        function GetPriceLevels() {

            //debugger;
            var result = [{ PriceLevel: "A" }, { PriceLevel: "B" }, { PriceLevel: "C" }, { PriceLevel: "D" }, { PriceLevel: "E" }, { PriceLevel: "F" }, { PriceLevel: "G" },
            { PriceLevel: "H" }, { PriceLevel: "I" }, { PriceLevel: "J" }, { PriceLevel: "K" }, { PriceLevel: "L" }, { PriceLevel: "M" },
            { PriceLevel: "N" }, { PriceLevel: "O" }, { PriceLevel: "P" }, { PriceLevel: "Q" }, { PriceLevel: "R" }, { PriceLevel: "S" },
            { PriceLevel: "T" }, { PriceLevel: "U" }, { PriceLevel: "V" }, { PriceLevel: "W" }, { PriceLevel: "X" }, { PriceLevel: "Y" }, { PriceLevel: "Z" }]
            var table = $("#dtPriceLevelsList").DataTable();
            var count = 1;
            table.clear();


            $.each(result, function (i, Data) {

                //debugger;
                var newRow = "<tr><td hidden>" + Data.PriceLevel + "</td><td><b>" + Data.PriceLevel + "</b></td>" +
                    "<td><input type='text' id='Amt-" + Data.PriceLevel + "'class='form-control' value='0.00' onkeypress='return isNumberKey(event, this)' onchange='CalculatePercentageByAmount(\"" + Data.PriceLevel + "\")'/></td>" +
                    "<td><input type='text' id='Perc-" + Data.PriceLevel + "'class='form-control' value='0.00' onkeypress='return isNumberKey(event, this)' onchange='CalculateAmountByPercentage(\"" + Data.PriceLevel + "\")'/></td>" +
                    "<td><div class='custom-control custom-checkbox'><input type='checkbox' class='custom-control-input' id='" + Data.PriceLevel + "' /><label class='custom-control-label' for='" + Data.PriceLevel + "' style='margin-left:10px'></label></div> </td>" +
                    "</tr>";


                table.row.add($(newRow));
            });
            table.draw();
            

        }
        function ClearMessage() {
            $("#message").html("");
        };
        function CheckAvailability() {


            var ItemNo = $("#txtItemNo").val();
            var IsEdit = $('#txtEdit').val();
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                url: '/Inventory/CheckItemNo',
                headers: headers,
                data: JSON.stringify({ ItemNo: ItemNo, IsEdit: IsEdit }),

                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var message = $("#message");
                    if (result == true) {


                        $("#IsValidID").val(result);
                    }
                    else if (result == false) {
                        message.css("color", "red");
                        message.html("Item Number already exists!");
                        $("#IsValidID").val(result);
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");

                    }

                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");
                }




            });

        }
        function RedirectPage() {
            window.location.replace("/InventoryList/Index");

    }
    function SetRedirection(type) {
      //1 for save 2 for save and goto list
        $("#txtRedirection").val(type);
    }
        function CalculatePercentageByAmount(Level) {
            var PID = "#Perc-" + Level;
            var AID = "#Amt-" + Level;
            var Price = $("#txtPriceYouCharge").val();
            var Amount = $(AID).val();
            var percentage = (((Price - Amount) / Price) * 100).toFixed(2);
            $(PID).val(percentage);
        }
        function CalculateAmountByPercentage(Level) {
            debugger;
            var PID = "#Perc-" + Level;
            var AID = "#Amt-" + Level;
            var percentage = $(PID).val();


            var Amount = percentage / 100 * $("#txtPriceYouCharge").val();
            Amount = ($("#txtPriceYouCharge").val() - Amount).toFixed(2);
            $(AID).val(Amount);
        }
        function GetRecipeItem() {

            $("body").tooltip({ selector: '[data-toggle=tooltip]' });
            $('[data-toggle="tooltip"]').tooltip({ html: true });

            let VendorNo = $('#ddlRecipeVendorID').val();
            let DepartmentID = $('#ddlRecipeItemDepartmentID').val();
            let ItemCategory = $('#ddlRecipeItemCategoryID').val();
            var table = $("#dtRecipeItemList").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;

            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Common/GetItemAll",
                data: JSON.stringify({ "ItemCategory": ItemCategory, "DepartmentID": DepartmentID, "VendorNumber": VendorNo }),
                dataType: "json",
                success: function (result) {
                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {

                            debugger;
                            var newRow = "<tr><td>" + Data.ItemNum + "</td>" +
                                "<td>" + Data.ItemName + "</td>" +
                                "<td>" + Data.Price + "</td>" +
                                "<td>" + Data.In_Stock + "</td>" +
                                "<td>" + Data.Vendor_Part_Num + "</td>" +
                                "<td style='text-align:Right'>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Select Item'><button onclick='SelectRecipeItem(" + Data.ItemNum + "," + Data.Price + ",\"" + Data.ItemName + "\");'type='button' class='btn bg-primary  btn-sm authorizeOrNotUpdate'  style='color:white'>Select</button></span>" +
                                "</td>" +
                                "</tr>";


                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function SelectRecipeItem(itemNum, Price, ItemName) {
            $("#txtRecipeItemNum").val(itemNum);
            $("#txtRecipeItemDesc").val(ItemName);
            var Quantity = $("#txtRecipeQuantity").val();
            var Percentage = $("#txtRecipeYieldPercentage").val();
            var Cost = Quantity * Percentage * Price; //Formula required
            $("#txtRecipeItemPrice").val(Cost);
        }

        function CreateGuid() {
            function _p8(s) {
                var p = (Math.random().toString(16) + "000000000").substr(2, 8);
                return s ? "-" + p.substr(0, 4) + "-" + p.substr(4, 4) : p;
            }
            return _p8() + _p8(true) + _p8(true) + _p8();
    }
    function delIIRow(i) {
        try {

            var row = $(i).closest("tr");
            var table1 = $('#dtInventoryImages').DataTable();
            table1.row(row).remove().draw(false);

        } catch (Exception) {
            console.log("Exception Error in deleting option " + Exception);
        }
    }
        var headers = {};
        var token = $('input[name="__RequestVerificationToken"]').val();
        headers['__RequestVerificationToken'] = token;
        Dropzone.options.myAwesomeDropzone = {
            //maxFiles: Number(ImageCount),
            addRemoveLinks: true,
            accept: function (file, done) {

                var width = 0;
                var height = 0;


                // FileReader() asynchronously reads the contents of files (or raw data buffers) stored on the user's computer.
                var reader = new FileReader();
                reader.onload = (function (entry) {
                    // The Image() constructor creates a new HTMLImageElement instance.
                    var image = new Image();

                    image.src = entry.target.result;
                    image.onload = function () {
                        width = this.width;
                        height = this.height;
                        console.log(this.width);
                        console.log(this.height);
                        console.log("width: " + width);
                        console.log("height: " + height)
                        //  if (width<400 || height<400)
                        //  {
                        //done("Invalid dimensions!");
                        //  }
                        //else { done(); }
                    };
                });

                reader.readAsDataURL(file);

                done();

                //  if (width)
                //  {
                //done("Invalid dimensions!");
                //  }
                //else { done(); }
                //console.log("width: "+file.);
                //console.log("height: "+file.height);
                // done();
            },
            headers: headers
            @* init: function () {
            this.on("maxfilesexceeded", function (file) {
                debugger;

                $(".Pics").css("color", "red");
                //    alert("You can Only Upload"+ @Model.AllowedPics+" Pictures!");

            });
        }*@
        };
        function Dropzonefunc() {

            debugger;
            $('.dropzone')[0].dropzone.options.maxFiles = ImageCount;

        }
    function SaveInventoryImages(ItemNum) {
        var itemNo = ItemNum;
            debugger;
            // alert("my data");
        var InventoryImages = [];
        var urlUploadImage = "/Inventory/UploadImage?ItemNum=" + itemNo;
            var c = 0;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
c = $('table#dtInventoryImages tbody').find('tr:not(:has(th))');

            //var tblCPDetail = $('#dtInventoryImages').DataTable(), tblRows = tblCPDetail.rows().data();
            //if (tblRows.length > 0) {
            //    $.each(tblRows, function (index, value) {
            //        debugger;
            //        var image = $(value[0]).find('input');

            //        InventoryImages.push($(image).val());
            //    });

            if (c.length > 0) {
                c.each(function (i, k) {
                    debugger;
                    var $td = $(this).find("td");
                    InventoryImages.push($td.eq(0).children().first().val());

                });
                debugger;
                if (InventoryImages.length > 0 && InventoryImages!=null) {
                    var urlStr = "/Inventory/UpdateImage";

                    $.ajax({
                        url: urlStr,
                        type: "POST",
                        headers: headers,
                        data: JSON.stringify({ ItemNum, InventoryImages }),
                        contentType: 'application/json; charset=utf-8',
                        //data: json,
                        async: false,
                        //cache: false,
                        success: function (result) {
                            debugger;
                            if (result.Code == 200) {
                                debugger;
                                var myDropzone = Dropzone.forElement(".dropzone");

                                debugger;
                                var data = new FormData();

                                debugger;
                                var files = myDropzone.getAcceptedFiles();
                                var ItemNum = ItemNum;
                                if (files.length > 0) {
                                    for (var i = 0; i <= myDropzone.getAcceptedFiles().length; i++) {
                                        data.append("MyImages" + i, files[i]);
                                    }


                                    debugger;
                                    $.ajax({


                                        url: urlUploadImage,
                                        type: "POST",
                                        contentType: false, // Not to set any content header
                                        processData: false, // Not to process data
                                        data: data,
                                        async: false,
                                        headers: headers,
                                        success: function (result) {
                                            debugger;
                                            if (result.Code == 200) {

                                                swal({
                                                    title: "",
                                                    text: result.Message,
                                                    type: result.Type,
                                                    showCancelButton: false,
                                                    confirmButtonClass: "btn btn-success",
                                                    cancelButtonClass: "btn btn-primary",
                                                    confirmButtonText: "Ok",
                                                    cancelButtonText: "Cancel",
                                                    closeOnConfirm: true,
                                                    closeOnCancel: true
                                                },
                                                    //debugger;
                                                    function (isConfirm) {
                                                        if (isConfirm) {
                                                            if ($("#txtRedirection").val() == 2) {
                                                                window.location.replace("/InventoryList/Index");
                                                            }
                                                            else {
                                                                $('#btnsave').text('Update');
                                                                $('#btnsaveandList').text('Update and Go to List');
                                                                $('#txtEdit').val(1);
                                                                $('#txtItemNo').prop("disabled", true);
                                                            }

                                                        }
                                                    });
                                            }
                                            else if (result == "Error occurred.") {
                                                alert("Error in uploading file.")
                                            }




                                        }

                                    });





                                }
                                else {
                                    swal({
                                        title: "",
                                        text: result.Message,
                                        type: result.Type,
                                        showCancelButton: false,
                                        confirmButtonClass: "btn btn-success",
                                        cancelButtonClass: "btn btn-primary",
                                        confirmButtonText: "Ok",
                                        cancelButtonText: "Cancel",
                                        closeOnConfirm: true,
                                        closeOnCancel: true
                                    },
                                        //debugger;
                                        function (isConfirm) {
                                            if (isConfirm) {
                                                if ($("#txtRedirection").val() == 2) {
                                                    window.location.replace("/InventoryList/Index");
                                                }
                                                else {
                                                    $('#btnsave').text('Update');
                                                    $('#btnsaveandList').text('Update and Go to List');
                                                    $('#txtEdit').val(1);
                                                    $('#txtItemNo').prop("disabled", true);
                                                }
                                            }
                                        });
                                }
                            }
                            else {
                                var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                                swal("", errorMessage, "error");
                            }
                        },
                        error: function (xhr, status, error) {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                            swal("", errorMessage, "error");

                        }
                    });
                }
            }
            else {
                debugger;
                var myDropzone = Dropzone.forElement(".dropzone");

                debugger;
                var data = new FormData();

                debugger;
                var files = myDropzone.getAcceptedFiles();
                var ItemNum = ItemNum;
                if (files.length > 0) {
                    for (var i = 0; i <= myDropzone.getAcceptedFiles().length; i++) {
                        data.append("MyImages" + i, files[i]);
                    }


                    debugger;
                    $.ajax({


                        url: urlUploadImage,
                        type: "POST",
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        data: data,
                        headers: headers,
                        async: false,
                        success: function (result) {
                            debugger;
                            if (result.Code == 200) {

                                swal({
                                    title: "",
                                    text: result.Message,
                                    type: result.Type,
                                    showCancelButton: false,
                                    confirmButtonClass: "btn btn-success",
                                    cancelButtonClass: "btn btn-primary",
                                    confirmButtonText: "Ok",
                                    cancelButtonText: "Cancel",
                                    closeOnConfirm: true,
                                    closeOnCancel: true
                                },
                                    //debugger;
                                    function (isConfirm) {
                                        if (isConfirm) {
                                            if ($("#txtRedirection").val() == 2) {
                                                window.location.replace("/InventoryList/Index");
                                            }
                                            else {
                                                $('#btnsave').text('Update');
                                                $('#btnsaveandList').text('Update and Go to List');
                                                $('#txtEdit').val(1);
                                                $('#txtItemNo').prop("disabled", true);
                                            }
                                        }
                                    });
                            }
                            else {
                                var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                                swal("", errorMessage, "error");
                            }
                        },
                        error: function (xhr, status, error) {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                            swal("", errorMessage, "error");

                        }




                    }

                    );





                }
                else {
                    swal({
                        title: "",
                        text: result.Message,
                        type: result.Type,
                        showCancelButton: false,
                        confirmButtonClass: "btn btn-success",
                        cancelButtonClass: "btn btn-primary",
                        confirmButtonText: "Ok",
                        cancelButtonText: "Cancel",
                        closeOnConfirm: true,
                        closeOnCancel: true
                    },
                        //debugger;
                        function (isConfirm) {
                            if (isConfirm) {
                                if ($("#txtRedirection").val() == 2) {
                                    window.location.replace("/InventoryList/Index");
                                }
                                else {
                                    $('#btnsave').text('Update');
                                    $('#btnsaveandList').text('Update and Go to List');
                                    $('#txtEdit').val(1);
                                    $('#txtItemNo').prop("disabled", true);
                                }
                            }
                        });
                }
            }

        }
</script>
}
