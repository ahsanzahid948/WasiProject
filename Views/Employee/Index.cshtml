
@using System.Configuration;

@{string ImagePath = ConfigurationManager.AppSettings["ImageLocationURL"].ToString();}

<head>
    <title>Employee</title>


</head>

@section styles {

    <link href="~/Content/assets/css/dropzone.css" rel="stylesheet" />
    <style>


        .dz-max-files-reached {
            border-color: red;
        }
    </style>
}


<div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
    <div class="d-flex">
        <div class="breadcrumb">
            <a href="dashboard.cshtml" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
            <span class="breadcrumb-item active">Employee</span>
        </div>
        <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
    </div>
</div>
<div class="card">
    <div class="card-header header-elements-inline search-header">
        <h5 class="card-title">
            <i class=""></i>Employee
        </h5>

    </div>



    <div class="card-body">
        <ul class="nav nav-tabs">
            <li class="nav-item"><a href="#GeneralInformation" class="nav-link active show" data-toggle="tab">General Information </a></li>

            <li class="nav-item"><a href="#PersonalInfo" class="nav-link" data-toggle="tab">Personal Info</a></li>
            <li class="nav-item"><a href="#Permissions" class="nav-link" data-toggle="tab">Permissions</a></li>
            <li class="nav-item"><a href="#JobCodesandWages" class="nav-link" data-toggle="tab">Job Codes and Wages</a></li>
            <li class="nav-item"><a href="#StoreAssociations" class="nav-link" data-toggle="tab">Store Associations</a></li>






        </ul>
        <form id="EmployeeForm">
            @Html.AntiForgeryToken()
            <div class="tab-content">
                <!-- Div Options Info GeneralInformation-->
                <div class="tab-pane fade in active show" id="GeneralInformation">

                    <input type="hidden" id="txtStoreID" value="0">
                    
                    <input type="hidden" id="txtRedirection" value="1">
                    <div class="row" style="">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Employee ID
                                    <span class="text-danger"> * </span>
                                </label>
                                <div class="col-md-8">

                                    <input type="text" value="" id="txtCashierID" name="txtCashierID" maxlength="6" class="form-control" required onchange="CheckAvailability();" />
                                    <span id="message"></span>
                                    <input type="hidden" id="IsValidID" value="true">
                                    <input type="hidden" id="txtEdit" value="0">

                                </div>
                            </div>



                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Display Name
                                    <span class="text-danger"> * </span>
                                </label>
                                <div class="col-md-8">

                                    <input type="text" value="" id="txtDisplayName" name="txtDisplayName" maxlength="30" class="form-control" />


                                </div>
                            </div>



                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Password
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="" id="txtPassword" name="txtPassword" maxlength="50" class="form-control" required />


                                </div>
                            </div>


                        </div>




                    </div>

                    <div class="row">

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Card Swipe ID

                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtCardSwipeID"  name="txtCardSwipeID" maxlength="50" class="form-control" onkeyup="" onchange="" />


                                </div>
                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Hourly Wage

                                </label>

                                <div class="col-md-8">

                                    <input type="text" id="txtHourlyWage" name="txtHourlyWage" class="form-control" />


                                </div>
                            </div>


                        </div>


                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Overtime starts after this many hours
                                   
                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="" id="txtOvertimestart" name="txtOvertimestart" class="form-control" />


                                </div>
                            </div>


                        </div>





                    </div>
                    <div class="row">





                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    GL Number

                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="" id="txtGLNumber" name="txtGLNumber" maxlength="70" class="form-control" />


                                </div>
                            </div>


                        </div>





                    </div>


                    <div class="row">

                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Disable this employee

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkDisablethisemployee" value="true"  name="chkDisablethisemployee">
                                        <input type="hidden" value="false" name="chkDisablethisemployee" />
                                        <label class="custom-control-label" for="chkDisablethisemployee"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Take CC Tips in Cash at End of Shift

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="CCTips" value="true" name="CCTips">
                                        <input type="hidden" value="false" name="CCTips" />
                                        <label class="custom-control-label" for="CCTips"></label>
                                    </div>

                                </div>

                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Require Clock-In Before Login

                                </label>
                                <div class="col-md-8">
                                   

                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkRequireClock" value="true" name="chkRequireClock">
                                        <input type="hidden" value="false" name="chkRequireClock" />
                                        <label class="custom-control-label" for="chkRequireClock"></label>
                                    </div>



                                </div>

                            </div>


                        </div>







                    </div>

                </div>

                <!-- Div Options  PersonalInfo-->

                <div class="tab-pane fade in " id="PersonalInfo">

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    First Name
                                
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtFirstName" name="txtFirstName" maxlength="15" class="form-control"  />




                                </div>
                            </div>
                        </div>



                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Middle Name
                                   
                                </label>
                                <div class="col-md-8">
                                    <input type="text" value="" id="txtMiddleName" name="txtMiddleName" maxlength="15" class="form-control"  />




                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Last Name
                                    
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtLastName" maxlength="20" name="txtLastName" class="form-control"  />




                                </div>
                            </div>


                        </div>

                    </div>


                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Street Address 1
                                   
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" maxlength="30" id="txtStreetAddress1" name="txtStreetAddress1" class="form-control"  />




                                </div>
                            </div>
                        </div>



                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    State
                                    
                                </label>
                                <div class="col-md-8">
                                    <input type="text" value="" id="txtState" name="txtState" class="form-control" maxlength="15" />




                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    City
                                   
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtCity" name="txtCity" class="form-control" maxlength="20" />




                                </div>
                            </div>


                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Street Address 2

                                </label>

                                <div class="col-md-8">

                                    <input type="number" maxlength="30" value="" id="txtStreetAddress2" name="txtStreetAddress2"  class="form-control"  />


                                </div>
                            </div>
                        </div>



                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    SSN/ID
                                   

                                </label>
                                <div class="col-md-8">
                                    <input type="text" value="" id="txtSSN" name="txtSSN" class="form-control" maxlength="20" />




                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Zip Code
                                   
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtZipCode" name="txtZipCode" class="form-control" maxlength="15" />




                                </div>
                            </div>


                        </div>

                    </div>
                    <div class="row">




                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Phone
                                
                                </label>
                                <div class="col-md-8">
                                    <input type="text" value="" id="txtPhone" name="txtPhone" class="form-control" maxlength="20" />




                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    E-Mail
                                    
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtEMail" name="txtEMail" class="form-control" maxlength="50" />




                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Birthday

                                </label>
                                <div class="col-md-8">
                                    <input type="text" id="txtBirthday" class="form-control pickadate-accessibility" placeholder="Select  Date">


                                </div>
                            </div>


                        </div>
                    </div>



                </div>
                <!-- Div   Permissions-->

                <div class="tab-pane fade in " id="Permissions">

                    <div class="card " >
                        <div class="card-header header-elements-inline search-header" >
                            
                            <div class="row col-md-12">
                                <div class="col-md-2">
                                    <span> Category</span> </div>
                                                          <div class="col-md-4">
                                                              <select  id="ddlPermissionsCategory" >
                                                                  <option value="10">Select Category</option>
                                                                  <option value="0">Functionality</option>
                                                                  <option value="1">Inventory</option>
                                                                  <option value="2">Customers</option>
                                                                  <option value="3"> Reports</option>
                                                                  <option value="4"> Setup</option>
                                                                  <option value="5">Restaurant</option>
                                                                  <option value="6">Handheld</option>

                                                              </select>
                                                          </div>


                                                          </div>

                            </div>
                            <div class="card-body cardNoPaging">


                                <table class="table  dataTable no-footer " id="dtPermissions">
                                    <thead>
                                        <tr>
                                            <th hidden>ID</th>
                                            <th>Category</th>
                                            <th>Short Description</th>
                                            <th>Long Description</th>

                                            <th>Log As Exception</th>
                                            <th>Access Level</th>

                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>

                </div>

                <!-- Div  JobCodesandWages-->

                <div class="tab-pane fade in " id="JobCodesandWages">
                    <div class="card mt-4">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnJobCodesandWagesmodal" class='btn   btn-labeled btn-labeled-left btn-sm' onclick="" data-toggle='modal' data-target='#JobCodesandWagesmodal' style="background-color:white;">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> New  </span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="dtJobCodesandWages">
                                <thead>
                                    <tr>
                                        <th hidden>CashierID</th>
                                        <th >No.</th>
                                        <th>JobCodeID</th>
                                        <th>HourlyWage</th>
                                        <th>OvertimeHourlyWage</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Div StoreAssociations -->
                <div class="tab-pane fade in " id="StoreAssociations">
                    <div class="card mt-4">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                @*<button type='button' id="btnAddInventoryPropertiesDetails" class='btn   btn-labeled btn-labeled-left btn-sm' onclick="NewInventoryProperties()" data-toggle='modal' data-target='#PropertiesModal' style="background-color:white;">
            <b><i class="icon-plus3"></i></b>
            Add
        </button>*@
                                <span> Store Associations</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="dtStoreAssociations">
                                <thead>
                                    <tr>
                                        
                                        <th>Store </th>
                                        
                                    </tr>
                                </thead>
                                <tbody>
                                    

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- Div Notes -->

            </div>
            <div class="modal-footer">


                <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-lg" style="color:white" onclick="RedirectPage();"><b><i class="icon-cross2"></i></b>Cancel</button>
                <button class="btn btn-primary btn-lg" type="submit" id="btnsave" onclick="SetRedirection(1);">Save</button>
                <button class="btn btn-primary btn-lg" type="submit" id="btnsaveandList" onclick="SetRedirection(2);">Save and Go to List</button>
            </div>
        </form>
        @*<div class="row mb-3">
                <div class="col-lg-12">
                    <form action="#" class="dropzone" id="my-awesome-dropzone">
                        @Html.AntiForgeryToken()
                        <div class="fallback">
                            <input name="file" type="file" multiple id="InventoryImages" />
                        </div>
                    </form>


                </div>
                <br />

            </div>*@
    </div>
</div>

<!-- Modals Area -->
<!-- Div JobCodesandWagesmodal Modal -->

<div id="JobCodesandWagesmodal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">

            <form id="JobCodesandWagesForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Job Codes and Wages</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">
                        <input type="text" id="txtjobCodeCashierID" class="form-control" name="txtjobCodeCashierID" style="display:none" />

                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                JobCode ID
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">
                                <select class=" form-control" id="ddlJobCodeID" required>

                                    <option value="" selected>Select Job Code</option>
                                   

                                </select>


                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Hourly Wage

                            </label>
                            <div class="col-md-7">


                                <input type="text" id="txthourlyWage" class="form-control" name="txtOvertimeHourlyWage" style="" />


                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Overtime Hourly Wage

                            </label>
                            <div class="col-md-7">


                                <input type="text" id="txtOvertimeHourlyWage" class="form-control" name="txtOvertimeHourlyWage" style="" />


                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnJobCodesandWages" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>




@section scripts
{

    <script src="~/Content/assets/js/dropzone.js"></script>

    @Scripts.Render("~/bundles/DataTableScripts")

    @Scripts.Render("~/bundles/DateScripts")
<script>
        $(document).ready(function () {

            try {
                $('.clsdtNoPagingInfo').DataTable({
                    "paging": false, searching: false, ordering: false, info: false, buttons: { dom: { button: { className: 'btn btn-light' } }, buttons: [] }
                });
            } catch (e) { }
            $('#ddlPermissionsCategory').select2();
            GetPermissions();
            GetJobCodeIDS()



            debugger;
            var EncryptedID = fnCheckIDForEditOnLoad();
            if (EncryptedID != null && EncryptedID != undefined & EncryptedID != "") {
                var ID = fnDecryptID(EncryptedID);
                if (ID != null && ID != undefined && ID != "0") {


                    LoadEmployDetailsAll(ID);
                    $("#btnsave").text("Update");

                    $('#txtCashierID').prop("disabled", true);
                    $("#btnsaveandList").text("Update and Go to List");

                }


            }





        });
    $("#ddlPermissionsCategory").change(function () {
        if ($("#ddlPermissionsCategory").val() == 10) {
            var category = "";
            $('#dtPermissions').DataTable();
            $('#dtPermissions')
                .DataTable()
                .search(category, false, true)
                .draw();

        }
    else {
        var category = $("#ddlPermissionsCategory option:selected").text();
        $('#dtPermissions').DataTable();
        $('#dtPermissions')
            .DataTable()
            .search(category, false, true)
            .draw();
    }
    });
        function GetPermissions() {
            debugger
            var table = $("#dtPermissions").DataTable();

            var Category = 10;
            /*if (Category == "" || Category == null || Category == undefined) { Category = 0; }*/
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;

            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Employee/GetPermissions",

                data: JSON.stringify({ Category: Category }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {
                            var CatDesc = "";
                            if (Data.Category == 0) {
                                CatDesc="Functionality"
                            }
                            else if (Data.Category == 1) {
                                CatDesc = "Inventory"
                            }
                            else if (Data.Category == 2) {
                                CatDesc = "Customers"
                            }
                            else if (Data.Category == 3) {
                                CatDesc = "Reports"
                            }
                            else if (Data.Category == 4) {
                                CatDesc = "Setup"
                            }
                            else if (Data.Category ==5) {
                                CatDesc = "Restaurant"
                            }
                            else if (Data.Category == 6) {
                                CatDesc = "Handheld"
                            }
                            if (Data.PermissionType == 0) {
                                var newRow = "<tr><td style='display:none'>" + Data.PermissionID + "</td>" +
                                    "<td>" +CatDesc + "</td>" +
                                    "<td>" + Data.ShortDescription + "</td>" +
                                    "<td>" + Data.LongDescription + "</td>" +
                                    "<td><input value='1" + Data.PermissionID + "' type='checkbox'></td>" +
                                    "<td><select name='2" + Data.PermissionID + "' id='2" + Data.PermissionID + "' class='form-control'><option value = '0' > No</option ><option value='1'>Yes</option><option value='2'>Prompt</option><option value='3'>Overide</option></select ></td>" +
                                    "</tr> ";
                            }
                            else {
                                var newRow = "<tr><td style='display:none'>" + Data.PermissionID + "</td><td>" + CatDesc + "</td><td>" + Data.ShortDescription + "</td><td>" + Data.LongDescription + "</td><td><input value='1" + Data.PermissionID + "' type='checkbox'></td><td><select name='2" + Data.PermissionID + "' id='2" + Data.PermissionID +"' class='form-control'><option value = '0' > No</option ><option value='1'>Yes</option></select ></td></tr> ";
                           }

                            table.row.add($(newRow));
                        });
                        table.draw();
                        $('select').select2();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });

        }
    function GetEmployeePermissions(CashierID) {
        debugger
        var table = $("#dtPermissions").DataTable();

        //var CashierID = $("#txtCashierID").val();
        /*if (Category == "" || Category == null || Category == undefined) { Category = 0; }*/
        var headers = {};
        var token = $('input[name="__RequestVerificationToken"]').val();
        headers['__RequestVerificationToken'] = token;

        $.ajax({
            type: "POST",
            headers: headers,
            contentType: "application/json; charset=utf-8",
            url: "/EmployeeList/GetEmployeePermissions",

            data: JSON.stringify({ CashierID: CashierID }),
            dataType: "json",
            success: function (result) {

                if (result != null && result != "Error") {
                    table.clear();


                    $.each(result, function (i, Data) {

                        var select1 = "";
                        var select2 = "";
                        var select3 = "";
                        var select4 = "";
                        var CatDesc = "";
                        var checked = "";




                        if (Data.AccessLevel == 0) {
                            select1 = "selected"
                        }
                        else if (Data.AccessLevel == 1) {
                            select2 = "selected"
                        }
                        else if (Data.AccessLevel == 2) {
                            select3 = "selected"
                        }
                        else if (Data.AccessLevel == 3) {
                            select4 = "selected"
                        }




                        if (Data.Exception == true) { checked = "checked";}

                        if (Data.Category == 0) {
                            CatDesc = "Functionality"
                        }
                        else if (Data.Category == 1) {
                            CatDesc = "Inventory"
                        }
                        else if (Data.Category == 2) {
                            CatDesc = "Customers"
                        }
                        else if (Data.Category == 3) {
                            CatDesc = "Reports"
                        }
                        else if (Data.Category == 4) {
                            CatDesc = "Setup"
                        }
                        else if (Data.Category == 5) {
                            CatDesc = "Restaurant"
                        }
                        else if (Data.Category == 6) {
                            CatDesc = "Handheld"
                        }
                        if (Data.PermissionType == 0) {
                            var newRow = "<tr><td style='display:none'>" + Data.PermissionID + "</td>" +
                                "<td>" +CatDesc + "</td>" +
                                "<td>" + Data.ShortDescription + "</td>" +
                                "<td>" + Data.LongDescription + "</td>" +
                                "<td><input value='1" + Data.PermissionID + "' type='checkbox' " + checked+"></td>" +
                                "<td><select name='2" + Data.PermissionID + "' id='2" + Data.PermissionID + "' class='form-control'><option value = '0' " + select1 + "> No</option ><option value='1' " + select2 + ">Yes</option><option value='2' " + select3 + ">Prompt</option><option value='3' " + select4 +">Overide</option></select ></td>" +
                                "</tr> ";
                        }
                        else {
                            var newRow = "<tr><td style='display:none'>" + Data.PermissionID + "</td><td>" + CatDesc + "</td><td>" + Data.ShortDescription + "</td><td>" + Data.LongDescription + "</td><td><input value='1" + Data.PermissionID + "' type='checkbox' " + checked + "></td><td><select name='2" + Data.PermissionID + "' id='2" + Data.PermissionID + "' class='form-control'><option value = '0' " + select1 + " > No</option ><option value='1' " + select2 + ">Yes</option></select ></td></tr> ";
                        }

                        table.row.add($(newRow));
                    });
                    table.draw();
                    $('select').select2();
                }
                else {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                    swal("", errorMessage, "error");
                }
            },
            error: function (xhr, status, error) {
                var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                swal("", errorMessage, "error");

            }


        });

    }
    function fnDecryptID(id) {
        try {
            var decryptedID = '0';
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: '/Common/Decrypt/',
                data: JSON.stringify({ ID: id }),
                dataType: "json",
                async: false,
                success: function (result) {
                    if (result != null && result != undefined && result != "" && result != "Error") {
                        if (result != "") {
                            decryptedID = result;
                        }
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");

                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");
                }

            });
            return decryptedID;
        }
        catch (err) {
            swal("Cancelled", err.toString(), "error");
        }
        return '0';
    }

        function GetJobCodeIDS() {
            debugger


            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;

            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Employee/GetJobCodeIDS",

                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {



                        $.each(result, function (i, Data) {

                            $('#ddlJobCodeID').append("<option value='" + Data.JobCodeID + "'> " + Data.JobCodeID + " </option>");
                        });

                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });

        }


        function GetCustomerJobCodes() {
            debugger
            var table = $("#dtJobCodesandWages").DataTable();
           /* JSON.stringify({ Category: Category }),*/
            var CashierID = "0";
             var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;

            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Employee/GetEmployeeJobCodes",
                data:JSON.stringify({ CashierID: CashierID }),
                dataType: "json",
                success: function (result) {
                    debugger;

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {

                            var newRow = "<tr><td style='display:none'>" + Data.Cashier_ID + "</td><td>" + Data.JobCodeID + "</td><td>" + Data.Hourly_Wage + "</td><td>" + Data.OvertimeHourly_Wage +"</td><td></td></tr> ";


                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        debugger;
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {

                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });

        }

        $("#JobCodesandWagesForm").submit(function (event) {

            debugger;
            event.preventDefault();
            $('#JobCodesandWagesmodal').modal('hide');
            if ($('#btnJobCodesandWages').text() == 'Update') {
                var SrID = $('#txtGroupModifierDetailSrID').val();
                let ID = $("#txtModifierGroupDetailID").val();
                let GroupModifierID = $("#ddlModifierGroupID").val();
                let GroupModifierDescription = $("#ddlModifierGroupID option:selected").text();
                let Prompt = $("#txtPrompt").val();

                let NoToSelect = $("#ddlNumberToSelectID").val() + " " + $("#NumberToSelet").val();


                let Charge = $('#chkChargeForThisItem').is(":checked");
                let chkForced = $('#chkForced').is(":checked");
                fnUpdateGroupModifierDetilRecord(SrID, ID, GroupModifierID, GroupModifierDescription, Prompt, Charge, NoToSelect, chkForced);
            }
            else {
                AddJobCodesandWagesDetilRecord();
            }


        });

        function AddJobCodesandWagesDetilRecord() {
            try {
                debugger
                let jobCodeCashierID = $("#txtjobCodeCashierID").val();
                jobCodeCashierID = "0";
                let JobCodeID = $("#ddlJobCodeID").val();
                let HourlyWage = $("#txthourlyWage").val();
                let OvertimeHourlyWage = $("#txtOvertimeHourlyWage").val();

                var table = $('#dtJobCodesandWages').DataTable();

                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td hidden>" + jobCodeCashierID + "</td>" +
                    "<td  style='text-align:left' >" + count++ + "</td>" +
                    "<td >" + JobCodeID + "</td>" +
                    "<td>" + HourlyWage + "</td>" +
                    "<td>" + OvertimeHourlyWage + "</td>" +


                    "<td style='text-align:Right'>" +
                    " <div class='list-icons'><div class='dropdown hide'><a href='#' class='btn  bg-orange btn-sm' data-toggle='dropdown' aria-expanded='true'>" +
                    "<i class='icon-menu9'></i></a>" +
                    "<div class='dropdown-menu dropdown-menu-right hide' x-placement='top-end' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Edit'><button hidden onclick='ModifyJobCodesandWagesDetilRecord();'type='button' class='btn bg-primary  btn-sm'  style='color:white'><b><i class='icon-pencil'></i></b></button></span>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delGMRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</div ></div ></div></td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {

                swal("Error", err.toString(), "error");
            }
        }

        function delGMRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#dtJobCodesandWages').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }

        function EmployeeObjCall() {

            var AjaxObj = {
                "Cashier_ID": "",
                "CustNum": "",
                "Password": "",
                "Swipe_ID": "",
                "Hourly_Wage": "",
                "Name": "",
                "Disabled": "",
                "CCTipsNow": "",
                "ReqClockIn": "",
                "First_Name": "",
                "Middle_Name": "",
                "Last_Name": "",
                "SSN": "",
                "Address_1": "",
                "Address_2": "",
                "City": "",
                "State": "",
                "Zip_Code": "",
                "Phone_1": "",
                "EMail": "",
                "Birthday": "",
                "GLNumber": "",
                "OvertimeThreshold": "",
                "Employee_JobCode": [],
                "Permissions": [],
        "Form_Color": "",
                "CFA_Setup_Company": "",
                "CFA_Setup_Tax": "",
                "CFA_Setup_Bonus": "",
                "CFA_Setup_Accounting": "",
                "CFA_Setup_Discounts": "",
                "CFA_Setup_Display": "",
                "CFA_Setup_DefPrinter": "",
                "CFA_Inven_Add": "",
                "CFA_Inven_Edit": "",
                "CFA_Vendors_Add": "",
                "CFA_Vendors_Edit": "",
                "CFA_Depts_Add": "",
                 "CFA_Depts_Edit": "",
                "CFA_Inven_TickVouch": "",
                "CFA_Cust_add": " ",
                "CFA_Cust_Edit": " ",
                "CFA_Reports_Display": "",
                "CFA_Reports_DDR": "",
                "CFA_Reports_Print": "",
                "CFA_Invoice_Discount": "",
                "CFA_Invoice_PriceChange": "",
                "CFA_Invoice_DeleteItems": "",
                "CFA_Invoice_Void": "",
                "CFA_CRE_Acct": "",
                "CFA_CRE_Exit": "",
                    "Dirty": "",
                "EnableMobileInventory": "",
                "CFA_HH_SHARE_PURCHASEORDERS": ""

            };
            var JobCodes = {
                "Cashier_ID": "",
                "JobCodeID": "", "Hourly_Wage": "", "OvertimeHourly_Wage": ""
            };
            var Permissions =
            {
                "Cashier_ID": "",
                "PermissionID": "",
                "AccessLevel": "",
                "Exception": "",

            };
       //    get job code Data
            debugger;
            var tblJobCodes = $("#dtJobCodesandWages").DataTable();


            var tblJobCodesRows = tblJobCodes.rows().data();

            if (tblJobCodesRows.length > 0) {
                $.each(tblJobCodesRows, function (index, value) {


                    JobCodes.JobCodeID = value[2];


 if ($('#btnsave').text() == 'Save') {
                        var a = @Session["StoreID"].ToString();
     JobCodes.Cashier_ID = a + $('#txtCashierID').val();
                    }
                    else {
     JobCodes.Cashier_ID =  $('#txtCashierID').val();


                    }

                    JobCodes.Hourly_Wage = value[3];
                    JobCodes.OvertimeHourly_Wage = value[4];
                    AjaxObj.Employee_JobCode.push(JobCodes);
                    JobCodes = {
                        "Cashier_ID": "",
                        "JobCodeID": "", "Hourly_Wage": "", "OvertimeHourly_Wage": ""
                    }
                });
            }

            // Get permissions Data
            debugger;
            var tblPermissions = $("#dtPermissions").DataTable();
            var tblPermissionsRows = tblPermissions.rows().nodes();

            var tblPRows = tblPermissions.rows().data();
            var dtPermissionsChecked = $('input:checkbox:checked', tblPermissionsRows);
            var dtPermissioSelect = $('select', tblPermissionsRows);

            if (tblPRows.length > 0) {
                $.each(tblPRows, function (index, value) {


                    Permissions.Exception = false;


                        $(dtPermissionsChecked).each(function (indx, value2) {
                            debugger;


                            let aid = $(this).val();

                            let bid = '1' + value[0];

                            if (aid == bid) {

                                Permissions.Exception = true;


                            }


                        });

                    $(dtPermissioSelect).each(function (indx, value2) {
                        debugger;
                        let aid = value2.id;

                        let bid = '2' + value[0];

                        if (aid == bid) {

                            Permissions.AccessLevel = $(this).val();


                        }


                    });




                    if ($('#btnsave').text() == 'Save') {
                        var a = @Session["StoreID"].ToString();
                        Permissions.Cashier_ID = a + $('#txtCashierID').val();
                    }
                    else {
                        Permissions.Cashier_ID = $('#txtCashierID').val();


                    }

                    Permissions.PermissionID = value[0];
                    AjaxObj.Permissions.push(Permissions);
                     Permissions =
                    {
                        "Cashier_ID": "",
                        "PermissionID": "",
                         "AccessLevel": "",
                         "Exception": "",

                    };








                });





            }















            AjaxObj.Cashier_ID = $('#txtCashierID').val();
            AjaxObj.CustNum = "";
            AjaxObj.Password = $('#txtPassword').val();
            AjaxObj.Swipe_ID = $('#txtCardSwipeID').val();
            AjaxObj.Hourly_Wage = $('#txtHourlyWage').val();
            AjaxObj.Name = $('#txtDisplayName').val();

            if ($("#chkDisablethisemployee").is(":checked")) {
                AjaxObj.Disabled =true;
            }
            else {
                AjaxObj.Disabled = false;
            }
              if ($("#CCTips").is(":checked")) {
                AjaxObj.CCTipsNow = true;
            }
            else {
                AjaxObj.CCTipsNo = false;
            }

            if ($("#chkRequireClock").is(":checked")) {
                AjaxObj.ReqClockIn = true;
            }
            else {
                AjaxObj.ReqClockIn = false;
            }





            AjaxObj.First_Name = $('#txtFirstName').val();
            AjaxObj.Middle_Name = $('#txtMiddleName').val();
            AjaxObj.Last_Name = $('#txtLastName').val();

            AjaxObj.SSN = $('#txtSSN').val();
            AjaxObj.Address_1 = $('#txtStreetAddress1').val();
            AjaxObj.Address_2 = $('#txtStreetAddress2').val();
            AjaxObj.City = $('#txtCity').val();
            AjaxObj.State = $('#txtState').val();
            AjaxObj.Zip_Code = $('#txtZipCode').val();
            AjaxObj.Phone_1 = $('#txtPhone').val();
            AjaxObj.EMail = $('#txtEMail').val();
            AjaxObj.Birthday = $('#txtBirthday').val();
            AjaxObj.GLNumber = $('#txtGLNumber').val();
            AjaxObj.OvertimeThreshold = $('#txtOvertimestart').val();


         AjaxObj.Form_Color= "0";



         AjaxObj. CFA_Setup_Company= "0";
                AjaxObj.CFA_Setup_Tax= "0";
                AjaxObj.CFA_Setup_Bonus= "0";
                AjaxObj.CFA_Setup_Accounting= "0";
                AjaxObj.CFA_Setup_Discounts=  "0";
                AjaxObj.CFA_Setup_Display= "0";
                AjaxObj.CFA_Setup_DefPrinter= "0";
                AjaxObj.CFA_Inven_Add= "0";
                AjaxObj.CFA_Inven_Edit ="0";
                AjaxObj.CFA_Vendors_Add=  "0";
                AjaxObj.CFA_Vendors_Edit=  "0";
                AjaxObj.CFA_Depts_Add  = "0";
                 AjaxObj.CFA_Depts_Edit = "0";
                AjaxObj.CFA_Inven_TickVouch= "0";




                AjaxObj.CFA_Cust_add= "0";
               AjaxObj.CFA_Cust_Edit= "0";
                AjaxObj.CFA_Reports_Display= "0";
                AjaxObj.CFA_Reports_DDR= "0";
               AjaxObj.CFA_Reports_Print= "0";
                AjaxObj.CFA_Invoice_Discount= "0";
                AjaxObj.CFA_Invoice_PriceChange= "0";
                AjaxObj.CFA_Invoice_DeleteItems= "0";
                AjaxObj.CFA_Invoice_Void= "0";
                AjaxObj.CFA_CRE_Acct= "0";
                AjaxObj.CFA_CRE_Exit = "0";

            AjaxObj.Dirty= "0";
                AjaxObj.EnableMobileInventory= "0";
                AjaxObj.CFA_HH_SHARE_PURCHASEORDERS= "0";


          return AjaxObj;
        }

        $("#EmployeeForm").submit(function (event) {
            event.preventDefault();
            SaveEmployeeRecord();

        });


        function SaveEmployeeRecord() {
            try {
                debugger;
                if ($('#btnsave').text() == 'Update') { $('#IsValidID').val(true); }
                if ($('#IsValidID').val() != "true" && $('#IsValidID').val() != true) {

                    swal("Warning", "Employee  already exists!", "error");
                }


                else {

                if ($('#btnsave').text() == 'Save') {
                    var Title = "";
                    var Text = "Are you sure you want to Save this record ?";
                    var ConfirmButtonText = "Confirm Save";
                    var CancelButtonText = "Cancel";
                }
                if ($('#btnsave').text() == 'Update') {
                    var Title = "";
                    var Text = "Are you sure you want to Update this record ?";
                    var ConfirmButtonText = "Confirm Update";
                    var CancelButtonText = "Cancel";
                }
                swal(
                    {
                        title: Title,
                        text: Text,
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonText: ConfirmButtonText,
                        cancelButtonText: CancelButtonText,
                        closeOnConfirm: false,
                        closeOnCancel: true
                    },
                    function (isConfirm) {

                        if (isConfirm) {

                            var AjaxObj = EmployeeObjCall();

                            var headers = {};
                            var token = $('input[name="__RequestVerificationToken"]').val();
                            headers['__RequestVerificationToken'] = token;
                            var Url = "";
                            if ($('#btnsave').text() == 'Save') {
                                Url = "/Employee/Create";
                            }
                            else {
                                Url = "/Employee/Update";
                            }

                            $.ajax({
                                type: "POST",
                                headers: headers,
                                contentType: "application/json; charset=utf-8",
                                url: Url,
                                data: JSON.stringify({ "Obj": AjaxObj, "Permissions": AjaxObj.Permissions }),
                                dataType: "json",
                                async: false,
                                success: function (result) {
                                    debugger;
                                    if (result.Code == 200) {
                                        $("#btnsave").text("Update");
                                        $("#btnsaveandList").text("Update and Go to List");
                                        let a = $('#txtCashierID').val();
                                        let b=@Session["StoreID"].ToString();
                                        $('#txtCashierID').val(b + a);
                                        $('#txtCashierID').prop("disabled", true);
                                        swal("", result.Message, result.Type);


                                    }
                                    else {
                                        swal("", result.Message, result.Type);

                                    }

                                },
                                error: function (xhr, status, error) {
                                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                                    swal("", errorMessage, "error");
                                }

                            });


                        }
                        else {

                            swal("Cancelled", "Your operation Canceled :)", "error");
                        }

                    }
                );

            }

            }
            catch (err) {
                swal("Cancelled", err.ToString(), "error");
            }
        }


        function CheckAvailability() {


            var CashierID = $("#txtCashierID").val();
            var IsEdit = $('#txtEdit').val();
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                url: '/Employee/CheckEmployee',
                headers: headers,
                data: JSON.stringify({ CashierID: CashierID, IsEdit: 0 }),

                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {

                    var message = $("#message");
                    if (result == true) {


                        $("#IsValidID").val(result);
        message.html("");

                    }
                    else if (result == false) {

                        message.css("color", "red");
                        message.html("Item Number already exists!");
                        $("#IsValidID").val(result);
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");

                    }

                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");
                }




            });

        }


    function fnCheckIDForEditOnLoad() {
        try {
            var EncryptedID = "";
            var wlss = window.location.search.substring(1);
            if (wlss != null && wlss != undefined & wlss != "") {
                if (wlss.indexOf('&') != -1) {
                    var wlsssplitam = wlss.split('&');
                    if (wlsssplitam.length > 0) {
                        $(wlsssplitam).each(function () {
                            var KeyValue = this;
                            if (KeyValue.indexOf('=') != -1) {
                                var ObjKeyValue = KeyValue.split(/=(.+)/);
                                if (ObjKeyValue[0] != null && ObjKeyValue[0] != undefined && ObjKeyValue[0] == 'ID') {
                                    EncryptedID = ObjKeyValue[1] != null && ObjKeyValue[1] != undefined ? ObjKeyValue[1] : '';
                                    return EncryptedID;
                                }
                            }
                        });
                    }
                }
                else {
                    if (wlss.indexOf('=') != -1) {
                        var ObjKeyValue = wlss.split(/=(.+)/);
                        if (ObjKeyValue[0] != null && ObjKeyValue[0] != undefined && ObjKeyValue[0] == 'ID') {
                            EncryptedID = ObjKeyValue[1];
                        }
                    }
                }
            }
            return EncryptedID;
        } catch (e) {
            return "";
        }
    }



    function LoadEmployDetailsAll(CashierID) {
        $("body").tooltip({ selector: '[data-toggle=tooltip]' });
        $('[data-toggle="tooltip"]').tooltip({ html: true });
        LoadEmployData(CashierID);
        LoadJobCodeandWagesData(CashierID);
        GetEmployeeStores(CashierID);
        GetEmployeePermissions(CashierID);


    }


    function LoadEmployData(CashierID) {
        debugger;
        try {
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                url: '/EmployeeList/LoadEmployeeData',
                type: 'POST',
                data: JSON.stringify({ CashierID: CashierID }),
                headers: headers,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {

                    debugger;
                    if (result != null && result != "Error") {
                        $.each(result, function (i, Data) {

                            $('#txtCashierID').val(Data.Cashier_ID);
                            $('#txtPassword').val(Data.Password);
                            $('#txtCardSwipeID').val(Data.Swipe_ID);
                            $('#txtHourlyWage').val(Data.Hourly_Wage);
                            $('#txtDisplayName').val(Data.Name);
                            $('#txtFirstName').val(Data.First_Name);
                            $('#txtMiddleName').val(Data.Middle_Name);
                            $('#txtLastName').val(Data.Last_Name);
                            $('#txtSSN').val(Data.SSN);
                            $('#txtStreetAddress1').val(Data.Address_1);
                            $('#txtStreetAddress2').val(Data.Address_2);
                            $('#txtCity').val(Data.City);
                            $('#txtState').val(Data.State);
                            $('#txtZipCode').val(Data.Zip_Code);
                            $('#txtPhone').val(Data.Phone_1);
                            $('#txtEMail').val(Data.EMail);

                            txtOvertimestart
                            $('#txtOvertimestart').val(Data.OvertimeThreshold);
                            $('#txtGLNumber').val(Data.GLNumber);
                            if (Data.Disabled == 1) {

                                $("#chkDisablethisemployee").prop("checked", true);
                            }

                            if (Data.CCTipsNow == 1) {

                                $("#CCTips").prop("checked", true);
                            }
                            if (Data.ReqClockIn == 1) {

                                $("#chkRequireClock").prop("checked", true);
                            }

                        });
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }

                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }
            });


        }
        catch (err) {
            swal("Cancelled", err.toString(), "error");
        }
    }

    function LoadJobCodeandWagesData(CashierID) {
        debugger;
        try {
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                url: '/EmployeeList/LoadEmployeeJobCode',
                type: 'POST',
                data: JSON.stringify({ CashierID: CashierID }),
                headers: headers,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    var table = $('#dtJobCodesandWages').DataTable();
                    debugger;
                    if (result != null && result != "Error") {
                        $.each(result, function (i, Data) {



                            var count = 1;
                            count += table.rows().count();


                            var newRow = "<tr><td hidden>" + Data.Cashier_ID + "</td>" +
                                "<td  style='text-align:left' >" + count++ + "</td>" +
                                "<td >" + Data.JobCodeID + "</td>" +
                                "<td>" + Data.Hourly_Wage + "</td>" +
                                "<td>" + Data.OvertimeHourly_Wage + "</td>" +


                                "<td style='text-align:Right'>" +
                                " <div class='list-icons'><div class='dropdown hide'><a href='#' class='btn  bg-orange btn-sm' data-toggle='dropdown' aria-expanded='true'>" +
                                "<i class='icon-menu9'></i></a>" +
                                "<div class='dropdown-menu dropdown-menu-right hide' x-placement='top-end' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Edit'><button hidden onclick='ModifyJobCodesandWagesDetilRecord();'type='button' class='btn bg-primary  btn-sm'  style='color:white'><b><i class='icon-pencil'></i></b></button></span>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delGMRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</div ></div ></div></td></tr>";
                            table.row.add($(newRow));
                        });

                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }

                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }
            });


        }
        catch (err) {
            swal("Cancelled", err.toString(), "error");
        }
    }



    function GetEmployeeStores(CashierID) {
        debugger;
        try {
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                url: '/EmployeeList/GetEmployeeStores',
                type: 'POST',
                data: JSON.stringify({ CashierID: CashierID }),
                headers: headers,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {

                    var table = $('#dtStoreAssociations').DataTable();
                    debugger;
                    if (result != null && result != "Error") {
                        $.each(result, function (i, Data) {






                            var newRow = "<tr><td >" + Data.Store_ID + "</td></tr>";
                            table.row.add($(newRow));
                        });

                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }

                },
                error: function (xhr, status, error) {

                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }
            });


        }
        catch (err) {
            swal("Cancelled", err.toString(), "error");
        }
    }



</script>
}
