


@using System.Configuration;

@{string ImagePath = ConfigurationManager.AppSettings["ImageLocationURL"].ToString();}

<head>
    <title>PayOut Item</title>



</head>


@section styles {

    <link href="~/Content/assets/css/dropzone.css" rel="stylesheet" />
    <style>


        .dz-max-files-reached {
            border-color: red;
        }
    </style>
}


<div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
    <div class="d-flex">
        <div class="breadcrumb">
            <a href="dashboard.cshtml" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
            <span class="breadcrumb-item active">PayOut Item</span>
        </div>
        <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
    </div>
</div>
<div class="card">
    <div class="card-header header-elements-inline search-header">
        <h5 class="card-title">
            <i class=""></i>PayOut Item
        </h5>

    </div>



    <div class="card-body">
        <ul class="nav nav-tabs">
            <li class="nav-item"><a href="#ItemInfo" class="nav-link active show" data-toggle="tab">Item Info </a></li>

            <li class="nav-item"><a href="#OptionalInfo" class="nav-link" data-toggle="tab">Optional Info </a></li>


            <li class="nav-item"><a href="#OrderingInfo" class="nav-link show" data-toggle="tab">Ordering Info</a></li>

            <li class="nav-item"><a href="#Image" class="nav-link" data-toggle="tab">Image </a></li>



        </ul>
        <form id="InventoryForm">
            @Html.AntiForgeryToken()
            <div class="tab-content">


                <div class="tab-pane fade in active  show" id="ItemInfo" style="padding-top:50px">


                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Department
                                    <span class="text-danger"> * </span>
                                </label>
                                <div class="col-md-8">
                                    <select class=" form-control" id="ddlDepartmentID" name="ddlDepartmentID" required>
                                        <option>Select Department</option>
                                    </select>
                                    <input type="hidden" id="txtStoreID" value="0">
                                    <input type="hidden" id="txtItemType" value="15">
                                    <input type="hidden" id="txtRedirection" value="1">

                                </div>
                            </div>

                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Item Number
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtItemNo" name="txtItemNo" maxlength="20" class="form-control" required onkeyup="ClearMessage()" onchange="CheckAvailability();" />
                                    <span id="message"></span>
                                    <input type="hidden" id="IsValidID" value="true">
                                    <input type="hidden" id="txtEdit" value="0">
                                    <input type="hidden" id="txtRowID" value="">


                                </div>
                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Description
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="" id="txtDescription" name="txtDescription" maxlength="30" class="form-control" required />


                                </div>
                            </div>


                        </div>





                    </div>
                    <div class="row">

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Cost
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">
                                    <input type="number" value="0.00" id="txtCost" name="txtCost" class="form-control" required onkeypress="return isNumberKey(event,this)" />



                                </div>
                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Price You Charge
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="number" value="0.00" max="-1" step="0.01" id="txtPriceYouCharge" name="txtPriceYouCharge" maxlength="30" class="form-control" required />


                                </div>
                            </div>


                        </div>


                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Second Description

                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="" id="txtSecondDescription" name="txtSecondDescription" maxlength="30" class="form-control" />


                                </div>
                            </div>


                        </div>


                    </div>



                </div>


                <div class="tab-pane fade in " id="OptionalInfo" style="padding-top:50px">

                    <div class="row">
                        <div class="col-md-4">
                            <label>Lotto Type </label>
                            <div class="col-md-8">
                                <div class="radio ">
                                    <label>        <input type="radio" name="rdLottoType" checked>  Instant </label>


                                    <label>        <input type="radio" name="rdLottoType">  Lotto </label>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Location

                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtLocation" name="txtLocation" maxlength="20" class="form-control" />



                                </div>
                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Unit Size

                                </label>

                                <div class="col-md-8">
                                    <input type="text" value="" id="txtUnitSize" name="nbrUnitSize" maxlength="20" class="form-control" />



                                </div>
                            </div>


                        </div>

                    </div>
                    <div class="row">


                        <div class="col-md-4">

                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Check ID Before Selling

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkCheckIDBeforeSelling" value="true" name="chkCheckIDBeforeSelling">

                                        <label class="custom-control-label" for="chkCheckIDBeforeSelling"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Check ID 2 Before Selling

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkCheckID2BeforeSelling" value="true" name="chkCheckID2BeforeSelling">

                                        <label class="custom-control-label" for="chkCheckID2BeforeSelling"></label>
                                    </div>

                                </div>

                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Disable this Item

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkDisablethisItem" value="true" name="chkDisablethisItem">

                                        <label class="custom-control-label" for="chkDisablethisItem"></label>
                                    </div>

                                </div>

                            </div>


                        </div>



                    </div>


                    <div class="row">

                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Special Permission

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkSpecialPermission" value="true" name="chkSpecialPermission">

                                        <label class="custom-control-label" for="chkSpecialPermission"></label>
                                    </div>

                                </div>

                            </div>


                        </div>


                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Prompt Quantity

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPromptQuantity" value="true" name="chkPromptQuantity">

                                        <label class="custom-control-label" for="chkPromptQuantity"></label>
                                    </div>

                                </div>

                            </div>


                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Hide From TS

                                </label>


                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkHideFromTS" value="true" name="chkHideFromTS">

                                        <label class="custom-control-label" for="chkHideFromTS"></label>
                                    </div>

                                </div>
                            </div>


                        </div>

                    </div>



                    <div class="row">


                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="form-group ">
                                    <label class="col-form-label ">
                                        Count This Item

                                    </label>
                                    <div class="col-md-8">
                                        <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                            <input type="checkbox" class="custom-control-input" id="chkCountThisItem" value="true" name="chkCountThisItem" checked>

                                            <label class="custom-control-label" for="chkCountThisItem"></label>
                                        </div>

                                    </div>

                                </div>


                            </div>
                        </div>




                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Prompt Price

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPromptPrice" value="true" name="chkPromptPrice">

                                        <label class="custom-control-label" for="chkPromptPrice"></label>
                                    </div>

                                </div>

                            </div>

                        </div>

                        <div class="col-md-4">
                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Print On Receipt

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkPrintOnReceipt" value="true" checked name="chkPrintOnReceipt">

                                        <label class="custom-control-label" for="chkPrintOnReceipt"></label>
                                    </div>

                                </div>

                            </div>

                        </div>
                    </div>

                    <div class="card">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddAlternateSKUsDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' onclick="NewSKUID()" data-target='#AlternateSkusModal' style="background-color:white;">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Alternate SKUs</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblAlternateSkus">
                                <thead>
                                    <tr>
                                        <th hidden>ID</th>
                                        <th>Alternate SKUs</th>
                                        <th></th>

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>


                </div>
                <div class="tab-pane fade in" id="OrderingInfo">


                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Reorder Quantity
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="number" value="0" id="txtReorderQuantity" name=" txtReorderQuantity" maxlength="10" class="form-control" required onkeypress="return isNumberKey(event,this)" />


                                </div>
                            </div>
                        </div>



                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Reorder Level
                                    <span class="text-danger"> * </span>
                                </label>
                                <div class="col-md-8">
                                    <input type="number" value="0" id="txtReorderLevel" name="txtReorderLevel" maxlength="10" class="form-control" required onkeypress="return isNumberKey(event,this)" />


                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Reorder Cost
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="0" id="txtReorderCost" name="txtReorderCost" maxlength="10" class="form-control" required onkeypress="return isNumberKey(event,this)" />




                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label ">
                                    Transfer Cost markup
                                    <span class="text-danger"> * </span>
                                </label>

                                <div class="col-md-8">

                                    <input type="text" value="0" id="txtTransferCostMarkup" name="txtTransferCostMarkup" maxlength="10" class="form-control" required onkeypress="return isNumberKey(event,this)" />




                                </div>
                            </div>


                        </div>
                        <div class="col-md-4">

                            <div class="form-group ">
                                <label class="col-form-label ">
                                    Enable Markup

                                </label>
                                <div class="col-md-8">
                                    <div class="custom-control custom-checkbox custom-control-inline col-md-7" style="margin-left: 9px;">
                                        <input type="checkbox" class="custom-control-input" id="chkTransferMarkupEnabled" value="true" name="chkTransferMarkupEnabled">

                                        <label class="custom-control-label" for="chkTransferMarkupEnabled"></label>
                                    </div>

                                </div>

                            </div>


                        </div>
                    </div>

                    <!-- Tag  Along Item-->
                    <div class="card">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">

                                <button type='button' id="btnAddTagAlongItemsDetails" class='btn   btn-labeled btn-labeled-left btn-sm' data-toggle='modal' data-target='#OrderingInfoModal' style="background-color:white;" onclick="NewOrderingInfoItem()">
                                    <b><i class="icon-plus3"></i></b>
                                    Add
                                </button>
                                <span> Pricing From Vendor</span>

                            </h5>


                        </div>
                        <div class="card-body">


                            <table class="table  dataTable no-footer clsdtNoPagingInfo" id="tblVendor">
                                <thead>
                                    <tr>
                                        <th hidden>ID</th>
                                        <th hidden>sr.</th>
                                        <th hidden>VendorNo</th>
                                        <th>Vendor</th>
                                        <th>Part No</th>
                                        <th>Cost Per</th>
                                        <th>Case Cost</th>
                                        <th>Per Case</th>
                                        <th>Preferred</th>
                                        <th></th>




                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>


                </div>

                <div class="tab-pane fade in" id="Image">
                    <div class="card  mt-4">
                        <div class="card-header header-elements-inline search-header">
                            <h5 class="card-title">


                                <span> Inventory Images</span>

                            </h5>


                        </div>
                        <div class="card-body cardNoPaging">
                            <table class="table  dataTable no-footer  clsdtNoPagingInfo" id="dtInventoryImages">
                                <thead>

                                    <tr>
                                        <th>Image</th>
                                        <th hidden>Position</th>
                                        <th></th>

                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    @*<span style="color:cornflowerblue" class="Pics">
                            You can Upload upto <span style="color:cornflowerblue" class="Pics" id="ImageCount">@Model.AllowedPics</span> Pictures .
                        </span>*@

                    <div class="row mb-3">
                        <div class="col-lg-12">
                            <div action="#" class="dropzone" id="my-awesome-dropzone">
                                @Html.AntiForgeryToken()
                                <div class="fallback">
                                    <input name="file" type="file" multiple id="InventoryImages" />
                                </div>
                            </div>


                        </div>
                        <br />

                    </div>
                </div>


            </div>

            <div class="modal-footer">


                <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-lg" style="color:white" onclick="RedirectPage();"><b><i class="icon-cross2"></i></b>Cancel</button>
                <button class="btn btn-primary btn-lg" type="submit" id="btnsave" onclick="SetRedirection(1);">Save</button>
                <button class="btn btn-primary btn-lg" type="submit" id="btnsaveandList" onclick="SetRedirection(2);">Save and Go to List</button>
            </div>
        </form>
        <!-- Div Restrictions -->

    </div>
    <!-- Modals Area -->
    <!-- Alternate Skus -->
</div>

<div id="AlternateSkusModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">

            <form id="AlternateSKUDetailForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Alternate SKUs</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">

                        <div class="form-group row">
                            <label class="control-label col-md-4">
                                Alternate SKUs
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-6">
                                <input type="text" id="txtDetailID" class="form-control" name="ID" style="display:none" />
                                <input type="text" id="txtSKuIDDetailSrID" class="form-control" value="-1" style="display:none" />

                                <input id="txtSKUDescription" type="text" class="form-control" name="Description" maxlength="30" required />


                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>

<!-- Add pricing from Vendor -->

<div id="OrderingInfoModal" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <form id="OrderingInfoDetailForm">

                <div class="modal-header">
                    <h4 class="modal-title"><i class="icon-pencil"></i> <span id="modalHeading" class="caption-subject font-green bold uppercase">Vendor</span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="form-body">

                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Vendor
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">

                                <input type="text" id="txtOrderingInfoDetailID" class="form-control" name="ID" style="display:none" />
                                <input type="text" id="txtOrderingInfoDetailSrID" class="form-control" value="-1" style="display:none" />

                                <select id="ddlVendorOrderingInfoID" class="form-control" required>

                                    <option selected disabled> Select Vendor</option>



                                </select>


                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Vendor Part #
                                <span class="text-danger"> * </span>
                            </label>
                            <div class="col-md-7">
                                <input type="text" id="txtVendorPartNumber" class="form-control" maxlength="20" required>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Cost Per

                            </label>
                            <div class="col-md-7">
                                <input type="text" id="txtCostPer" class="form-control" onkeypress="return isNumberKey(event,this)">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Case Cost

                            </label>
                            <div class="col-md-7">
                                <input type="text" id="txtCaseCost" class="form-control" onkeypress="return isNumberKey(event,this)">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-3">
                                Number In Case

                            </label>
                            <div class="col-md-7">
                                <input type="text" id="txtNumberPerVenCase" class="form-control" onkeypress="return isNumberKey(event,this)">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-6 control-label">Preffered Vendor</label>
                            <div class="custom-control custom-checkbox col-md-4" style="padding-top: calc(.4375rem + 1px);">
                                <input type="checkbox" class="custom-control-input form-control" id="chkIsPreffered" value="true" checked="checked" name="chkIsPreffered" />
                                <label class="custom-control-label" for="chkIsPreffered" style="margin-left:10px"></label>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn bg-danger btn-labeled btn-labeled-left btn-sm" style="color:white" data-dismiss="modal"><b><i class="icon-cross2"></i></b>Close</button>
                    <button type="submit" id="btnOIDetailsave" class="btn btn-primary btn-sm">Add<b><i class="icon-paperplane ml-2"></i></b></button>

                </div>

            </form>

        </div>

    </div>

</div>





@section scripts
{

    <script src="~/Content/assets/js/dropzone.js"></script>
    @*@Scripts.Render("~/bundles/Validation")*@
    @Scripts.Render("~/bundles/DataTableScripts")

    @Scripts.Render("~/bundles/DateScripts")
<script>
    $(document).ready(function () {
        SBInventory();
            try {
                $('.clsdtNoPagingInfo').DataTable({
                    "paging": false, searching: false, ordering: false, info: false, buttons: { dom: { button: { className: 'btn btn-light' } }, buttons: [] }
                });
            } catch (e) { }
            var ROwID = CreateGuid();
            $('#txtRowID').val(ROwID);

            $('#ddlDepartmentID,#ddlVendorOrderingInfoID').select2();
            GetAllVendor();
            GetAllDepartment();
            var EncryptedID = fnCheckIDForEditOnLoad();
            if (EncryptedID != null && EncryptedID != undefined & EncryptedID != "") {
                var ID = fnDecryptID(EncryptedID);
                if (ID != null && ID != undefined && ID != "0") {
                    debugger;
                    LoadInventoryDetailsAll(ID);
                }


            }
        });
        function fnCheckIDForEditOnLoad() {
            try {
                var EncryptedID = "";
                var wlss = window.location.search.substring(1);
                if (wlss != null && wlss != undefined & wlss != "") {
                    if (wlss.indexOf('&') != -1) {
                        var wlsssplitam = wlss.split('&');
                        if (wlsssplitam.length > 0) {
                            $(wlsssplitam).each(function () {
                                var KeyValue = this;
                                if (KeyValue.indexOf('=') != -1) {
                                    var ObjKeyValue = KeyValue.split(/=(.+)/);
                                    if (ObjKeyValue[0] != null && ObjKeyValue[0] != undefined && ObjKeyValue[0] == 'ID') {
                                        EncryptedID = ObjKeyValue[1] != null && ObjKeyValue[1] != undefined ? ObjKeyValue[1] : '';
                                        return EncryptedID;
                                    }
                                }
                            });
                        }
                    }
                    else {
                        if (wlss.indexOf('=') != -1) {
                            var ObjKeyValue = wlss.split(/=(.+)/);
                            if (ObjKeyValue[0] != null && ObjKeyValue[0] != undefined && ObjKeyValue[0] == 'ID') {
                                EncryptedID = ObjKeyValue[1];
                            }
                        }
                    }
                }
                return EncryptedID;
            } catch (e) {
                return "";
            }
        }
        function fnDecryptID(id) {
            try {
                var decryptedID = '0';
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    type: "POST",
                    headers: headers,
                    contentType: "application/json; charset=utf-8",
                    url: '/Common/Decrypt/',
                    data: JSON.stringify({ ID: id }),
                    dataType: "json",
                    async: false,
                    success: function (result) {
                        if (result != null && result != undefined && result != "" && result != "Error") {
                            if (result != "") {
                                decryptedID = result;
                            }
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");

                        }
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");
                    }

                });
                return decryptedID;
            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
            return '0';
        }
        function LoadInventoryDetailsAll(ItemNo) {
            $("body").tooltip({ selector: '[data-toggle=tooltip]' });
            $('[data-toggle="tooltip"]').tooltip({ html: true });
            LoadInventoryData(ItemNo);
            LoadInventoryVendorPricingData(ItemNo);
            LoadInventorySKUSData(ItemNo);
            LoadInventoryImagesData(ItemNo);

        }
        function LoadInventoryData(ItemNo) {
            debugger;
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Inventory/LoadInventoryData',
                    type: 'POST',
                    data: JSON.stringify({ ItemNo: ItemNo }),
                    headers: headers,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {
                        debugger;
                        if (result != null && result != "Error") {
                            $.each(result, function (i, Data) {

                                debugger;
                                $('#btnsave').text('Update');
                                $('#btnsaveandList').text('Update and Go to List');
                                $('#txtItemNo').prop("disabled", true);
                                $('#txtEdit').val(1);
                                $('#txtRowID').val(Data.RowID);
                                $('#txtItemType').val(Data.ItemType);
                                $('#txtVendorNumber').val(Data.Vendor_Number);
                                //egory = 0;
                                $('#txtItemNo').val(Data.ItemNum);
                                $('#txtDescription').val(Data.ItemName);
                                $('#txtStoreID').val(Data.Store_ID);
                                $('#txtAvgCost').val(Data.Cost);
                                $('#txtPriceYouCharge').val(Data.Price);

                                $('#txtReorderLevel').val(Data.Reorder_Level);
                                $('#txtReorderQuantity').val(Data.Reorder_Quantity);




                                $('#ddlDepartmentID').val(Data.Dept_ID).change();
                                Data.IsKit = false;




                                $('#txtLocation').val(Data.Location);




                                $('#txtReorderCost').val(Data.ReOrder_Cost);

                                if (Data.Check_ID == true) {
                                    $("#chkCheckIDBeforeSelling").prop("checked", true)
                                }
                                else {
                                    $("#chkCheckIDBeforeSelling").prop("checked", false)
                                }
                                if (Data.Prompt_Price == true) {
                                    $("#chkPromptPrice").prop("checked", true)
                                }
                                else {
                                    $("#chkPromptPrice").prop("checked", false)
                                }
                                if (Data.Prompt_Quantity == true) {
                                    $("#chkPromptQuantity").prop("checked", true)
                                }
                                else {
                                    $("#chkPromptQuantity").prop("checked", false)
                                }






                                $('#txtUnitSize').val(Data.Unit_Size);
                                if (Data.Special_Permission == true) {
                                    $("#chkSpecialPermission").prop("checked", true)
                                }
                                else {
                                    $("#chkSpecialPermission").prop("checked", false)
                                }
                                if (Data.Prompt_Description == true) {
                                    $("#chkPromptdescription").prop("checked", true)
                                }
                                else {
                                    $("#chkPromptdescription").prop("checked", false)
                                }
                                if (Data.Check_ID2 == true) {
                                    $("#chkCheckID2BeforeSelling").prop("checked", true)
                                }
                                else {
                                    $("#chkCheckID2BeforeSelling").prop("checked", false)
                                }
                                if (Data.Count_This_Item == true) {
                                    $("#chkCountThisItem").prop("checked", true)
                                }
                                else {
                                    $("#chkCountThisItem").prop("checked", false)
                                }
                                if (Data.Print_On_Receipt == true) {
                                    $("#chkPrintOnReceipt").prop("checked", true)
                                }
                                else {
                                    $("#chkPrintOnReceipt").prop("checked", false)
                                }

                                $('#txtTransferCostMarkup').val(Data.Transfer_Cost_Markup);

                                if (Data.Transfer_Markup_Enabled) {

                                    $("#chkTransferMarkupEnabled").prop("checked", true);
                                }
                                else {
                                    $("#chkTransferMarkupEnabled").prop("checked", false);
                                }





                                $('#txtSecondDescription').val(Data.ItemName_Extra);







                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function LoadInventoryVendorPricingData(ItemNum) {
            var table = $("#tblVendor").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryInventoryVendor",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {
                            debugger;
                            if ($('#txtVendorNumber').val() == Data.Vendor_Number) {
                                var dtIsPrefferedExists = 0;
                                var dtIP = $('#tblVendor').DataTable();
                                var dtIPRows = dtIP.rows().data();
                                var dtVendorDetailCount = dtIPRows.rows().data().length;
                                dtVendorDetailCount++;
                                if (dtIPRows.length > 0) {
                                    $.each(dtIPRows, function (index, value) {

                                        var chkIsPreffered = $(value[8]).find('input');
                                        dtIsPrefferedExists += $(chkIsPreffered) != null && $(chkIsPreffered) != undefined && $(chkIsPreffered).is(':checked') ? 1 : 0;

                                    });
                                }
                                if (dtIsPrefferedExists > 0) {




                                    var tblIPDetail = $('#tblVendor').DataTable(), tblRows = tblIPDetail.rows().data();
                                    if (tblRows.length > 0) {

                                        $.each(tblRows, function (index, value) {
                                            let SrNo = Number(index) + 1;
                                            value[8] = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="chkIsPrefferedDetail_' + SrNo + '"  disabled /><label class="custom-control-label" for="chkIsPrefferedDetail_' + SrNo + '" style="margin-left:10px"></label></div>';
                                            tblIPDetail.row(index).data(value);
                                        });

                                    }
                                }



                            }

                            var IsPreffered = $('#txtVendorNumber').val() == Data.Vendor_Number ? 'checked' : '';
                            var chkIsPrimaryID = 'chkIsPrefferedDetail_' + dtVendorDetailCount;
                            var IsPrefferedData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + IsPreffered + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';




                            var newRow = "<tr><td hidden>" + 0 + "</td>" +
                                "<td hidden>" + count + "</td>" +
                                "<td hidden>" + Data.Vendor_Number + "</td>" +
                                "<td>" + Data.Company + "</td>" +
                                "<td>" + Data.Vendor_Part_Num + "</td>" +
                                "<td>" + Data.CostPer + "</td>" +
                                "<td>" + Data.Case_Cost + "</td>" +
                                "<td>" + Data.NumPerVenCase + "</td>" +
                                "<td>" + IsPrefferedData + "</td>" +
                                "<td style='text-align:Right'>" +
                                " <div class='list-icons'><div class='dropdown hide'><a href='#' class='btn  bg-orange btn-sm' data-toggle='dropdown' aria-expanded='true'>" +
                                "<i class='icon-menu9'></i></a>" +
                                "<div class='dropdown-menu dropdown-menu-right hide' x-placement='top-end' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Edit'><button onclick='ModifyOrderingInfoDetailRecord(" + 0 + ",this);'type='button' class='btn bg-primary  btn-sm'  style='color:white'><b><i class='icon-pencil'></i></b></button></span>" +
                                "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delOIRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</div ></div ></div></td></tr>";

                            table.row.add($(newRow));
                            count++;
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        function LoadInventorySKUSData(ItemNum) {
            var table = $("#tblAlternateSkus").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummarySKUS",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {

                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {


                            var newRow = "<tr><td hidden>" + Data.ItemNum + "</td>" +
                                "<td>" + Data.AltSKU + "</td>" +
                                "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delSKURow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
         function LoadInventoryImagesData (ItemNum) {
            var table = $("#dtInventoryImages").DataTable();
            var count = 1;
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                headers: headers,
                contentType: "application/json; charset=utf-8",
                url: "/Inventory/GetTableSummaryInventoryImages",
                data: JSON.stringify({ ItemNum: ItemNum }),
                dataType: "json",
                success: function (result) {
                    debugger;
                    if (result != null && result != "Error") {
                        table.clear();


                        $.each(result, function (i, Data) {
                            debugger;



                             var newRow = "<tr><td><input type='hidden' value='" + Data.ImageLocation + "'><div class='item'><img src='@ImagePath" + Data.ImageLocation + "?" + (new Date()).getTime()+"' class='img-responsive pic-bordered' alt=''  style='width:80px;height:px;'></div></td>" +
                                 "<td hidden>"+Data.Position+"</td>"+
                                 "<td><span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delIIRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                                "</td></tr>";

                            table.row.add($(newRow));
                        });
                        table.draw();
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");
                    }
                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");

                }


            });
        }
        $("#AlternateSKUDetailForm").submit(function (event) {
            debugger;
            event.preventDefault();
            AddSKUDetailRecord();
        });
        $("#OrderingInfoDetailForm").submit(function (event) {
            debugger;
            event.preventDefault();
            $('#OrderingInfoModal').modal('hide');
            if ($('#btnOIDetailsave').text() == 'Update') {
                var SrID = $('#txtOrderingInfoDetailSrID').val();
                let ID = $("#txtOrderingInfoDetailID").val();
                let VendorID = $("#ddlVendorOrderingInfoID").val();
                let VendorDescription = $("#ddlVendorOrderingInfoID option:selected").text();
                let VendorPNo = $("#txtVendorPartNumber").val();
                let CostPer = $("#txtCostPer").val();
                let CaseCost = $("#txtCaseCost").val();
                let NoPerCase = $("#txtNumberPerVenCase").val();
                let IsPreffered = $('#chkIsPreffered').is(":checked");
                fnUpdateOrderingInfoDetilRecord(SrID, ID, VendorID, VendorDescription, VendorPNo, CostPer, CaseCost, NoPerCase, IsPreffered);
            }
            else {
                AddOrderingInfoDetilRecord();
            }


        });
        function AddOrderingInfoDetilRecord() {
            try {

                let ID = $("#txtOrderingInfoDetailID").val();
                let VendorID = $("#ddlVendorOrderingInfoID").val();
                let VendorDescription = $("#ddlVendorOrderingInfoID option:selected").text();
                let VendorPNo = $("#txtVendorPartNumber").val();
                let CostPer = $("#txtCostPer").val();
                let CaseCost = $("#txtCaseCost").val();
                let NoPerCase = $("#txtNumberPerVenCase").val();

                if ($('#chkIsPreffered').is(":checked")) {
                    var dtIsPrefferedExists = 0;
                    var dtIP = $('#tblVendor').DataTable();
                    var dtIPRows = dtIP.rows().data();
                    var dtVendorDetailCount = dtIPRows.rows().data().length;
                    dtVendorDetailCount++;
                    if (dtIPRows.length > 0) {
                        $.each(dtIPRows, function (index, value) {

                            var chkIsPreffered = $(value[8]).find('input');
                            dtIsPrefferedExists += $(chkIsPreffered) != null && $(chkIsPreffered) != undefined && $(chkIsPreffered).is(':checked') ? 1 : 0;

                        });
                    }
                    if (dtIsPrefferedExists > 0) {




                        var tblIPDetail = $('#tblVendor').DataTable(), tblRows = tblIPDetail.rows().data();
                        if (tblRows.length > 0) {

                            $.each(tblRows, function (index, value) {
                                let SrNo = Number(index) + 1;
                                value[8] = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="chkIsPrefferedDetail_' + SrNo + '"  disabled /><label class="custom-control-label" for="chkIsPrefferedDetail_' + SrNo + '" style="margin-left:10px"></label></div>';
                                tblIPDetail.row(index).data(value);
                            });

                        }
                    }



                }

                var IsPreffered = $('#chkIsPreffered').is(":checked") ? 'checked' : '';
                var chkIsPrimaryID = 'chkIsPrefferedDetail_' + dtVendorDetailCount;
                var IsPrefferedData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + IsPreffered + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';




                var table = $('#tblVendor').DataTable();

                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td hidden>" + ID + "</td>" +
                    "<td  style='text-align:left' hidden>" + count++ + "</td>" +
                    "<td hidden>" + VendorID + "</td>" +
                    "<td>" + VendorDescription + "</td>" +
                    "<td>" + VendorPNo + "</td>" +
                    "<td>" + CostPer + "</td>" +
                    "<td>" + CaseCost + "</td>" +
                    "<td>" + NoPerCase + "</td>" +
                    "<td>" + IsPrefferedData + "</td>" +
                    "<td style='text-align:Right'>" +
                    " <div class='list-icons'><div class='dropdown hide'><a href='#' class='btn  bg-orange btn-sm' data-toggle='dropdown' aria-expanded='true'>" +
                    "<i class='icon-menu9'></i></a>" +
                    "<div class='dropdown-menu dropdown-menu-right hide' x-placement='top-end' style='text-align:center;position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-158px, -127px, 0px);min-width: 6.50rem;padding:0.2rem 0!important;'>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Edit'><button onclick='ModifyOrderingInfoDetailRecord(" + ID + ",this);'type='button' class='btn bg-primary  btn-sm'  style='color:white'><b><i class='icon-pencil'></i></b></button></span>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delOIRow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</div ></div ></div></td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }
        function AddSKUDetailRecord() {
            try {
                $('#AlternateSkusModal').modal('hide');
                let ID = $("#txtDetailID").val();
                let Description = $("#txtSKUDescription").val();



                var table = $('#tblAlternateSkus').DataTable();

                var count = 1;
                count += table.rows().count();


                var newRow = "<tr><td hidden>" + ID + "</td>" +
                    "<td>" + Description + "</td>" +
                    "<td>" +
                    "<span class='red-tooltip' data-toggle='tooltip' title='Delete'><button onclick='delSKURow(this);'type='button' class='btn bg-danger btn-sm'  style='color:white'><b><i class='icon-bin'></i></b></button></span>" +
                    "</td></tr>";

                table.row.add($(newRow));
                table.draw();
            }
            catch (err) {
                swal("Error", err.toString(), "error");
            }
        }
        function ModifyOrderingInfoDetailRecord(ID, btn) {

            debugger;


            $('#txtOrderingInfoDetailID').val(ID);

            $('#OrderingInfoModal').modal('show');
            $('#btnOIDetailsave').show();
            $('#btnOIDetailsave').text('Update');
            var btnrow = $(btn).closest("tr");
            var dtOrderingInfoDetail = $("#tblVendor").DataTable();
            var dtOrderingInfoDetailRow = dtOrderingInfoDetail.row(btnrow).data();
            var DetailSrID = dtOrderingInfoDetailRow[1];
            $("#ddlVendorOrderingInfoID").val(dtOrderingInfoDetailRow[2]).change();

            $("#txtVendorPartNumber").val(dtOrderingInfoDetailRow[4]);
            $("#txtCostPer").val(dtOrderingInfoDetailRow[5]);
            $("#txtCaseCost").val(dtOrderingInfoDetailRow[6]);
            $("#txtNumberPerVenCase").val(dtOrderingInfoDetailRow[7]);
            var chkIDIsPreffered = $(dtOrderingInfoDetailRow[8]).find("input[type='checkbox']")[0];
            if ($(chkIDIsPreffered).is(':checked')) {
                $('#chkIsPreffered').prop("checked", true);
            } else {
                $('#chkIsPreffered').prop("checked", false);
            }

            $('#chkIsPreffered').is(":checked");
            DetailSrID = $.isNumeric(DetailSrID) ? Number(DetailSrID) - 1 : -1;
            if (DetailSrID > -1) {


                $('#txtOrderingInfoDetailSrID').val(DetailSrID);
            }
        }
        function fnUpdateOrderingInfoDetilRecord(SRID, ID, VendorID, VendorDescription, VendorPNo, CostPer, CaseCost, NoPerCase, IsPreffered) {
            let dtOrderingInfoDetail = $('#tblVendor').DataTable();
            var dtOrderingInfoDetailRowvalue = dtOrderingInfoDetail.row(SRID).data();
            dtOrderingInfoDetailRowvalue[0] = ID;
            dtOrderingInfoDetailRowvalue[2] = VendorID;
            dtOrderingInfoDetailRowvalue[3] = VendorDescription
            dtOrderingInfoDetailRowvalue[4] = VendorPNo
            dtOrderingInfoDetailRowvalue[5] = CostPer
            dtOrderingInfoDetailRowvalue[6] = CaseCost
            dtOrderingInfoDetailRowvalue[7] = NoPerCase
            if (IsPreffered) {
                var dtIsPrefferedExists = 0;
                var dtIP = $('#tblVendor').DataTable();
                var dtIPRows = dtIP.rows().data();
                var dtVendorDetailCount = dtIPRows.rows().data().length;
                dtVendorDetailCount++;
                if (dtIPRows.length > 0) {
                    $.each(dtIPRows, function (index, value) {

                        var chkIsPreffered = $(value[8]).find('input');
                        dtIsPrefferedExists += $(chkIsPreffered) != null && $(chkIsPreffered) != undefined && $(chkIsPreffered).is(':checked') ? 1 : 0;

                    });
                }
                if (dtIsPrefferedExists > 0) {




                    var tblIPDetail = $('#tblVendor').DataTable(), tblRows = tblIPDetail.rows().data();
                    if (tblRows.length > 0) {

                        $.each(tblRows, function (index, value) {
                            let SrNo = Number(index) + 1;
                            value[8] = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="chkIsPrefferedDetail_' + SrNo + '"  disabled /><label class="custom-control-label" for="chkIsPrefferedDetail_' + SrNo + '" style="margin-left:10px"></label></div>';
                            tblIPDetail.row(index).data(value);
                        });

                    }
                }



            }

            var IsPreffered = $('#chkIsPreffered').is(":checked") ? 'checked' : '';
            var chkIsPrimaryID = 'chkIsPrefferedDetail_' + dtVendorDetailCount;
            var IsPrefferedData = '<div class="custom-control custom-checkbox"><input type ="checkbox" class="custom-control-input form-control" id="' + chkIsPrimaryID + '" ' + IsPreffered + ' disabled /><label class="custom-control-label" for="' + chkIsPrimaryID + '" style="margin-left:10px"></label></div>';

            dtOrderingInfoDetailRowvalue[8] = IsPrefferedData
            dtOrderingInfoDetail.row(SRID).data(dtOrderingInfoDetailRowvalue);
            dtOrderingInfoDetail.draw();
        }
        function delOIRow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblVendor').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function delSKURow(i) {
            try {

                var row = $(i).closest("tr");
                var table1 = $('#tblAlternateSkus').DataTable();
                table1.row(row).remove().draw(false);

            } catch (Exception) {
                console.log("Exception Error in deleting option " + Exception);
            }
        }
        function NewSKUID() {
            $('#modalHeading').text(" New Record");

            $('#AlternateSkusModal').modal('show');
            $('#txtSKUDescription').val('');
            $('#txtDetailID').val(0);
            $('#btnDetailsave').show();
            $('#btnDetailsave').text('Add');
            $('#txtSKUDetailSrID').val('-1');
        }
        function NewOrderingInfoItem() {


            ////$('#modalHeading').text(" New Record");

            $('#OrderingInfoModal').modal('show');
            $('#ddlVendorOrderingInfoID').val('').change();
            $('#txtVendorPartNumber').val('');
            $('#txtCostPer').val('');
            $('#txtCaseCost').val('');
            $('#txtNumberPerVenCase').val('');
            $('#chkIsPreffered').prop("checked", true);
            $('#txtOrderingInfoDetailID').val(0);
            $('#btnOIDetailsave').show();
            $('#btnOIDetailsave').text('Add');
            $('#txtOrderingInfoDetailSrID').val('-1');
        }
        $('#ddlDepartmentID').change(function () {

            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                url: '/Common/GetStoreID',
                headers: headers,
                data: JSON.stringify({ DepartmentID: $('#ddlDepartmentID').val() }),
                async: false,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {

                    if (result != null) {

                        $('#txtStoreID').val(result);
                    }

                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");

                    }

                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");
                }




            });
        });
        $("#InventoryForm").submit(function (event) {
            event.preventDefault();
            SaveRecord();
        });
        function SaveRecord() {
            try {


                if ($('#IsValidID').val() != "true" && $('#IsValidID').val() != true) {

                    swal("Warning", "Item Number already exists!", "error");
                }
                else {


                    if ($('#btnsave').text() == 'Save') {
                        var Title = "";
                        var Text = "Are you sure you want to Save this record ?";
                        var ConfirmButtonText = "Confirm Save";
                        var CancelButtonText = "Cancel";
                    }
                    if ($('#btnsave').text() == 'Update') {
                        var Title = "";
                        var Text = "Are you sure you want to Update this record ?";
                        var ConfirmButtonText = "Confirm Update";
                        var CancelButtonText = "Cancel";
                    }
                    swal(
                        {
                            title: Title,
                            text: Text,
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonText: ConfirmButtonText,
                            cancelButtonText: CancelButtonText,
                            closeOnConfirm: false,
                            closeOnCancel: true
                        },
                        function (isConfirm) {

                            if (isConfirm) {
                                var AjaxObj = InventoryObjCall();

                                var headers = {};
                                var token = $('input[name="__RequestVerificationToken"]').val();
                                headers['__RequestVerificationToken'] = token;
                                var Url = "";
                                if ($('#btnsave').text() == 'Save') {
                                    Url = "/PayOutItems/Create";
                                }
                                else {
                                    Url = "/PayOutItems/Update";
                                }

                                $.ajax({
                                    type: "POST",
                                    headers: headers,
                                    contentType: "application/json; charset=utf-8",
                                    url: Url,
                                    data: JSON.stringify({ "Obj": AjaxObj }),
                                    dataType: "json",
                                    async: false,
                                    success: function (result) {
                                        if (result.Code == 200) {

                                            SaveInventoryImages($("#txtItemNo").val());

                                        }
                                        else {
                                            swal("", result.Message, result.Type);

                                        }

                                    },
                                    error: function (xhr, status, error) {
                                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                                        swal("", errorMessage, "error");
                                    }

                                });


                            }
                            else {

                                swal("Cancelled", "Your operation Canceled :)", "error");
                            }

                        }
                    );
                }
            }
            catch (err) {
                swal("Cancelled", err.ToString(), "error");
            }
        }
        function isNumberKey(evt, obj) {

            var charCode = (evt.which) ? evt.which : event.keyCode
            var value = obj.value;
            var dotcontains = value.indexOf(".") != -1;
            if (dotcontains)
                if (charCode == 46) return false;
            if (charCode == 46) return true;
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }
        function InventoryObjCall() {
            debugger;
            var AjaxObj = {
                "ItemNum": "",
                "ItemName": "",
                "Store_ID": "",
                "Cost": "",
                "Price": "",
                "Retail_Price": "",
                "In_Stock": "",
                "Reorder_Level": "",
                "Reorder_Quantity": "",
                "Tax_1": "",
                "Tax_2": "",
                "Tax_3": "",
                "Vendor_Number": "",
                "Dept_ID": "",
                "IsKit": "",
                "IsModifier": "",
                "Kit_Override": "",
                "Inv_Num_Barcode_Labels": "",
                "Use_Serial_Numbers": "",
                "Num_Bonus_Points": "",
                "IsRental": "",
                "Use_Bulk_Pricing": "",
                "Print_Ticket": "",
                "Print_Voucher": "",
                "Num_Days_Valid": "",
                "IsMatrixItem": "",
                "Vendor_Part_Num": "",
                "Location": "",
                "AutoWeigh": "",
                "numBoxes": "",
                "Dirty": "",
                "Tear": "",
                "NumPerCase": "",
                "FoodStampable": "",
                "ReOrder_Cost": "",
                "Helper_ItemNum": "",
                "ItemName_Extra": "",
                "Exclude_Acct_Limit": "",
                "Check_ID": "",
                "Old_InStock": "",
                "Date_Created": "",
                "ItemType": "",
                "Prompt_Price": "",
                "Prompt_Quantity": "",
                "Inactive": "",
                "Allow_BuyBack": "",
                "Last_Sold": "",
                "Unit_Type": "",
                "Unit_Size": "",
                "Fixed_Tax": "",
                "DOB": "",
                "Special_Permission": "",
                "Prompt_Description": "",
                "Check_ID2": "",
                "Count_This_Item": "",
                "Transfer_Cost_Markup": "",
                "Print_On_Receipt": "",
                "Transfer_Markup_Enabled": "",
                "As_Is": "",
                "InStock_Committed": "",
                "RequireCustomer": "",
                "PromptCompletionDate": "",
                "PromptInvoiceNotes": "",
                "Prompt_DescriptionOverDollarAmt": "",
                "Exclude_From_Loyalty": "",
                "BarTaxInclusive": "",
                "ScaleSingleDeduct": "",
                "GLNumber": "",
                "ModifierType": "",
                "Position": "",
                "numberOfFreeToppings": "",
                "ScaleItemType": "",
                "DiscountType": "",
                "AllowReturns": "",
                "SuggestedDeposit": "",
                "Liability": "",
                "IsDeleted": "",
                "ItemLocale": "",
                "QuantityRequired": "",
                "AllowOnDepositInvoices": "",
                "Import_Markup": "",
                "PricePerMeasure": "",
                "UnitMeasure": "",
                "ShipCompliantProductType": "",
                "AlcoholContent": "",
                "AvailableOnline": "",
                "AllowOnFleetCard": "",
                "DoughnutTax": "",
                "DisplayTaxInPrice": "",
                "NeverPrintInKitchen": "",
                "RowID": "",
                "Tax_4": "",
                "Tax_5": "",
                "Tax_6": "",
                "DisableInventoryUpload": "",
                "InvoiceLimitQty": "",
                "ItemCategory": "",
                "IsRestrictedPerInvoice": "",
                "Inventory_SKUS": [],
                "Inventory_Vendors": []


            };
            var Inventory_SKUS = { "ItemNum": "", "AltSKU": "", "Store_ID": "" };
            var Inventory_Vendors = {
                "ItemNum": "", "Vendor_Number": "", "Store_ID": "", "CostPer": "", "Case_Cost": "", "NumPerVenCase": "",
                "Vendor_Part_Num": "", "CubeCost": "", "WeightCost": "", "OverrideCommission": "", "LandedCost": ""
            };
            var tblSKUIDDetail = $('#tblAlternateSkus').DataTable(), tblRows = tblSKUIDDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                    debugger;
                    Inventory_SKUS.ItemNum = $('#txtItemNo').val();
                    Inventory_SKUS.AltSKU = value[1];
                    Inventory_SKUS.Store_ID = $('#txtStoreID').val();
                    AjaxObj.Inventory_SKUS.push(Inventory_SKUS);
                    Inventory_SKUS = { "ItemNum": "", "AltSKU": "", "Store_ID": "" };
                });
            }
            var tblCPDetail = $('#tblVendor').DataTable(), tblRows = tblCPDetail.rows().data();
            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                    debugger;
                    Inventory_Vendors.ItemNum = $('#txtItemNo').val();
                    Inventory_Vendors.Store_ID = $('#txtStoreID').val();
                    Inventory_Vendors.Vendor_Number = value[2];
                    Inventory_Vendors.Vendor_Part_Num = value[4];
                    Inventory_Vendors.CostPer = value[5];
                    Inventory_Vendors.Case_Cost = value[6];
                    Inventory_Vendors.NumPerVenCase = value[7];
                    Inventory_Vendors.LandedCost = 0;
                    var chkIDIsPreffered = $(value[8]).find("input[type='checkbox']")[0];
                    var IsPreffered = $(chkIDIsPreffered).is(':checked') ? true : false;//check box is check then
                    if (IsPreffered) {
                        AjaxObj.Vendor_Number = Inventory_Vendors.Vendor_Number;
                        AjaxObj.Vendor_Part_Num = Inventory_Vendors.Vendor_Part_Num;

                    }

                    AjaxObj.Inventory_Vendors.push(Inventory_Vendors);
                    Inventory_Vendors = {
                        "ItemNum": "", "Vendor_Number": "", "Store_ID": "", "CostPer": "", "Case_Cost": "", "NumPerVenCase": "",
                        "Vendor_Part_Num": "", "CubeCost": "", "WeightCost": "", "OverrideCommission": "", "LandedCost": "", "LandedCost": ""
                    };
                });
            }

            var d = new Date();
            var month = d.getMonth() + 1;
            var day = d.getDate();
            var EntryDate = (('' + day).length < 2 ? '0' : '') + day + '/' + (('' + month).length < 2 ? '0' : '') + month + '/' + d.getFullYear();


            AjaxObj.IsDeleted = 0;
            AjaxObj.RowID = $('#txtRowID').val();
            AjaxObj.ItemType = $('#txtItemType').val();
            AjaxObj.ItemCategory = 1;
            AjaxObj.ItemNum = $('#txtItemNo').val();
            AjaxObj.ItemName = $('#txtDescription').val();
            AjaxObj.Store_ID = $('#txtStoreID').val();
            AjaxObj.Cost = $('#txtAvgCost').val();
            AjaxObj.Price = $('#txtPriceYouCharge').val();
            AjaxObj.Reorder_Level = $('#txtReorderLevel').val();
            AjaxObj.Reorder_Quantity = $('#txtReorderQuantity').val();
            AjaxObj.Retail_Price = 0;
            AjaxObj.In_Stock = 0;
            AjaxObj.Transfer_Cost_Markup = $('#txtTransferCostMarkup').val();

            if ($("#chkTransferMarkupEnabled").is(":checked")) {

                AjaxObj.Transfer_Markup_Enabled = true;
            }
            else {
                AjaxObj.Transfer_Markup_Enabled = false;
            }
            AjaxObj.BarTaxInclusive = true;

            AjaxObj.Import_Markup = false;
            AjaxObj.PricePerMeasure = 0;
            AjaxObj.AvailableOnline = false;
            AjaxObj.DoughnutTax = 0;
            AjaxObj.InvoiceLimitQty = 0;
            AjaxObj.IsRestrictedPerInvoice = false;
            AjaxObj.Tax_1 = false;


            AjaxObj.Tax_2 = false;

            AjaxObj.Tax_3 = false;

            AjaxObj.Tax_4 = false;

            AjaxObj.Tax_5 = false;

            AjaxObj.Tax_6 = false;
            if ($("#chkCheckIDBeforeSelling").is(":checked")) {

                AjaxObj.Check_ID = true;
            }
            else {
                AjaxObj.Check_ID = false;
            }
            if ($("#chkSpecialPermission").is(":checked")) {
                AjaxObj.Special_Permission = true;
            }
            else {
                AjaxObj.Special_Permission = false;
            }

            AjaxObj.Dept_ID = $('#ddlDepartmentID').val();
            AjaxObj.IsKit = false;
            AjaxObj.IsModifier = false;

            AjaxObj.Inv_Num_Barcode_Labels = 0;

            AjaxObj.Use_Serial_Numbers = false;
            AjaxObj.Num_Bonus_Points = 0;
            AjaxObj.Print_Ticket = false;
            AjaxObj.Num_Days_Valid = 0;
            AjaxObj.AutoWeigh = false;
            AjaxObj.FoodStampable = false;
            AjaxObj.ReOrder_Cost = $('#txtReorderCost').val();
            AjaxObj.Exclude_Acct_Limit = false;

            if ($("#chkPromptPrice").is(":checked")) {
                AjaxObj.Prompt_Price = true;
            }
            else {
                AjaxObj.Prompt_Price = false;
            }
            if ($("#chkPromptQuantity").is(":checked")) {
                AjaxObj.Prompt_Quantity = true;
            }
            else {
                AjaxObj.Prompt_Quantity = false;
            }
            AjaxObj.Allow_BuyBack = false;
            AjaxObj.Unit_Size = $("#txtUnitSize").val();
            if ($("#chkCheckID2BeforeSelling").is(":checked")) {
                AjaxObj.Check_ID2 = true;
            }
            else {
                AjaxObj.Check_ID2 = false;
            }

            if ($("#chkCountThisItem").is(":checked")) {
                AjaxObj.Count_This_Item = true;
            }
            else {
                AjaxObj.Count_This_Item = false;
            }

            if ($("#chkPrintOnReceipt").is(":checked")) {
                AjaxObj.Print_On_Receipt = true;
            }
            else {
                AjaxObj.Print_On_Receipt = false;
            }
            AjaxObj.Location = $('#txtLocation').val();
            AjaxObj.Prompt_Description = false;

            AjaxObj.RequireCustomer = false;
            AjaxObj.PromptCompletionDate = false;
            AjaxObj.PromptInvoiceNotes = false;
            AjaxObj.NeverPrintInKitchen = false;
            AjaxObj.Exclude_From_Loyalty = false;
            AjaxObj.ScaleSingleDeduct = false;
            AjaxObj.AllowReturns = true;
            AjaxObj.Liability = true;
            AjaxObj.AllowOnDepositInvoices = true;
            AjaxObj.AllowOnFleetCard = false;
            AjaxObj.DisplayTaxInPrice = false;
            AjaxObj.DisableInventoryUpload = false;
            AjaxObj.ItemName_Extra = $('#txtSecondDescription').val();
            AjaxObj.As_Is = false;
            AjaxObj.Date_Created = EntryDate;
            AjaxObj.Num_Bonus_Points = 0;
            AjaxObj.Date_Created = EntryDate;
            AjaxObj.IsRental = 0;
            AjaxObj.Use_Bulk_Pricing = 0;
            AjaxObj.Print_Voucher = 0;
            AjaxObj.IsMatrixItem = false;
            AjaxObj.numBoxes = 0;
            AjaxObj.Dirty = 1;
            return AjaxObj;
        }
        function GetAllDepartment() {
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Common/GetDepartmentAll',
                    type: 'POST',
                    headers: headers,
                    async: false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {

                        if (result != null && result != "" && result != "Error") {
                            $("#ddlDepartmentID,#ddlRecipeItemDepartmentID").html("");
                            $("#ddlDepartmentID,#ddlRecipeItemDepartmentID").append
                                ($('<option  selected value=""></option>').val('').html("Select Department"));
                            $("#ddlItemDepartmentID").html("");
                            $("#ddlItemDepartmentID").append
                                ($('<option  selected value=""></option>').val('').html("Select Department"));
                            $.each($.parseJSON(result), function (i, Data) {
                                $("#ddlItemDepartmentID,#ddlRecipeItemDepartmentID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))
                                $("#ddlDepartmentID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))
                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function GetAllVendor() {
            try {
                var headers = {};
                var token = $('input[name="__RequestVerificationToken"]').val();
                headers['__RequestVerificationToken'] = token;
                $.ajax({
                    url: '/Common/GetVendorAll',
                    type: 'POST',
                    headers: headers,
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {

                        if (result != null && result != "" && result != "Error") {
                            $("#ddlVendorID,#ddlVendorOrderingInfoID,#ddlRecipeVendorID").html("");
                            $("#ddlVendorID,#ddlVendorOrderingInfoID,#ddlRecipeVendorID").append
                                ($('<option  selected value="0"></option>').val('').html("Select Vendor"));
                            $.each($.parseJSON(result), function (i, Data) {
                                $("#ddlVendorID,#ddlVendorOrderingInfoID,#ddlRecipeVendorID").append
                                    ($('<option></option>').val(Data.ID).html(Data.Description))

                            });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }

                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });


            }
            catch (err) {
                swal("Cancelled", err.toString(), "error");
            }
        }
        function ClearMessage() {
            $("#message").html("");
        };
        function CheckAvailability() {


            var ItemNo = $("#txtItemNo").val();
            var IsEdit = $('#txtEdit').val();
            var headers = {};
            var token = $('input[name="__RequestVerificationToken"]').val();
            headers['__RequestVerificationToken'] = token;
            $.ajax({
                type: "POST",
                url: '/Inventory/CheckItemNo',
                headers: headers,
                data: JSON.stringify({ ItemNo: ItemNo, IsEdit: IsEdit }),

                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var message = $("#message");
                    if (result == true) {


                        $("#IsValidID").val(result);
                    }
                    else if (result == false) {
                        message.css("color", "red");
                        message.html("Item Number already exists!");
                        $("#IsValidID").val(result);
                    }
                    else {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                        swal("", errorMessage, "error");

                    }

                },
                error: function (xhr, status, error) {
                    var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                    swal("", errorMessage, "error");
                }




            });

        }
        function RedirectPage() {
            window.location.replace("/InventoryList/Index");

        }
        function CreateGuid() {
            function _p8(s) {
                var p = (Math.random().toString(16) + "000000000").substr(2, 8);
                return s ? "-" + p.substr(0, 4) + "-" + p.substr(4, 4) : p;
            }
            return _p8() + _p8(true) + _p8(true) + _p8();
    }
    function delIIRow(i) {
        try {

            var row = $(i).closest("tr");
            var table1 = $('#dtInventoryImages').DataTable();
            table1.row(row).remove().draw(false);

        } catch (Exception) {
            console.log("Exception Error in deleting option " + Exception);
        }
    }
    var headers = {};
    var token = $('input[name="__RequestVerificationToken"]').val();
    headers['__RequestVerificationToken'] = token;
    Dropzone.options.myAwesomeDropzone = {
        //maxFiles: Number(ImageCount),
        addRemoveLinks: true,
        accept: function (file, done) {

            var width = 0;
            var height = 0;


            // FileReader() asynchronously reads the contents of files (or raw data buffers) stored on the user's computer.
            var reader = new FileReader();
            reader.onload = (function (entry) {
                // The Image() constructor creates a new HTMLImageElement instance.
                var image = new Image();

                image.src = entry.target.result;
                image.onload = function () {
                    width = this.width;
                    height = this.height;
                    console.log(this.width);
                    console.log(this.height);
                    console.log("width: " + width);
                    console.log("height: " + height)
                    //  if (width<400 || height<400)
                    //  {
                    //done("Invalid dimensions!");
                    //  }
                    //else { done(); }
                };
            });

            reader.readAsDataURL(file);

            done();

            //  if (width)
            //  {
            //done("Invalid dimensions!");
            //  }
            //else { done(); }
            //console.log("width: "+file.);
            //console.log("height: "+file.height);
            // done();
        },
        headers: headers
            @* init: function () {
        this.on("maxfilesexceeded", function (file) {
            debugger;

            $(".Pics").css("color", "red");
            //    alert("You can Only Upload"+ @Model.AllowedPics+" Pictures!");

        });
    }*@
        };
    function Dropzonefunc() {

        debugger;
        $('.dropzone')[0].dropzone.options.maxFiles = ImageCount;

    }
    function SaveInventoryImages(ItemNum) {
        var itemNo = ItemNum;
        debugger;
        // alert("my data");
        var InventoryImages = [];
        var urlUploadImage = "/Inventory/UploadImage?ItemNum=" + itemNo;
        var c = 0;
        var headers = {};
        var token = $('input[name="__RequestVerificationToken"]').val();
        headers['__RequestVerificationToken'] = token;
        c = $('table#dtInventoryImages tbody').find('tr:not(:has(th))');

        //var tblCPDetail = $('#dtInventoryImages').DataTable(), tblRows = tblCPDetail.rows().data();
        //if (tblRows.length > 0) {
        //    $.each(tblRows, function (index, value) {
        //        debugger;
        //        var image = $(value[0]).find('input');

        //        InventoryImages.push($(image).val());
        //    });

        if (c.length > 0) {
            c.each(function (i, k) {
                debugger;
                var $td = $(this).find("td");
                InventoryImages.push($td.eq(0).children().first().val());

            });
            debugger;
            if (InventoryImages.length > 0 && InventoryImages != null) {
                var urlStr = "/Inventory/UpdateImage";

                $.ajax({
                    url: urlStr,
                    type: "POST",
                    headers: headers,
                    data: JSON.stringify({ ItemNum, InventoryImages }),
                    contentType: 'application/json; charset=utf-8',
                    //data: json,
                    async: false,
                    //cache: false,
                    success: function (result) {
                        debugger;
                        if (result.Code == 200) {
                            debugger;
                            var myDropzone = Dropzone.forElement(".dropzone");

                            debugger;
                            var data = new FormData();

                            debugger;
                            var files = myDropzone.getAcceptedFiles();
                            var ItemNum = ItemNum;
                            if (files.length > 0) {
                                for (var i = 0; i <= myDropzone.getAcceptedFiles().length; i++) {
                                    data.append("MyImages" + i, files[i]);
                                }


                                debugger;
                                $.ajax({


                                    url: urlUploadImage,
                                    type: "POST",
                                    contentType: false, // Not to set any content header
                                    processData: false, // Not to process data
                                    data: data,
                                    async: false,
                                    headers: headers,
                                    success: function (result) {
                                        debugger;
                                        if (result.Code == 200) {

                                            swal({
                                                title: "",
                                                text: result.Message,
                                                type: result.Type,
                                                showCancelButton: false,
                                                confirmButtonClass: "btn btn-success",
                                                cancelButtonClass: "btn btn-primary",
                                                confirmButtonText: "Ok",
                                                cancelButtonText: "Cancel",
                                                closeOnConfirm: true,
                                                closeOnCancel: true
                                            },
                                                //debugger;
                                                function (isConfirm) {
                                                    if (isConfirm) {
                                                        if ($("#txtRedirection").val() == 2) {
                                                            window.location.replace("/InventoryList/Index");
                                                        }
                                                        else {
                                                            $('#btnsave').text('Update');
                                                            $('#btnsaveandList').text('Update and Go to List');
                                                            $('#txtEdit').val(1);
                                                            $('#txtItemNo').prop("disabled", true);
                                                        }
                                                    }
                                                });
                                        }
                                        else if (result == "Error occurred.") {
                                            alert("Error in uploading file.")
                                        }




                                    }

                                });





                            }
                            else {
                                swal({
                                    title: "",
                                    text: result.Message,
                                    type: result.Type,
                                    showCancelButton: false,
                                    confirmButtonClass: "btn btn-success",
                                    cancelButtonClass: "btn btn-primary",
                                    confirmButtonText: "Ok",
                                    cancelButtonText: "Cancel",
                                    closeOnConfirm: true,
                                    closeOnCancel: true
                                },
                                    //debugger;
                                    function (isConfirm) {
                                        if (isConfirm) {
                                            if ($("#txtRedirection").val() == 2) {
                                                window.location.replace("/InventoryList/Index");
                                            }
                                            else {
                                                $('#btnsave').text('Update');
                                                $('#btnsaveandList').text('Update and Go to List');
                                                $('#txtEdit').val(1);
                                                $('#txtItemNo').prop("disabled", true);
                                            }
                                        }
                                    });
                            }
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }
                });
            }
        }
        else {
            debugger;
            var myDropzone = Dropzone.forElement(".dropzone");

            debugger;
            var data = new FormData();

            debugger;
            var files = myDropzone.getAcceptedFiles();
            var ItemNum = ItemNum;
            if (files.length > 0) {
                for (var i = 0; i <= myDropzone.getAcceptedFiles().length; i++) {
                    data.append("MyImages" + i, files[i]);
                }


                debugger;
                $.ajax({


                    url: urlUploadImage,
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: data,
                    headers: headers,
                    async: false,
                    success: function (result) {
                        debugger;
                        if (result.Code == 200) {

                            swal({
                                title: "",
                                text: result.Message,
                                type: result.Type,
                                showCancelButton: false,
                                confirmButtonClass: "btn btn-success",
                                cancelButtonClass: "btn btn-primary",
                                confirmButtonText: "Ok",
                                cancelButtonText: "Cancel",
                                closeOnConfirm: true,
                                closeOnCancel: true
                            },
                                //debugger;
                                function (isConfirm) {
                                    if (isConfirm) {
                                        if ($("#txtRedirection").val() == 2) {
                                            window.location.replace("/InventoryList/Index");
                                        }
                                        else {
                                            $('#btnsave').text('Update');
                                            $('#btnsaveandList').text('Update and Go to List');
                                            $('#txtEdit').val(1);
                                            $('#txtItemNo').prop("disabled", true);
                                        }
                                    }
                                });
                        }
                        else {
                            var errorMessage = AjaxErrorMessage + ' (Error Code: "400")';
                            swal("", errorMessage, "error");
                        }
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = AjaxErrorMessage + ' (Error Code: ' + xhr.status + ')';
                        swal("", errorMessage, "error");

                    }




                }

                );





            }
            else {
                swal({
                    title: "",
                    text: result.Message,
                    type: result.Type,
                    showCancelButton: false,
                    confirmButtonClass: "btn btn-success",
                    cancelButtonClass: "btn btn-primary",
                    confirmButtonText: "Ok",
                    cancelButtonText: "Cancel",
                    closeOnConfirm: true,
                    closeOnCancel: true
                },
                    //debugger;
                    function (isConfirm) {
                        if (isConfirm) {
                            if ($("#txtRedirection").val() == 2) {
                                window.location.replace("/InventoryList/Index");
                            }
                            else {
                                $('#btnsave').text('Update');
                                $('#btnsaveandList').text('Update and Go to List');
                                $('#txtEdit').val(1);
                                $('#txtItemNo').prop("disabled", true);
                            }
                        }
                    });
            }
        }

    }
    function SetRedirection(type) {
        //1 for save 2 for save and goto list
        $("#txtRedirection").val(type);
    }
</script>

}
